ARM GAS  /tmp/ccmvXlQX.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_spi.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	SPI_AbortRx_ISR:
  23              	.LFB118:
  24              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @file    stm32f1xx_hal_spi.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   @verbatim
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ==============================================================================
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ==============================================================================
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..]
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) SPI pins configuration
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Enable the DMAx clock
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
ARM GAS  /tmp/ccmvXlQX.s 			page 2


  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx(or _rx)  handle to the hspi DMA Tx or Rx hand
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Circular mode restriction:
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) Master 1Line Rx
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Master Receive mode restriction:
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) In Master unidirectional receive-only mode (MSTR =1, BIDIMODE=0, RXONLY=1) or
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           bidirectional receive mode (MSTR=1, BIDIMODE=1, BIDIOE=0), to ensure that the SPI
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           does not initiate a new transfer the following procedure has to be respected:
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) HAL_SPI_DeInit()
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) HAL_SPI_Init()
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Callback registration:
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1U
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxCpltCallback        : SPI Tx Completed callback
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) RxCpltCallback        : SPI Rx Completed callback
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxRxCpltCallback      : SPI TxRx Completed callback
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxHalfCpltCallback    : SPI Tx Half Completed callback
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) RxHalfCpltCallback    : SPI Rx Half Completed callback
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) ErrorCallback         : SPI Error callback
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) AbortCpltCallback     : SPI Abort callback
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) MspInitCallback       : SPI Msp Init callback
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) MspDeInitCallback     : SPI Msp DeInit callback
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           and a pointer to the user callback function.
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           weak function.
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           and the Callback ID.
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           This function allows to reset following callbacks:
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxCpltCallback        : SPI Tx Completed callback
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) RxCpltCallback        : SPI Rx Completed callback
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxRxCpltCallback      : SPI TxRx Completed callback
  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxHalfCpltCallback    : SPI Tx Half Completed callback
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) RxHalfCpltCallback    : SPI Rx Half Completed callback
ARM GAS  /tmp/ccmvXlQX.s 			page 3


  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) ErrorCallback         : SPI Error callback
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) AbortCpltCallback     : SPI Abort callback
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) MspInitCallback       : SPI Msp Init callback
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) MspDeInitCallback     : SPI Msp DeInit callback
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        [..]
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        [..]
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        or HAL_SPI_Init() function.
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        [..]
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        When the compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        not defined, the callback registering feature is not available
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Using the HAL it is not possible to reach all supported SPI frequency with the different SPI
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        the following table resume the max SPI frequency reached with data size 8bits/16bits,
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****          according to frequency of the APBx Peripheral Clock (fPCLK) used by the SPI instance.
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   @endverbatim
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   Additional table :
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        DataSize = SPI_DATASIZE_8BIT:
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |===========================================================================================
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/8  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/128 | Fpclk/
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
ARM GAS  /tmp/ccmvXlQX.s 			page 4


 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        DataSize = SPI_DATASIZE_16BIT:
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |===========================================================================================
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/4  |    NA     |    NA    |    NA     |   NA  
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/32  | Fpclk/
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/4  | Fpclk/4  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/128 | Fpclk/
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        @note The max SPI frequency depend on SPI data size (8bits, 16bits),
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****              SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, 
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        @note
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (#) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HAL
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (#) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (#) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ******************************************************************************
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @attention
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * All rights reserved.</center></h2>
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * the "License"; You may not use this file except in compliance with the
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * License. You may obtain a copy of the License at:
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *                        opensource.org/licenses/BSD-3-Clause
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ******************************************************************************
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #include "stm32f1xx_hal.h"
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @addtogroup STM32F1xx_HAL_Driver
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
ARM GAS  /tmp/ccmvXlQX.s 			page 5


 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI SPI
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief SPI HAL module driver
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U) && defined(SPI_CRC_ERROR_WORKAROUND_FEATURE)
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* CRC WORKAOUND FEATURE: Variable used to determine if device is impacted by implementation
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * of workaround related to wrong CRC errors detection on SPI2. Conditions in which this workaround
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * has to be applied, are:
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  - STM32F101CDE/STM32F103CDE
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  - Revision ID : Z
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  - SPI2
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  - In receive only mode, with CRC calculation enabled, at the end of the CRC reception,
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *     the software needs to check the CRCERR flag. If it is found set, read back the SPI_RXCRC:
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *       + If the value is 0, the complete data transfer is successful.
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *       + Otherwise, one or more errors have been detected during the data transfer by CPU or DMA.
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *    If CRCERR is found reset, the complete data transfer is considered successful.
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * Check RevisionID value for identifying if Device is Rev Z (0x0001) in order to enable workaround
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * CRC errors wrongly detected
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  */
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Pb is that ES_STM32F10xxCDE also identify an issue in Debug registers access while not in Debug 
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * Revision ID information is only available in Debug mode, so Workaround could not be implemented
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * to distinguish Rev Z devices (issue present) from more recent version (issue fixed).
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * So, in case of Revison Z F101 or F103 devices, below define should be assigned to 1.
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  */
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #define  USE_SPI_CRC_ERROR_WORKAROUND   0U
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccmvXlQX.s 			page 6


 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t T
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *  @brief    Initialization and Configuration functions
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @verbatim
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           the selected configuration:
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Mode
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Direction
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Data Size
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Clock Polarity and Phase
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) NSS Management
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) BaudRate Prescaler
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) FirstBit
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) TIMode
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) CRC Calculation
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
ARM GAS  /tmp/ccmvXlQX.s 			page 7


 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           of the selected SPIx peripheral.
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @endverbatim
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi == NULL)
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the parameters */
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* TI mode is not supported on this device.
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      TIMode parameter is mandatory equal to SPI_TIMODE_DISABLE */
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Init the SPI Callback settings */
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
ARM GAS  /tmp/ccmvXlQX.s 			page 8


 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure : NSS management */
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, ((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE));
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, hspi->Init.CRCPolynomial);
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
ARM GAS  /tmp/ccmvXlQX.s 			page 9


 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi == NULL)
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check SPI Instance parameter */
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Release Lock */
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
ARM GAS  /tmp/ccmvXlQX.s 			page 10


 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Register a User SPI Callback
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                            pSPI_CallbackTypeDef pCallback)
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (pCallback == NULL)
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update the error code */
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     switch (CallbackID)
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
ARM GAS  /tmp/ccmvXlQX.s 			page 11


 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       default :
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Update the error code */
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Return error status */
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         status =  HAL_ERROR;
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     switch (CallbackID)
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       default :
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Update the error code */
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Return error status */
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         status =  HAL_ERROR;
ARM GAS  /tmp/ccmvXlQX.s 			page 12


 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update the error code */
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Return error status */
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     status =  HAL_ERROR;
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Release Lock */
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return status;
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     switch (CallbackID)
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
ARM GAS  /tmp/ccmvXlQX.s 			page 13


 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       default :
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Update the error code */
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Return error status */
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         status =  HAL_ERROR;
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     switch (CallbackID)
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       default :
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Update the error code */
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Return error status */
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         status =  HAL_ERROR;
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update the error code */
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Return error status */
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     status =  HAL_ERROR;
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  /tmp/ccmvXlQX.s 			page 14


 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Release Lock */
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return status;
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *  @brief   Data transfers functions
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @verbatim
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ==============================================================================
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                       ##### IO operation functions #####
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  [..]
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     data transfers.
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     (#) There are two modes of transfer:
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             after finishing transfer.
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The end of the data processing will be indicated through the
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             using DMA mode.
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @endverbatim
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint16_t initial_TxXferCount;
ARM GAS  /tmp/ccmvXlQX.s 			page 15


 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   initial_TxXferCount = Size;
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  /tmp/ccmvXlQX.s 			page 16


 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint8_t);
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
ARM GAS  /tmp/ccmvXlQX.s 			page 17


 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error:
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be received
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
ARM GAS  /tmp/ccmvXlQX.s 			page 18


 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount--;
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction: 1Line */
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  /tmp/ccmvXlQX.s 			page 19


1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Transfer loop */
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check the RXNE flag */
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* read the received data */
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Transfer loop */
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check the RXNE flag */
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Handle the CRC Transmission */
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* freeze the CRC before the latest data */
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRCNEXT is well reseted by hardware */
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (READ_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT))
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Workaround to force CRCNEXT bit to zero in case of CRCNEXT is not reset automatically by h
ARM GAS  /tmp/ccmvXlQX.s 			page 20


1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Read the latest data */
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* the latest data has not been received */
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       goto error;
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait the CRC data */
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       goto error;
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     READ_REG(hspi->Instance->DR);
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  /tmp/ccmvXlQX.s 			page 21


1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                           uint32_t Timeout)
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tmp_mode;
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tickstart;
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             txallowed = 1U;
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init temporary variables */
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_state           = hspi->State;
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   initial_TxXferCount = Size;
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
ARM GAS  /tmp/ccmvXlQX.s 			page 22


1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check TXE flag */
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
ARM GAS  /tmp/ccmvXlQX.s 			page 23


1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 0U;
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Enable CRC Transmission */
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check RXNE flag */
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 1U;
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         goto error;
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check TXE flag */
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr++;
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 0U;
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Enable CRC Transmission */
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
ARM GAS  /tmp/ccmvXlQX.s 			page 24


1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr++;
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 1U;
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout =
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         goto error;
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait until TXE flag */
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Error on the CRC reception */
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       goto error;
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Read CRC */
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     READ_REG(hspi->Instance->DR);
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
ARM GAS  /tmp/ccmvXlQX.s 			page 25


1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
ARM GAS  /tmp/ccmvXlQX.s 			page 26


1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the function for IT treatment */
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
ARM GAS  /tmp/ccmvXlQX.s 			page 27


1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the function for IT treatment */
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
ARM GAS  /tmp/ccmvXlQX.s 			page 28


1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             process unlock */
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tmp_mode;
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init temporary variables */
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_state           = hspi->State;
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
ARM GAS  /tmp/ccmvXlQX.s 			page 29


1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the function for IT treatment */
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
ARM GAS  /tmp/ccmvXlQX.s 			page 30


1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check tx dma handle */
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccmvXlQX.s 			page 31


1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA error callback */
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update SPI error code */
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Tx DMA Request */
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   In case of MASTER mode and SPI_DIRECTION_2LINES direction, hdmatx shall be defined.
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check rx dma handle */
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccmvXlQX.s 			page 32


1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check tx dma handle */
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
ARM GAS  /tmp/ccmvXlQX.s 			page 33


1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA error callback */
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update SPI error code */
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Rx DMA Request */
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error:
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                               uint16_t Size)
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tmp_mode;
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check rx & tx dma handles */
ARM GAS  /tmp/ccmvXlQX.s 			page 34


1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init temporary variables */
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_state           = hspi->State;
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) ||
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
ARM GAS  /tmp/ccmvXlQX.s 			page 35


1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA error callback */
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
1935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update SPI error code */
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Rx DMA Request */
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   is performed in DMA reception complete callback  */
1949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
1957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update SPI error code */
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
ARM GAS  /tmp/ccmvXlQX.s 			page 36


1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Tx DMA Request */
1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
1986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle.
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
1988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
1989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         This procedure performs following operations :
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Set handle State to READY
1994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
2001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t resetcount;
2002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Initialized local variable  */
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   errorcode = HAL_OK;
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = resetcount;
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     do
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
2019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
2022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count = resetcount;
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
ARM GAS  /tmp/ccmvXlQX.s 			page 37


2030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     do
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
2039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
2043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count = resetcount;
2044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
2058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable Tx DMA Request */
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until TXE flag is set */
2066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       do
2067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if (count == 0U)
2069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
2070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           break;
2072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         count--;
2074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
2075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
ARM GAS  /tmp/ccmvXlQX.s 			page 38


2087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
2090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable peripheral */
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable Rx DMA Request */
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
2099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
2102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check error during Abort procedure */
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
2112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset errorCode */
2114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
2119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Restore hspi->state to ready */
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
2124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
2128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle.
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         This procedure performs following operations :
2132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Set handle State to READY
2136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
2137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
ARM GAS  /tmp/ccmvXlQX.s 			page 39


2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t abortcplt ;
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
2146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t resetcount;
2147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Initialized local variable  */
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   errorcode = HAL_OK;
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   abortcplt = 1U;
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = resetcount;
2153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     do
2163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
2165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
2168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
2170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
2172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count = resetcount;
2173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     do
2180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
2182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
2185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
2187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
2189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count = resetcount;
2190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      before any call to DMA Abort functions */
2194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Tx Handle is valid */
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Otherwise, set it to NULL */
2199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
ARM GAS  /tmp/ccmvXlQX.s 			page 40


2201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
2202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
2204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Rx Handle is valid */
2209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Otherwise, set it to NULL */
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
2216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
2218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
2231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
2233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         abortcplt = 0U;
2238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         abortcplt = 0U;
2256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
ARM GAS  /tmp/ccmvXlQX.s 			page 41


2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (abortcplt == 1U)
2261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check error during Abort procedure */
2267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
2271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset errorCode */
2275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
2280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Restore hspi->State to Ready */
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
2289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
2293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
2310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
2313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccmvXlQX.s 			page 42


2315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
2327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
2330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
2333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
2337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
2345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
2346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
2347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      */
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream/Channel  */
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmatx))
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream/Channel  */
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmarx))
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
ARM GAS  /tmp/ccmvXlQX.s 			page 43


2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
2373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
2388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
2389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR(hspi);
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
2392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE)
2396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR(hspi);
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
2399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
2403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
2404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (hspi->State != HAL_SPI_STATE_BUSY_TX)
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
2411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         return;
2417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
2422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
2424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
2425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccmvXlQX.s 			page 44


2429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable all interrupts */
2432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
2433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
2435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)
2437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
2439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
2442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
2443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
2446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
2447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           {
2448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           }
2450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
2451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
2453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
2454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
2457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
2458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           {
2459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           }
2461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
2462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user error callback */
2466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
2470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
2474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx Transfer completed callback.
2479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccmvXlQX.s 			page 45


2486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx Transfer completed callback.
2495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx and Rx Transfer completed callback.
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx Half Transfer completed callback.
2527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
2538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx Half Transfer completed callback.
ARM GAS  /tmp/ccmvXlQX.s 			page 46


2543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
2554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx and Rx Half Transfer callback.
2559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  SPI error callback.
2575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle.
2595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccmvXlQX.s 			page 47


2600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
2609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
2612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief   SPI control functions
2613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
2614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @verbatim
2615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
2616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
2618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..]
2619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
2621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @endverbatim
2623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
2624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Return the SPI handle state.
2628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval SPI state
2631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
2633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Return SPI handle state */
2635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return hspi->State;
2636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Return the SPI error code.
2640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval SPI error code in bitmap format
2643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
2645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Return SPI ErrorCode */
2647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return hspi->ErrorCode;
2648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
2652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
2656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
ARM GAS  /tmp/ccmvXlQX.s 			page 48


2657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
2659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief   Private functions
2660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
2661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI transmit process complete callback.
2665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
2673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Normal Mode */
2678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable ERR interrupt */
2681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable Tx DMA Request */
2684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check the end of the transaction */
2687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
2693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
2694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
2696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
2704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Tx complete callback */
2713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
ARM GAS  /tmp/ccmvXlQX.s 			page 49


2714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxCpltCallback(hspi);
2715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
2717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI receive process complete callback.
2722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
2730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Normal Mode */
2735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable ERR interrupt */
2738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* CRC handling */
2742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until RXNE flag */
2745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
2746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Error on the CRC reception */
2748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Read CRC */
2751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
2752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines) *
2756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check the end of the transaction */
2759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
2762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error occurred */
2769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
2770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
ARM GAS  /tmp/ccmvXlQX.s 			page 50


2771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check if CRC error is valid or not (workaround to be applied or not) */
2772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
2773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
2777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SPI_RESET_CRC(hspi);
2778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
2789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Rx complete callback */
2798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxCpltCallback(hspi);
2800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
2802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
2807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
2815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Normal Mode */
2820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable ERR interrupt */
2823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* CRC handling */
2827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
ARM GAS  /tmp/ccmvXlQX.s 			page 51


2828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait the CRC data */
2830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
2831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Read CRC to Flush DR and RXNE flag */
2835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
2836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check the end of the transaction */
2840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
2846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error occurred */
2854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
2855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check if CRC error is valid or not (workaround to be applied or not) */
2857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
2858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
2862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SPI_RESET_CRC(hspi);
2863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
2874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user TxRx complete callback */
2883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxRxCpltCallback(hspi);
ARM GAS  /tmp/ccmvXlQX.s 			page 52


2885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
2887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
2892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
2897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Tx half complete callback */
2901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
2903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
2905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
2910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
2915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Rx half complete callback */
2919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
2921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
2923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
2928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user TxRx half complete callback */
2937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
2939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
2941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccmvXlQX.s 			page 53


2942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
2946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
2951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Stop the disable DMA transfer on SPI side */
2955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user error callback */
2960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
2962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
2964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
2969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma DMA handle.
2971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user error callback */
2980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
2982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
2984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
2989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
2992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma DMA handle.
2993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
ARM GAS  /tmp/ccmvXlQX.s 			page 54


2999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
3001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
3002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable Tx DMA Request */
3004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
3005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (count == 0U)
3010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
3012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
3013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count--;
3015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
3019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
3021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check no error during Abort procedure */
3031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset errorCode */
3034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Abort complete callback */
3044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
3053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
ARM GAS  /tmp/ccmvXlQX.s 			page 55


3056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma DMA handle.
3057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
3065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
3067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable Rx DMA Request */
3069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
3070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Busy flag */
3072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
3075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
3079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
3081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check no error during Abort procedure */
3091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset errorCode */
3094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Abort complete callback */
3104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
ARM GAS  /tmp/ccmvXlQX.s 			page 56


3113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 8bit mode */
3120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *hspi->pRxBuffPtr = *((__IO uint8_t *)&hspi->Instance->DR);
3121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
3123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check end of the reception */
3125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
3131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable RXNE  and ERR interrupt */
3136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Regsiter */
3155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseRxTx_ISR(hspi);
3163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
3169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccmvXlQX.s 			page 57


3170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
3178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transmission */
3180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable TXE interrupt */
3188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable TXE interrupt */
3194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
3205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
3215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
3222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable RXNE interrupt */
ARM GAS  /tmp/ccmvXlQX.s 			page 58


3227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
3239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Regsiter */
3246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE interrupt */
3249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
3252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
3257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
3267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
3269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable TXE interrupt */
3277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable TXE interrupt */
3283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
ARM GAS  /tmp/ccmvXlQX.s 			page 59


3284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
3295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
3317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
3319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
3322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRCNEXT is well reseted by hardware */
3327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (READ_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT))
3328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Workaround to force CRCNEXT bit to zero in case of CRCNEXT is not reset automatically by har
3330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
ARM GAS  /tmp/ccmvXlQX.s 			page 60


3341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
3351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
3378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
3381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRCNEXT is well reseted by hardware */
3386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (READ_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT))
3387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Workaround to force CRCNEXT bit to zero in case of CRCNEXT is not reset automatically by har
3389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
ARM GAS  /tmp/ccmvXlQX.s 			page 61


3398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
3400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
3418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Enable CRC Transmission */
3425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
3444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Enable CRC Transmission */
3451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
ARM GAS  /tmp/ccmvXlQX.s 			page 62


3455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle SPI Communication Timeout.
3460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *              the configuration information for SPI module.
3462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Flag SPI flag to check
3463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  State flag state to check
3464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Tickstart tick start value
3466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
3467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
3469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
3472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
3474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
3476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         on both master and slave sides in order to resynchronize the master
3479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         and slave for their respective CRC calculation */
3480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
3483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
3486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
3487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           /* Disable SPI peripheral */
3488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
3489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
3490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
3492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
3494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
3495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
3496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Process Unlocked */
3500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
3501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         return HAL_TIMEOUT;
3503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
3508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the check of the RX transaction complete.
ARM GAS  /tmp/ccmvXlQX.s 			page 63


3512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Tickstart tick start value
3516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
3517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t 
3519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
3522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI peripheral */
3524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
3525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)
3528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait the RXNE reset */
3530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
3531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return HAL_TIMEOUT;
3534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Control the BSY flag */
3539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return HAL_TIMEOUT;
3543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
3546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the check of the RXTX or TX transaction complete.
3550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle
3551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Tickstart tick start value
3553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
3554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
3556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Control the BSY flag */
3558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_TIMEOUT;
3562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
3564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
3568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccmvXlQX.s 			page 64


3569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
3573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
3575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
3576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
3578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
3579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable ERR interrupt */
3581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (count == 0U)
3587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
3590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count--;
3592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
3595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
3608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
3611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
3612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
3614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
3617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
3618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
3620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
ARM GAS  /tmp/ccmvXlQX.s 			page 65


3626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (hspi->State == HAL_SPI_STATE_BUSY_RX)
3637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user Rx complete callback */
3640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxCpltCallback(hspi);
3642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
3644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
3647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user TxRx complete callback */
3650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxCpltCallback(hspi);
3652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
3654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
3660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
3661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
3674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
3679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccmvXlQX.s 			page 66


3683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
3684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
3698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
3701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
3702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
3706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
3707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
3709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user Rx complete callback */
3726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
3728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
3730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
3735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccmvXlQX.s 			page 67


3740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
3748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
3753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
3755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
3756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
3759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (count == 0U)
3764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
3767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count--;
3769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
3772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
3773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
3775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call user error callback */
3790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
ARM GAS  /tmp/ccmvXlQX.s 			page 68


3797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call user Rx complete callback */
3799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxCpltCallback(hspi);
3801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
3803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle abort a Rx transaction.
3809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
3814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
  25              		.loc 1 3814 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
3815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
  34              		.loc 1 3815 0
  35 0002 154B     		ldr	r3, .L7
  36 0004 1B68     		ldr	r3, [r3]
  37 0006 154A     		ldr	r2, .L7+4
  38 0008 A2FB0323 		umull	r2, r3, r2, r3
  39 000c 5B0A     		lsrs	r3, r3, #9
  40 000e 6422     		movs	r2, #100
  41 0010 02FB03F3 		mul	r3, r2, r3
  42 0014 0193     		str	r3, [sp, #4]
  43              	.L4:
3816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (count == 0U)
  44              		.loc 1 3820 0
  45 0016 019B     		ldr	r3, [sp, #4]
  46 0018 43B1     		cbz	r3, .L6
3821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
3823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
3824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count--;
  47              		.loc 1 3825 0
  48 001a 019B     		ldr	r3, [sp, #4]
  49 001c 013B     		subs	r3, r3, #1
  50 001e 0193     		str	r3, [sp, #4]
3826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
  51              		.loc 1 3826 0
ARM GAS  /tmp/ccmvXlQX.s 			page 69


  52 0020 0368     		ldr	r3, [r0]
  53 0022 9B68     		ldr	r3, [r3, #8]
  54 0024 13F0020F 		tst	r3, #2
  55 0028 F5D0     		beq	.L4
  56 002a 03E0     		b	.L3
  57              	.L6:
3822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
  58              		.loc 1 3822 0
  59 002c 436D     		ldr	r3, [r0, #84]
  60 002e 43F04003 		orr	r3, r3, #64
  61 0032 4365     		str	r3, [r0, #84]
  62              	.L3:
3827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
  63              		.loc 1 3829 0
  64 0034 0268     		ldr	r2, [r0]
  65 0036 1368     		ldr	r3, [r2]
  66 0038 23F04003 		bic	r3, r3, #64
  67 003c 1360     		str	r3, [r2]
3830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
3832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE | SPI_CR2_RXNEIE | SPI_CR2_ERRIE));
  68              		.loc 1 3832 0
  69 003e 0268     		ldr	r2, [r0]
  70 0040 5368     		ldr	r3, [r2, #4]
  71 0042 23F0E003 		bic	r3, r3, #224
  72 0046 5360     		str	r3, [r2, #4]
3833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read CRC to flush Data Register */
3835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
  73              		.loc 1 3835 0
  74 0048 0368     		ldr	r3, [r0]
  75 004a DB68     		ldr	r3, [r3, #12]
3836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
  76              		.loc 1 3837 0
  77 004c 0723     		movs	r3, #7
  78 004e 80F85130 		strb	r3, [r0, #81]
3838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
  79              		.loc 1 3838 0
  80 0052 02B0     		add	sp, sp, #8
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 0
  83              		@ sp needed
  84 0054 7047     		bx	lr
  85              	.L8:
  86 0056 00BF     		.align	2
  87              	.L7:
  88 0058 00000000 		.word	SystemCoreClock
  89 005c F1197605 		.word	91625969
  90              		.cfi_endproc
  91              	.LFE118:
  93              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
  94              		.align	1
  95              		.syntax unified
  96              		.thumb
ARM GAS  /tmp/ccmvXlQX.s 			page 70


  97              		.thumb_func
  98              		.fpu softvfp
 100              	SPI_AbortTx_ISR:
 101              	.LFB119:
3839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx/Tx transaction.
3842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
3847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 102              		.loc 1 3847 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.LVL1:
3848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXEIE interrupt */
3849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE));
 108              		.loc 1 3849 0
 109 0000 0268     		ldr	r2, [r0]
 110 0002 5368     		ldr	r3, [r2, #4]
 111 0004 23F08003 		bic	r3, r3, #128
 112 0008 5360     		str	r3, [r2, #4]
3850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 113              		.loc 1 3852 0
 114 000a 0268     		ldr	r2, [r0]
 115 000c 1368     		ldr	r3, [r2]
 116 000e 23F04003 		bic	r3, r3, #64
 117 0012 1360     		str	r3, [r2]
3853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 118              		.loc 1 3854 0
 119 0014 0723     		movs	r3, #7
 120 0016 80F85130 		strb	r3, [r0, #81]
 121 001a 7047     		bx	lr
 122              		.cfi_endproc
 123              	.LFE119:
 125              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
 126              		.align	1
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu softvfp
 132              	SPI_WaitFlagStateUntilTimeout:
 133              	.LFB112:
3470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 134              		.loc 1 3470 0
 135              		.cfi_startproc
 136              		@ args = 4, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              	.LVL2:
 139 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  /tmp/ccmvXlQX.s 			page 71


 140              	.LCFI2:
 141              		.cfi_def_cfa_offset 24
 142              		.cfi_offset 3, -24
 143              		.cfi_offset 4, -20
 144              		.cfi_offset 5, -16
 145              		.cfi_offset 6, -12
 146              		.cfi_offset 7, -8
 147              		.cfi_offset 14, -4
 148 0002 0546     		mov	r5, r0
 149 0004 0F46     		mov	r7, r1
 150 0006 1646     		mov	r6, r2
 151 0008 1C46     		mov	r4, r3
 152              	.LVL3:
 153              	.L12:
3471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 154              		.loc 1 3471 0
 155 000a 2B68     		ldr	r3, [r5]
 156 000c 9B68     		ldr	r3, [r3, #8]
 157 000e 37EA0303 		bics	r3, r7, r3
 158 0012 0CBF     		ite	eq
 159 0014 0123     		moveq	r3, #1
 160 0016 0023     		movne	r3, #0
 161 0018 B342     		cmp	r3, r6
 162 001a 37D0     		beq	.L20
3473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 163              		.loc 1 3473 0
 164 001c B4F1FF3F 		cmp	r4, #-1
 165 0020 F3D0     		beq	.L12
3475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 166              		.loc 1 3475 0
 167 0022 FFF7FEFF 		bl	HAL_GetTick
 168              	.LVL4:
 169 0026 069B     		ldr	r3, [sp, #24]
 170 0028 C01A     		subs	r0, r0, r3
 171 002a 8442     		cmp	r4, r0
 172 002c 01D9     		bls	.L13
3475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 173              		.loc 1 3475 0 is_stmt 0 discriminator 1
 174 002e 002C     		cmp	r4, #0
 175 0030 EBD1     		bne	.L12
 176              	.L13:
3482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 177              		.loc 1 3482 0 is_stmt 1
 178 0032 2A68     		ldr	r2, [r5]
 179 0034 5368     		ldr	r3, [r2, #4]
 180 0036 23F0E003 		bic	r3, r3, #224
 181 003a 5360     		str	r3, [r2, #4]
3484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 182              		.loc 1 3484 0
 183 003c 6B68     		ldr	r3, [r5, #4]
 184 003e B3F5827F 		cmp	r3, #260
 185 0042 0BD0     		beq	.L21
 186              	.L14:
3492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 187              		.loc 1 3492 0
 188 0044 AB6A     		ldr	r3, [r5, #40]
 189 0046 B3F5005F 		cmp	r3, #8192
ARM GAS  /tmp/ccmvXlQX.s 			page 72


 190 004a 14D0     		beq	.L22
 191              	.L16:
3497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 192              		.loc 1 3497 0
 193 004c 0123     		movs	r3, #1
 194 004e 85F85130 		strb	r3, [r5, #81]
3500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 195              		.loc 1 3500 0
 196 0052 0023     		movs	r3, #0
 197 0054 85F85030 		strb	r3, [r5, #80]
3502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 198              		.loc 1 3502 0
 199 0058 0320     		movs	r0, #3
 200 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 201              	.LVL5:
 202              	.L21:
3484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 203              		.loc 1 3484 0 discriminator 1
 204 005c AB68     		ldr	r3, [r5, #8]
 205 005e B3F5004F 		cmp	r3, #32768
 206 0062 02D0     		beq	.L15
3485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 207              		.loc 1 3485 0
 208 0064 B3F5806F 		cmp	r3, #1024
 209 0068 ECD1     		bne	.L14
 210              	.L15:
3488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 211              		.loc 1 3488 0
 212 006a 2A68     		ldr	r2, [r5]
 213 006c 1368     		ldr	r3, [r2]
 214 006e 23F04003 		bic	r3, r3, #64
 215 0072 1360     		str	r3, [r2]
 216 0074 E6E7     		b	.L14
 217              	.L22:
3494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 218              		.loc 1 3494 0
 219 0076 2A68     		ldr	r2, [r5]
 220 0078 1368     		ldr	r3, [r2]
 221 007a 23F40053 		bic	r3, r3, #8192
 222 007e 1360     		str	r3, [r2]
 223 0080 2A68     		ldr	r2, [r5]
 224 0082 1368     		ldr	r3, [r2]
 225 0084 43F40053 		orr	r3, r3, #8192
 226 0088 1360     		str	r3, [r2]
 227 008a DFE7     		b	.L16
 228              	.L20:
3507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 229              		.loc 1 3507 0
 230 008c 0020     		movs	r0, #0
3508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 231              		.loc 1 3508 0
 232 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 233              		.cfi_endproc
 234              	.LFE112:
 236              		.section	.text.SPI_EndRxTxTransaction,"ax",%progbits
 237              		.align	1
 238              		.syntax unified
ARM GAS  /tmp/ccmvXlQX.s 			page 73


 239              		.thumb
 240              		.thumb_func
 241              		.fpu softvfp
 243              	SPI_EndRxTxTransaction:
 244              	.LFB114:
3556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Control the BSY flag */
 245              		.loc 1 3556 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              	.LVL6:
 250 0000 10B5     		push	{r4, lr}
 251              	.LCFI3:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 4, -8
 254              		.cfi_offset 14, -4
 255 0002 82B0     		sub	sp, sp, #8
 256              	.LCFI4:
 257              		.cfi_def_cfa_offset 16
 258 0004 0446     		mov	r4, r0
3558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 259              		.loc 1 3558 0
 260 0006 0092     		str	r2, [sp]
 261 0008 0B46     		mov	r3, r1
 262 000a 0022     		movs	r2, #0
 263              	.LVL7:
 264 000c 8021     		movs	r1, #128
 265              	.LVL8:
 266 000e FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 267              	.LVL9:
 268 0012 0346     		mov	r3, r0
 269 0014 20B1     		cbz	r0, .L24
3560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_TIMEOUT;
 270              		.loc 1 3560 0
 271 0016 636D     		ldr	r3, [r4, #84]
 272 0018 43F02003 		orr	r3, r3, #32
 273 001c 6365     		str	r3, [r4, #84]
3561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 274              		.loc 1 3561 0
 275 001e 0323     		movs	r3, #3
 276              	.L24:
3564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 277              		.loc 1 3564 0
 278 0020 1846     		mov	r0, r3
 279 0022 02B0     		add	sp, sp, #8
 280              	.LCFI5:
 281              		.cfi_def_cfa_offset 8
 282              		@ sp needed
 283 0024 10BD     		pop	{r4, pc}
 284              		.cfi_endproc
 285              	.LFE114:
 287              		.section	.text.SPI_EndRxTransaction,"ax",%progbits
 288              		.align	1
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu softvfp
ARM GAS  /tmp/ccmvXlQX.s 			page 74


 294              	SPI_EndRxTransaction:
 295              	.LFB113:
3519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 296              		.loc 1 3519 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              	.LVL10:
 301 0000 10B5     		push	{r4, lr}
 302              	.LCFI6:
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 4, -8
 305              		.cfi_offset 14, -4
 306 0002 82B0     		sub	sp, sp, #8
 307              	.LCFI7:
 308              		.cfi_def_cfa_offset 16
 309 0004 0446     		mov	r4, r0
3520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 310              		.loc 1 3520 0
 311 0006 4068     		ldr	r0, [r0, #4]
 312              	.LVL11:
 313 0008 B0F5827F 		cmp	r0, #260
 314 000c 14D0     		beq	.L32
 315              	.L27:
3527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 316              		.loc 1 3527 0
 317 000e 6068     		ldr	r0, [r4, #4]
 318 0010 B0F5827F 		cmp	r0, #260
 319 0014 1DD0     		beq	.L33
 320              	.L29:
3539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 321              		.loc 1 3539 0
 322 0016 0092     		str	r2, [sp]
 323 0018 0B46     		mov	r3, r1
 324 001a 0022     		movs	r2, #0
 325              	.LVL12:
 326 001c 8021     		movs	r1, #128
 327              	.LVL13:
 328 001e 2046     		mov	r0, r4
 329 0020 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 330              	.LVL14:
 331 0024 0346     		mov	r3, r0
 332 0026 20B1     		cbz	r0, .L30
3541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return HAL_TIMEOUT;
 333              		.loc 1 3541 0
 334 0028 636D     		ldr	r3, [r4, #84]
 335 002a 43F02003 		orr	r3, r3, #32
 336 002e 6365     		str	r3, [r4, #84]
3542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 337              		.loc 1 3542 0
 338 0030 0323     		movs	r3, #3
 339              	.L30:
3546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 340              		.loc 1 3546 0
 341 0032 1846     		mov	r0, r3
 342 0034 02B0     		add	sp, sp, #8
 343              	.LCFI8:
ARM GAS  /tmp/ccmvXlQX.s 			page 75


 344              		.cfi_remember_state
 345              		.cfi_def_cfa_offset 8
 346              		@ sp needed
 347 0036 10BD     		pop	{r4, pc}
 348              	.LVL15:
 349              	.L32:
 350              	.LCFI9:
 351              		.cfi_restore_state
3520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 352              		.loc 1 3520 0 discriminator 1
 353 0038 A368     		ldr	r3, [r4, #8]
 354 003a B3F5004F 		cmp	r3, #32768
 355 003e 02D0     		beq	.L28
3521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 356              		.loc 1 3521 0
 357 0040 B3F5806F 		cmp	r3, #1024
 358 0044 E3D1     		bne	.L27
 359              	.L28:
3524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 360              		.loc 1 3524 0
 361 0046 2068     		ldr	r0, [r4]
 362 0048 0368     		ldr	r3, [r0]
 363 004a 23F04003 		bic	r3, r3, #64
 364 004e 0360     		str	r3, [r0]
 365 0050 DDE7     		b	.L27
 366              	.L33:
3527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 367              		.loc 1 3527 0 discriminator 1
 368 0052 A368     		ldr	r3, [r4, #8]
 369 0054 B3F5806F 		cmp	r3, #1024
 370 0058 DDD1     		bne	.L29
3530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 371              		.loc 1 3530 0
 372 005a 0092     		str	r2, [sp]
 373 005c 0B46     		mov	r3, r1
 374 005e 0022     		movs	r2, #0
 375              	.LVL16:
 376 0060 0121     		movs	r1, #1
 377              	.LVL17:
 378 0062 2046     		mov	r0, r4
 379 0064 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 380              	.LVL18:
 381 0068 0346     		mov	r3, r0
 382 006a 0028     		cmp	r0, #0
 383 006c E1D0     		beq	.L30
3532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return HAL_TIMEOUT;
 384              		.loc 1 3532 0
 385 006e 636D     		ldr	r3, [r4, #84]
 386 0070 43F02003 		orr	r3, r3, #32
 387 0074 6365     		str	r3, [r4, #84]
3533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 388              		.loc 1 3533 0
 389 0076 0323     		movs	r3, #3
 390 0078 DBE7     		b	.L30
 391              		.cfi_endproc
 392              	.LFE113:
 394              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
ARM GAS  /tmp/ccmvXlQX.s 			page 76


 395              		.align	1
 396              		.weak	HAL_SPI_MspInit
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 400              		.fpu softvfp
 402              	HAL_SPI_MspInit:
 403              	.LFB67:
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 404              		.loc 1 484 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 409              	.LVL19:
 410 0000 7047     		bx	lr
 411              		.cfi_endproc
 412              	.LFE67:
 414              		.section	.text.HAL_SPI_Init,"ax",%progbits
 415              		.align	1
 416              		.global	HAL_SPI_Init
 417              		.syntax unified
 418              		.thumb
 419              		.thumb_func
 420              		.fpu softvfp
 422              	HAL_SPI_Init:
 423              	.LFB65:
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 424              		.loc 1 336 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              	.LVL20:
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 429              		.loc 1 338 0
 430 0000 0028     		cmp	r0, #0
 431 0002 39D0     		beq	.L38
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 432              		.loc 1 336 0
 433 0004 10B5     		push	{r4, lr}
 434              	.LCFI10:
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 4, -8
 437              		.cfi_offset 14, -4
 438 0006 0446     		mov	r4, r0
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 439              		.loc 1 366 0
 440 0008 0023     		movs	r3, #0
 441 000a 8362     		str	r3, [r0, #40]
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 442              		.loc 1 369 0
 443 000c 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
 444 0010 002B     		cmp	r3, #0
 445 0012 2CD0     		beq	.L43
 446              	.LVL21:
 447              	.L37:
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccmvXlQX.s 			page 77


 448              		.loc 1 398 0
 449 0014 0223     		movs	r3, #2
 450 0016 84F85130 		strb	r3, [r4, #81]
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 451              		.loc 1 401 0
 452 001a 2268     		ldr	r2, [r4]
 453 001c 1368     		ldr	r3, [r2]
 454 001e 23F04003 		bic	r3, r3, #64
 455 0022 1360     		str	r3, [r2]
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 456              		.loc 1 406 0
 457 0024 2268     		ldr	r2, [r4]
 458 0026 6368     		ldr	r3, [r4, #4]
 459 0028 A168     		ldr	r1, [r4, #8]
 460 002a 0B43     		orrs	r3, r3, r1
 461 002c E168     		ldr	r1, [r4, #12]
 462 002e 0B43     		orrs	r3, r3, r1
 463 0030 2169     		ldr	r1, [r4, #16]
 464 0032 0B43     		orrs	r3, r3, r1
 465 0034 6169     		ldr	r1, [r4, #20]
 466 0036 0B43     		orrs	r3, r3, r1
 467 0038 A169     		ldr	r1, [r4, #24]
 468 003a 01F40071 		and	r1, r1, #512
 469 003e 0B43     		orrs	r3, r3, r1
 470 0040 E169     		ldr	r1, [r4, #28]
 471 0042 0B43     		orrs	r3, r3, r1
 472 0044 216A     		ldr	r1, [r4, #32]
 473 0046 0B43     		orrs	r3, r3, r1
 474 0048 A16A     		ldr	r1, [r4, #40]
 475 004a 0B43     		orrs	r3, r3, r1
 476 004c 1360     		str	r3, [r2]
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 477              		.loc 1 411 0
 478 004e 2268     		ldr	r2, [r4]
 479 0050 638B     		ldrh	r3, [r4, #26]
 480 0052 03F00403 		and	r3, r3, #4
 481 0056 5360     		str	r3, [r2, #4]
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 482              		.loc 1 424 0
 483 0058 2268     		ldr	r2, [r4]
 484 005a D369     		ldr	r3, [r2, #28]
 485 005c 23F40063 		bic	r3, r3, #2048
 486 0060 D361     		str	r3, [r2, #28]
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 487              		.loc 1 427 0
 488 0062 0020     		movs	r0, #0
 489 0064 6065     		str	r0, [r4, #84]
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 490              		.loc 1 428 0
 491 0066 0123     		movs	r3, #1
 492 0068 84F85130 		strb	r3, [r4, #81]
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 493              		.loc 1 430 0
 494 006c 10BD     		pop	{r4, pc}
 495              	.LVL22:
 496              	.L43:
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccmvXlQX.s 			page 78


 497              		.loc 1 372 0
 498 006e 80F85030 		strb	r3, [r0, #80]
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 499              		.loc 1 394 0
 500 0072 FFF7FEFF 		bl	HAL_SPI_MspInit
 501              	.LVL23:
 502 0076 CDE7     		b	.L37
 503              	.LVL24:
 504              	.L38:
 505              	.LCFI11:
 506              		.cfi_def_cfa_offset 0
 507              		.cfi_restore 4
 508              		.cfi_restore 14
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 509              		.loc 1 340 0
 510 0078 0120     		movs	r0, #1
 511              	.LVL25:
 512 007a 7047     		bx	lr
 513              		.cfi_endproc
 514              	.LFE65:
 516              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 517              		.align	1
 518              		.weak	HAL_SPI_MspDeInit
 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 522              		.fpu softvfp
 524              	HAL_SPI_MspDeInit:
 525              	.LFB68:
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 526              		.loc 1 500 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530              		@ link register save eliminated.
 531              	.LVL26:
 532 0000 7047     		bx	lr
 533              		.cfi_endproc
 534              	.LFE68:
 536              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 537              		.align	1
 538              		.global	HAL_SPI_DeInit
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 542              		.fpu softvfp
 544              	HAL_SPI_DeInit:
 545              	.LFB66:
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 546              		.loc 1 440 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              	.LVL27:
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 551              		.loc 1 442 0
 552 0000 90B1     		cbz	r0, .L47
ARM GAS  /tmp/ccmvXlQX.s 			page 79


 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 553              		.loc 1 440 0
 554 0002 10B5     		push	{r4, lr}
 555              	.LCFI12:
 556              		.cfi_def_cfa_offset 8
 557              		.cfi_offset 4, -8
 558              		.cfi_offset 14, -4
 559 0004 0446     		mov	r4, r0
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 560              		.loc 1 450 0
 561 0006 0223     		movs	r3, #2
 562 0008 80F85130 		strb	r3, [r0, #81]
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 563              		.loc 1 453 0
 564 000c 0268     		ldr	r2, [r0]
 565 000e 1368     		ldr	r3, [r2]
 566 0010 23F04003 		bic	r3, r3, #64
 567 0014 1360     		str	r3, [r2]
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 568              		.loc 1 465 0
 569 0016 FFF7FEFF 		bl	HAL_SPI_MspDeInit
 570              	.LVL28:
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 571              		.loc 1 468 0
 572 001a 0020     		movs	r0, #0
 573 001c 6065     		str	r0, [r4, #84]
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 574              		.loc 1 469 0
 575 001e 84F85100 		strb	r0, [r4, #81]
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 576              		.loc 1 472 0
 577 0022 84F85000 		strb	r0, [r4, #80]
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 578              		.loc 1 474 0
 579 0026 10BD     		pop	{r4, pc}
 580              	.LVL29:
 581              	.L47:
 582              	.LCFI13:
 583              		.cfi_def_cfa_offset 0
 584              		.cfi_restore 4
 585              		.cfi_restore 14
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 586              		.loc 1 444 0
 587 0028 0120     		movs	r0, #1
 588              	.LVL30:
 589 002a 7047     		bx	lr
 590              		.cfi_endproc
 591              	.LFE66:
 593              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 594              		.align	1
 595              		.global	HAL_SPI_Transmit
 596              		.syntax unified
 597              		.thumb
 598              		.thumb_func
 599              		.fpu softvfp
 601              	HAL_SPI_Transmit:
 602              	.LFB69:
ARM GAS  /tmp/ccmvXlQX.s 			page 80


 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 603              		.loc 1 772 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 8
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              	.LVL31:
 608 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 609              	.LCFI14:
 610              		.cfi_def_cfa_offset 24
 611              		.cfi_offset 4, -24
 612              		.cfi_offset 5, -20
 613              		.cfi_offset 6, -16
 614              		.cfi_offset 7, -12
 615              		.cfi_offset 8, -8
 616              		.cfi_offset 14, -4
 617 0004 82B0     		sub	sp, sp, #8
 618              	.LCFI15:
 619              		.cfi_def_cfa_offset 32
 620              	.LVL32:
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 621              		.loc 1 781 0
 622 0006 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 623 000a 012C     		cmp	r4, #1
 624 000c 03D1     		bne	.L85
 625 000e 0220     		movs	r0, #2
 626              	.LVL33:
 627              	.L53:
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 628              		.loc 1 923 0
 629 0010 02B0     		add	sp, sp, #8
 630              	.LCFI16:
 631              		.cfi_remember_state
 632              		.cfi_def_cfa_offset 24
 633              		@ sp needed
 634 0012 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 635              	.LVL34:
 636              	.L85:
 637              	.LCFI17:
 638              		.cfi_restore_state
 639 0016 1D46     		mov	r5, r3
 640 0018 1746     		mov	r7, r2
 641 001a 8846     		mov	r8, r1
 642 001c 0446     		mov	r4, r0
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 643              		.loc 1 781 0 discriminator 2
 644 001e 0123     		movs	r3, #1
 645              	.LVL35:
 646 0020 80F85030 		strb	r3, [r0, #80]
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   initial_TxXferCount = Size;
 647              		.loc 1 784 0 discriminator 2
 648 0024 FFF7FEFF 		bl	HAL_GetTick
 649              	.LVL36:
 650 0028 0646     		mov	r6, r0
 651              	.LVL37:
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 652              		.loc 1 787 0 discriminator 2
 653 002a 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
ARM GAS  /tmp/ccmvXlQX.s 			page 81


 654 002e DBB2     		uxtb	r3, r3
 655 0030 012B     		cmp	r3, #1
 656 0032 07D0     		beq	.L86
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 657              		.loc 1 789 0
 658 0034 0220     		movs	r0, #2
 659              	.LVL38:
 660              	.L54:
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
 661              		.loc 1 919 0
 662 0036 0123     		movs	r3, #1
 663 0038 84F85130 		strb	r3, [r4, #81]
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 664              		.loc 1 921 0
 665 003c 0023     		movs	r3, #0
 666 003e 84F85030 		strb	r3, [r4, #80]
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 667              		.loc 1 922 0
 668 0042 E5E7     		b	.L53
 669              	.LVL39:
 670              	.L86:
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 671              		.loc 1 793 0
 672 0044 B8F1000F 		cmp	r8, #0
 673 0048 00F09C80 		beq	.L77
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 674              		.loc 1 793 0 is_stmt 0 discriminator 1
 675 004c 002F     		cmp	r7, #0
 676 004e 00F09B80 		beq	.L78
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 677              		.loc 1 800 0 is_stmt 1
 678 0052 0323     		movs	r3, #3
 679 0054 84F85130 		strb	r3, [r4, #81]
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 680              		.loc 1 801 0
 681 0058 0023     		movs	r3, #0
 682 005a 6365     		str	r3, [r4, #84]
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 683              		.loc 1 802 0
 684 005c C4F83080 		str	r8, [r4, #48]
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 685              		.loc 1 803 0
 686 0060 A786     		strh	r7, [r4, #52]	@ movhi
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 687              		.loc 1 804 0
 688 0062 E786     		strh	r7, [r4, #54]	@ movhi
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 689              		.loc 1 807 0
 690 0064 A363     		str	r3, [r4, #56]
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 691              		.loc 1 808 0
 692 0066 A387     		strh	r3, [r4, #60]	@ movhi
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 693              		.loc 1 809 0
 694 0068 E387     		strh	r3, [r4, #62]	@ movhi
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 695              		.loc 1 810 0
ARM GAS  /tmp/ccmvXlQX.s 			page 82


 696 006a 6364     		str	r3, [r4, #68]
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 697              		.loc 1 811 0
 698 006c 2364     		str	r3, [r4, #64]
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 699              		.loc 1 814 0
 700 006e A368     		ldr	r3, [r4, #8]
 701 0070 B3F5004F 		cmp	r3, #32768
 702 0074 1DD0     		beq	.L87
 703              	.L55:
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 704              		.loc 1 828 0
 705 0076 2368     		ldr	r3, [r4]
 706 0078 1A68     		ldr	r2, [r3]
 707 007a 12F0400F 		tst	r2, #64
 708 007e 03D1     		bne	.L56
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 709              		.loc 1 831 0
 710 0080 1A68     		ldr	r2, [r3]
 711 0082 42F04002 		orr	r2, r2, #64
 712 0086 1A60     		str	r2, [r3]
 713              	.L56:
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 714              		.loc 1 835 0
 715 0088 E368     		ldr	r3, [r4, #12]
 716 008a B3F5006F 		cmp	r3, #2048
 717 008e 16D0     		beq	.L88
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 718              		.loc 1 867 0
 719 0090 6368     		ldr	r3, [r4, #4]
 720 0092 0BB1     		cbz	r3, .L66
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 721              		.loc 1 867 0 is_stmt 0 discriminator 1
 722 0094 012F     		cmp	r7, #1
 723 0096 4CD1     		bne	.L68
 724              	.L66:
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 725              		.loc 1 869 0 is_stmt 1
 726 0098 2368     		ldr	r3, [r4]
 727 009a 226B     		ldr	r2, [r4, #48]
 728 009c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 729 009e 1A73     		strb	r2, [r3, #12]
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 730              		.loc 1 870 0
 731 00a0 236B     		ldr	r3, [r4, #48]
 732 00a2 0133     		adds	r3, r3, #1
 733 00a4 2363     		str	r3, [r4, #48]
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 734              		.loc 1 871 0
 735 00a6 E38E     		ldrh	r3, [r4, #54]
 736 00a8 9BB2     		uxth	r3, r3
 737 00aa 013B     		subs	r3, r3, #1
 738 00ac 9BB2     		uxth	r3, r3
 739 00ae E386     		strh	r3, [r4, #54]	@ movhi
 740 00b0 3FE0     		b	.L68
 741              	.L87:
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  /tmp/ccmvXlQX.s 			page 83


 742              		.loc 1 816 0
 743 00b2 2268     		ldr	r2, [r4]
 744 00b4 1368     		ldr	r3, [r2]
 745 00b6 43F48043 		orr	r3, r3, #16384
 746 00ba 1360     		str	r3, [r2]
 747 00bc DBE7     		b	.L55
 748              	.L88:
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 749              		.loc 1 837 0
 750 00be 6368     		ldr	r3, [r4, #4]
 751 00c0 0BB1     		cbz	r3, .L58
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 752              		.loc 1 837 0 is_stmt 0 discriminator 1
 753 00c2 012F     		cmp	r7, #1
 754 00c4 16D1     		bne	.L60
 755              	.L58:
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 756              		.loc 1 839 0 is_stmt 1
 757 00c6 2368     		ldr	r3, [r4]
 758 00c8 226B     		ldr	r2, [r4, #48]
 759 00ca 1288     		ldrh	r2, [r2]
 760 00cc DA60     		str	r2, [r3, #12]
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 761              		.loc 1 840 0
 762 00ce 236B     		ldr	r3, [r4, #48]
 763 00d0 0233     		adds	r3, r3, #2
 764 00d2 2363     		str	r3, [r4, #48]
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 765              		.loc 1 841 0
 766 00d4 E38E     		ldrh	r3, [r4, #54]
 767 00d6 9BB2     		uxth	r3, r3
 768 00d8 013B     		subs	r3, r3, #1
 769 00da 9BB2     		uxth	r3, r3
 770 00dc E386     		strh	r3, [r4, #54]	@ movhi
 771 00de 09E0     		b	.L60
 772              	.LVL40:
 773              	.L61:
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 774              		.loc 1 856 0
 775 00e0 FFF7FEFF 		bl	HAL_GetTick
 776              	.LVL41:
 777 00e4 801B     		subs	r0, r0, r6
 778 00e6 A842     		cmp	r0, r5
 779 00e8 02D3     		bcc	.L63
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 780              		.loc 1 856 0 is_stmt 0 discriminator 1
 781 00ea B5F1FF3F 		cmp	r5, #-1
 782 00ee 4DD1     		bne	.L79
 783              	.L63:
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 784              		.loc 1 856 0 discriminator 3
 785 00f0 002D     		cmp	r5, #0
 786 00f2 4DD0     		beq	.L80
 787              	.L60:
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 788              		.loc 1 844 0 is_stmt 1
 789 00f4 E38E     		ldrh	r3, [r4, #54]
ARM GAS  /tmp/ccmvXlQX.s 			page 84


 790 00f6 9BB2     		uxth	r3, r3
 791 00f8 002B     		cmp	r3, #0
 792 00fa 2ED0     		beq	.L65
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 793              		.loc 1 847 0
 794 00fc 2368     		ldr	r3, [r4]
 795 00fe 9A68     		ldr	r2, [r3, #8]
 796 0100 12F0020F 		tst	r2, #2
 797 0104 ECD0     		beq	.L61
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 798              		.loc 1 849 0
 799 0106 226B     		ldr	r2, [r4, #48]
 800 0108 1288     		ldrh	r2, [r2]
 801 010a DA60     		str	r2, [r3, #12]
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 802              		.loc 1 850 0
 803 010c 236B     		ldr	r3, [r4, #48]
 804 010e 0233     		adds	r3, r3, #2
 805 0110 2363     		str	r3, [r4, #48]
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 806              		.loc 1 851 0
 807 0112 E38E     		ldrh	r3, [r4, #54]
 808 0114 9BB2     		uxth	r3, r3
 809 0116 013B     		subs	r3, r3, #1
 810 0118 9BB2     		uxth	r3, r3
 811 011a E386     		strh	r3, [r4, #54]	@ movhi
 812 011c EAE7     		b	.L60
 813              	.L69:
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 814              		.loc 1 885 0
 815 011e FFF7FEFF 		bl	HAL_GetTick
 816              	.LVL42:
 817 0122 801B     		subs	r0, r0, r6
 818 0124 8542     		cmp	r5, r0
 819 0126 02D8     		bhi	.L71
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 820              		.loc 1 885 0 is_stmt 0 discriminator 1
 821 0128 B5F1FF3F 		cmp	r5, #-1
 822 012c 32D1     		bne	.L81
 823              	.L71:
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 824              		.loc 1 885 0 discriminator 3
 825 012e 002D     		cmp	r5, #0
 826 0130 32D0     		beq	.L82
 827              	.L68:
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 828              		.loc 1 873 0 is_stmt 1
 829 0132 E28E     		ldrh	r2, [r4, #54]
 830 0134 92B2     		uxth	r2, r2
 831 0136 82B1     		cbz	r2, .L65
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 832              		.loc 1 876 0
 833 0138 2368     		ldr	r3, [r4]
 834 013a 9A68     		ldr	r2, [r3, #8]
 835 013c 12F0020F 		tst	r2, #2
 836 0140 EDD0     		beq	.L69
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint8_t);
ARM GAS  /tmp/ccmvXlQX.s 			page 85


 837              		.loc 1 878 0
 838 0142 226B     		ldr	r2, [r4, #48]
 839 0144 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 840 0146 1A73     		strb	r2, [r3, #12]
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 841              		.loc 1 879 0
 842 0148 236B     		ldr	r3, [r4, #48]
 843 014a 0133     		adds	r3, r3, #1
 844 014c 2363     		str	r3, [r4, #48]
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 845              		.loc 1 880 0
 846 014e E28E     		ldrh	r2, [r4, #54]
 847 0150 92B2     		uxth	r2, r2
 848 0152 013A     		subs	r2, r2, #1
 849 0154 92B2     		uxth	r2, r2
 850 0156 E286     		strh	r2, [r4, #54]	@ movhi
 851 0158 EBE7     		b	.L68
 852              	.L65:
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 853              		.loc 1 902 0
 854 015a 3246     		mov	r2, r6
 855 015c 2946     		mov	r1, r5
 856 015e 2046     		mov	r0, r4
 857 0160 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 858              	.LVL43:
 859 0164 08B1     		cbz	r0, .L73
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 860              		.loc 1 904 0
 861 0166 2023     		movs	r3, #32
 862 0168 6365     		str	r3, [r4, #84]
 863              	.L73:
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 864              		.loc 1 908 0
 865 016a A368     		ldr	r3, [r4, #8]
 866 016c 33B9     		cbnz	r3, .L74
 867              	.LBB2:
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 868              		.loc 1 910 0
 869 016e 0193     		str	r3, [sp, #4]
 870 0170 2368     		ldr	r3, [r4]
 871 0172 DA68     		ldr	r2, [r3, #12]
 872 0174 0192     		str	r2, [sp, #4]
 873 0176 9B68     		ldr	r3, [r3, #8]
 874 0178 0193     		str	r3, [sp, #4]
 875 017a 019B     		ldr	r3, [sp, #4]
 876              	.L74:
 877              	.LBE2:
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 878              		.loc 1 913 0
 879 017c 636D     		ldr	r3, [r4, #84]
 880 017e 6BB9     		cbnz	r3, .L83
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 881              		.loc 1 774 0
 882 0180 0020     		movs	r0, #0
 883 0182 58E7     		b	.L54
 884              	.LVL44:
 885              	.L77:
ARM GAS  /tmp/ccmvXlQX.s 			page 86


 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 886              		.loc 1 795 0
 887 0184 0120     		movs	r0, #1
 888              	.LVL45:
 889 0186 56E7     		b	.L54
 890              	.LVL46:
 891              	.L78:
 892 0188 0120     		movs	r0, #1
 893              	.LVL47:
 894 018a 54E7     		b	.L54
 895              	.L79:
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 896              		.loc 1 858 0
 897 018c 0320     		movs	r0, #3
 898 018e 52E7     		b	.L54
 899              	.L80:
 900 0190 0320     		movs	r0, #3
 901 0192 50E7     		b	.L54
 902              	.L81:
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 903              		.loc 1 887 0
 904 0194 0320     		movs	r0, #3
 905 0196 4EE7     		b	.L54
 906              	.L82:
 907 0198 0320     		movs	r0, #3
 908 019a 4CE7     		b	.L54
 909              	.L83:
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 910              		.loc 1 915 0
 911 019c 0120     		movs	r0, #1
 912 019e 4AE7     		b	.L54
 913              		.cfi_endproc
 914              	.LFE69:
 916              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 917              		.align	1
 918              		.global	HAL_SPI_TransmitReceive
 919              		.syntax unified
 920              		.thumb
 921              		.thumb_func
 922              		.fpu softvfp
 924              	HAL_SPI_TransmitReceive:
 925              	.LFB71:
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
 926              		.loc 1 1143 0
 927              		.cfi_startproc
 928              		@ args = 4, pretend = 0, frame = 8
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930              	.LVL48:
 931 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 932              	.LCFI18:
 933              		.cfi_def_cfa_offset 28
 934              		.cfi_offset 4, -28
 935              		.cfi_offset 5, -24
 936              		.cfi_offset 6, -20
 937              		.cfi_offset 7, -16
 938              		.cfi_offset 8, -12
 939              		.cfi_offset 9, -8
ARM GAS  /tmp/ccmvXlQX.s 			page 87


 940              		.cfi_offset 14, -4
 941 0004 83B0     		sub	sp, sp, #12
 942              	.LCFI19:
 943              		.cfi_def_cfa_offset 40
 944 0006 0A9D     		ldr	r5, [sp, #40]
 945              	.LVL49:
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 946              		.loc 1 1157 0
 947 0008 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 948 000c 012C     		cmp	r4, #1
 949 000e 04D1     		bne	.L122
 950 0010 0223     		movs	r3, #2
 951              	.LVL50:
 952              	.L90:
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 953              		.loc 1 1359 0
 954 0012 1846     		mov	r0, r3
 955 0014 03B0     		add	sp, sp, #12
 956              	.LCFI20:
 957              		.cfi_remember_state
 958              		.cfi_def_cfa_offset 28
 959              		@ sp needed
 960 0016 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 961              	.LVL51:
 962              	.L122:
 963              	.LCFI21:
 964              		.cfi_restore_state
 965 001a 1E46     		mov	r6, r3
 966 001c 9046     		mov	r8, r2
 967 001e 0F46     		mov	r7, r1
 968 0020 0446     		mov	r4, r0
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 969              		.loc 1 1157 0 discriminator 2
 970 0022 0123     		movs	r3, #1
 971              	.LVL52:
 972 0024 80F85030 		strb	r3, [r0, #80]
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 973              		.loc 1 1160 0 discriminator 2
 974 0028 FFF7FEFF 		bl	HAL_GetTick
 975              	.LVL53:
 976 002c 8146     		mov	r9, r0
 977              	.LVL54:
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 978              		.loc 1 1163 0 discriminator 2
 979 002e 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 980 0032 DBB2     		uxtb	r3, r3
 981              	.LVL55:
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   initial_TxXferCount = Size;
 982              		.loc 1 1164 0 discriminator 2
 983 0034 6268     		ldr	r2, [r4, #4]
 984              	.LVL56:
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 985              		.loc 1 1167 0 discriminator 2
 986 0036 012B     		cmp	r3, #1
 987 0038 12D0     		beq	.L91
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 988              		.loc 1 1167 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccmvXlQX.s 			page 88


 989 003a B2F5827F 		cmp	r2, #260
 990 003e 07D0     		beq	.L123
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 991              		.loc 1 1170 0 is_stmt 1
 992 0040 0223     		movs	r3, #2
 993              	.LVL57:
 994              	.L92:
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 995              		.loc 1 1356 0
 996 0042 0122     		movs	r2, #1
 997 0044 84F85120 		strb	r2, [r4, #81]
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 998              		.loc 1 1357 0
 999 0048 0022     		movs	r2, #0
 1000 004a 84F85020 		strb	r2, [r4, #80]
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 1001              		.loc 1 1358 0
 1002 004e E0E7     		b	.L90
 1003              	.LVL58:
 1004              	.L123:
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1005              		.loc 1 1168 0
 1006 0050 A268     		ldr	r2, [r4, #8]
 1007              	.LVL59:
 1008 0052 002A     		cmp	r2, #0
 1009 0054 40F0E280 		bne	.L113
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1010              		.loc 1 1168 0 is_stmt 0 discriminator 1
 1011 0058 042B     		cmp	r3, #4
 1012 005a 01D0     		beq	.L91
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1013              		.loc 1 1170 0 is_stmt 1
 1014 005c 0223     		movs	r3, #2
 1015              	.LVL60:
 1016 005e F0E7     		b	.L92
 1017              	.LVL61:
 1018              	.L91:
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1019              		.loc 1 1174 0
 1020 0060 002F     		cmp	r7, #0
 1021 0062 00F0DD80 		beq	.L115
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1022              		.loc 1 1174 0 is_stmt 0 discriminator 1
 1023 0066 B8F1000F 		cmp	r8, #0
 1024 006a 00F0DB80 		beq	.L116
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1025              		.loc 1 1174 0 discriminator 2
 1026 006e 002E     		cmp	r6, #0
 1027 0070 00F0DA80 		beq	.L117
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1028              		.loc 1 1181 0 is_stmt 1
 1029 0074 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 1030              	.LVL62:
 1031 0078 DBB2     		uxtb	r3, r3
 1032 007a 042B     		cmp	r3, #4
 1033 007c 02D0     		beq	.L93
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  /tmp/ccmvXlQX.s 			page 89


 1034              		.loc 1 1183 0
 1035 007e 0523     		movs	r3, #5
 1036 0080 84F85130 		strb	r3, [r4, #81]
 1037              	.L93:
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1038              		.loc 1 1187 0
 1039 0084 0023     		movs	r3, #0
 1040 0086 6365     		str	r3, [r4, #84]
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1041              		.loc 1 1188 0
 1042 0088 C4F83880 		str	r8, [r4, #56]
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1043              		.loc 1 1189 0
 1044 008c E687     		strh	r6, [r4, #62]	@ movhi
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1045              		.loc 1 1190 0
 1046 008e A687     		strh	r6, [r4, #60]	@ movhi
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1047              		.loc 1 1191 0
 1048 0090 2763     		str	r7, [r4, #48]
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1049              		.loc 1 1192 0
 1050 0092 E686     		strh	r6, [r4, #54]	@ movhi
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1051              		.loc 1 1193 0
 1052 0094 A686     		strh	r6, [r4, #52]	@ movhi
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1053              		.loc 1 1196 0
 1054 0096 2364     		str	r3, [r4, #64]
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1055              		.loc 1 1197 0
 1056 0098 6364     		str	r3, [r4, #68]
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1057              		.loc 1 1208 0
 1058 009a 2368     		ldr	r3, [r4]
 1059 009c 1A68     		ldr	r2, [r3]
 1060 009e 12F0400F 		tst	r2, #64
 1061 00a2 03D1     		bne	.L94
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1062              		.loc 1 1211 0
 1063 00a4 1A68     		ldr	r2, [r3]
 1064 00a6 42F04002 		orr	r2, r2, #64
 1065 00aa 1A60     		str	r2, [r3]
 1066              	.LVL63:
 1067              	.L94:
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1068              		.loc 1 1215 0
 1069 00ac E368     		ldr	r3, [r4, #12]
 1070 00ae B3F5006F 		cmp	r3, #2048
 1071 00b2 11D0     		beq	.L124
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1072              		.loc 1 1262 0
 1073 00b4 6368     		ldr	r3, [r4, #4]
 1074 00b6 0BB1     		cbz	r3, .L103
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1075              		.loc 1 1262 0 is_stmt 0 discriminator 1
 1076 00b8 012E     		cmp	r6, #1
ARM GAS  /tmp/ccmvXlQX.s 			page 90


 1077 00ba 0BD1     		bne	.L104
 1078              	.L103:
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 1079              		.loc 1 1264 0 is_stmt 1
 1080 00bc 2368     		ldr	r3, [r4]
 1081 00be 226B     		ldr	r2, [r4, #48]
 1082 00c0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1083 00c2 1A73     		strb	r2, [r3, #12]
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 1084              		.loc 1 1265 0
 1085 00c4 236B     		ldr	r3, [r4, #48]
 1086 00c6 0133     		adds	r3, r3, #1
 1087 00c8 2363     		str	r3, [r4, #48]
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 1088              		.loc 1 1266 0
 1089 00ca E38E     		ldrh	r3, [r4, #54]
 1090 00cc 9BB2     		uxth	r3, r3
 1091 00ce 013B     		subs	r3, r3, #1
 1092 00d0 9BB2     		uxth	r3, r3
 1093 00d2 E386     		strh	r3, [r4, #54]	@ movhi
 1094              	.L104:
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 1095              		.loc 1 1295 0
 1096 00d4 0126     		movs	r6, #1
 1097              	.LVL64:
 1098 00d6 6CE0     		b	.L108
 1099              	.LVL65:
 1100              	.L124:
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1101              		.loc 1 1217 0
 1102 00d8 6368     		ldr	r3, [r4, #4]
 1103 00da 0BB1     		cbz	r3, .L96
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1104              		.loc 1 1217 0 is_stmt 0 discriminator 1
 1105 00dc 012E     		cmp	r6, #1
 1106 00de 0BD1     		bne	.L97
 1107              	.L96:
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1108              		.loc 1 1219 0 is_stmt 1
 1109 00e0 2368     		ldr	r3, [r4]
 1110 00e2 226B     		ldr	r2, [r4, #48]
 1111 00e4 1288     		ldrh	r2, [r2]
 1112 00e6 DA60     		str	r2, [r3, #12]
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 1113              		.loc 1 1220 0
 1114 00e8 236B     		ldr	r3, [r4, #48]
 1115 00ea 0233     		adds	r3, r3, #2
 1116 00ec 2363     		str	r3, [r4, #48]
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 1117              		.loc 1 1221 0
 1118 00ee E38E     		ldrh	r3, [r4, #54]
 1119 00f0 9BB2     		uxth	r3, r3
 1120 00f2 013B     		subs	r3, r3, #1
 1121 00f4 9BB2     		uxth	r3, r3
 1122 00f6 E386     		strh	r3, [r4, #54]	@ movhi
 1123              	.L97:
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
ARM GAS  /tmp/ccmvXlQX.s 			page 91


 1124              		.loc 1 1250 0
 1125 00f8 0126     		movs	r6, #1
 1126              	.LVL66:
 1127 00fa 1CE0     		b	.L98
 1128              	.LVL67:
 1129              	.L99:
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1130              		.loc 1 1244 0
 1131 00fc 2368     		ldr	r3, [r4]
 1132 00fe 9A68     		ldr	r2, [r3, #8]
 1133 0100 12F0010F 		tst	r2, #1
 1134 0104 0ED0     		beq	.L100
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1135              		.loc 1 1244 0 is_stmt 0 discriminator 1
 1136 0106 E28F     		ldrh	r2, [r4, #62]
 1137 0108 92B2     		uxth	r2, r2
 1138 010a 5AB1     		cbz	r2, .L100
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1139              		.loc 1 1246 0 is_stmt 1
 1140 010c A26B     		ldr	r2, [r4, #56]
 1141 010e DB68     		ldr	r3, [r3, #12]
 1142 0110 1380     		strh	r3, [r2]	@ movhi
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1143              		.loc 1 1247 0
 1144 0112 A36B     		ldr	r3, [r4, #56]
 1145 0114 0233     		adds	r3, r3, #2
 1146 0116 A363     		str	r3, [r4, #56]
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1147              		.loc 1 1248 0
 1148 0118 E38F     		ldrh	r3, [r4, #62]
 1149 011a 9BB2     		uxth	r3, r3
 1150 011c 013B     		subs	r3, r3, #1
 1151 011e 9BB2     		uxth	r3, r3
 1152 0120 E387     		strh	r3, [r4, #62]	@ movhi
 1153              	.LVL68:
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 1154              		.loc 1 1250 0
 1155 0122 0126     		movs	r6, #1
 1156              	.LVL69:
 1157              	.L100:
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1158              		.loc 1 1252 0
 1159 0124 FFF7FEFF 		bl	HAL_GetTick
 1160              	.LVL70:
 1161 0128 A0EB0900 		sub	r0, r0, r9
 1162 012c A842     		cmp	r0, r5
 1163 012e 02D3     		bcc	.L98
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1164              		.loc 1 1252 0 is_stmt 0 discriminator 1
 1165 0130 B5F1FF3F 		cmp	r5, #-1
 1166 0134 7AD1     		bne	.L118
 1167              	.LVL71:
 1168              	.L98:
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1169              		.loc 1 1223 0 is_stmt 1
 1170 0136 E38E     		ldrh	r3, [r4, #54]
 1171 0138 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccmvXlQX.s 			page 92


 1172 013a 1BB9     		cbnz	r3, .L101
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1173              		.loc 1 1223 0 is_stmt 0 discriminator 1
 1174 013c E38F     		ldrh	r3, [r4, #62]
 1175 013e 9BB2     		uxth	r3, r3
 1176 0140 002B     		cmp	r3, #0
 1177 0142 54D0     		beq	.L102
 1178              	.L101:
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1179              		.loc 1 1226 0 is_stmt 1
 1180 0144 2368     		ldr	r3, [r4]
 1181 0146 9A68     		ldr	r2, [r3, #8]
 1182 0148 12F0020F 		tst	r2, #2
 1183 014c D6D0     		beq	.L99
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1184              		.loc 1 1226 0 is_stmt 0 discriminator 1
 1185 014e E28E     		ldrh	r2, [r4, #54]
 1186 0150 92B2     		uxth	r2, r2
 1187 0152 002A     		cmp	r2, #0
 1188 0154 D2D0     		beq	.L99
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1189              		.loc 1 1226 0 discriminator 2
 1190 0156 002E     		cmp	r6, #0
 1191 0158 D0D0     		beq	.L99
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1192              		.loc 1 1228 0 is_stmt 1
 1193 015a 226B     		ldr	r2, [r4, #48]
 1194 015c 1288     		ldrh	r2, [r2]
 1195 015e DA60     		str	r2, [r3, #12]
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 1196              		.loc 1 1229 0
 1197 0160 236B     		ldr	r3, [r4, #48]
 1198 0162 0233     		adds	r3, r3, #2
 1199 0164 2363     		str	r3, [r4, #48]
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 1200              		.loc 1 1230 0
 1201 0166 E38E     		ldrh	r3, [r4, #54]
 1202 0168 9BB2     		uxth	r3, r3
 1203 016a 013B     		subs	r3, r3, #1
 1204 016c 9BB2     		uxth	r3, r3
 1205 016e E386     		strh	r3, [r4, #54]	@ movhi
 1206              	.LVL72:
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1207              		.loc 1 1232 0
 1208 0170 0026     		movs	r6, #0
 1209 0172 C3E7     		b	.L99
 1210              	.LVL73:
 1211              	.L105:
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1212              		.loc 1 1289 0
 1213 0174 2368     		ldr	r3, [r4]
 1214 0176 9A68     		ldr	r2, [r3, #8]
 1215 0178 12F0010F 		tst	r2, #1
 1216 017c 0ED0     		beq	.L106
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1217              		.loc 1 1289 0 is_stmt 0 discriminator 1
 1218 017e E28F     		ldrh	r2, [r4, #62]
ARM GAS  /tmp/ccmvXlQX.s 			page 93


 1219 0180 92B2     		uxth	r2, r2
 1220 0182 5AB1     		cbz	r2, .L106
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr++;
 1221              		.loc 1 1291 0 is_stmt 1
 1222 0184 A26B     		ldr	r2, [r4, #56]
 1223 0186 DB68     		ldr	r3, [r3, #12]
 1224 0188 1370     		strb	r3, [r2]
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1225              		.loc 1 1292 0
 1226 018a A36B     		ldr	r3, [r4, #56]
 1227 018c 0133     		adds	r3, r3, #1
 1228 018e A363     		str	r3, [r4, #56]
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1229              		.loc 1 1293 0
 1230 0190 E38F     		ldrh	r3, [r4, #62]
 1231 0192 9BB2     		uxth	r3, r3
 1232 0194 013B     		subs	r3, r3, #1
 1233 0196 9BB2     		uxth	r3, r3
 1234 0198 E387     		strh	r3, [r4, #62]	@ movhi
 1235              	.LVL74:
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 1236              		.loc 1 1295 0
 1237 019a 0126     		movs	r6, #1
 1238              	.LVL75:
 1239              	.L106:
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1240              		.loc 1 1297 0
 1241 019c FFF7FEFF 		bl	HAL_GetTick
 1242              	.LVL76:
 1243 01a0 A0EB0900 		sub	r0, r0, r9
 1244 01a4 8542     		cmp	r5, r0
 1245 01a6 02D8     		bhi	.L107
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1246              		.loc 1 1297 0 is_stmt 0 discriminator 1
 1247 01a8 B5F1FF3F 		cmp	r5, #-1
 1248 01ac 40D1     		bne	.L119
 1249              	.L107:
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1250              		.loc 1 1297 0 discriminator 3
 1251 01ae 002D     		cmp	r5, #0
 1252 01b0 40D0     		beq	.L125
 1253              	.LVL77:
 1254              	.L108:
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1255              		.loc 1 1268 0 is_stmt 1
 1256 01b2 E38E     		ldrh	r3, [r4, #54]
 1257 01b4 9BB2     		uxth	r3, r3
 1258 01b6 13B9     		cbnz	r3, .L109
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1259              		.loc 1 1268 0 is_stmt 0 discriminator 1
 1260 01b8 E38F     		ldrh	r3, [r4, #62]
 1261 01ba 9BB2     		uxth	r3, r3
 1262 01bc BBB1     		cbz	r3, .L102
 1263              	.L109:
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1264              		.loc 1 1271 0 is_stmt 1
 1265 01be 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccmvXlQX.s 			page 94


 1266 01c0 9A68     		ldr	r2, [r3, #8]
 1267 01c2 12F0020F 		tst	r2, #2
 1268 01c6 D5D0     		beq	.L105
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1269              		.loc 1 1271 0 is_stmt 0 discriminator 1
 1270 01c8 E28E     		ldrh	r2, [r4, #54]
 1271 01ca 92B2     		uxth	r2, r2
 1272 01cc 002A     		cmp	r2, #0
 1273 01ce D1D0     		beq	.L105
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1274              		.loc 1 1271 0 discriminator 2
 1275 01d0 002E     		cmp	r6, #0
 1276 01d2 CFD0     		beq	.L105
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr++;
 1277              		.loc 1 1273 0 is_stmt 1
 1278 01d4 226B     		ldr	r2, [r4, #48]
 1279 01d6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1280 01d8 1A73     		strb	r2, [r3, #12]
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 1281              		.loc 1 1274 0
 1282 01da 236B     		ldr	r3, [r4, #48]
 1283 01dc 0133     		adds	r3, r3, #1
 1284 01de 2363     		str	r3, [r4, #48]
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 1285              		.loc 1 1275 0
 1286 01e0 E38E     		ldrh	r3, [r4, #54]
 1287 01e2 9BB2     		uxth	r3, r3
 1288 01e4 013B     		subs	r3, r3, #1
 1289 01e6 9BB2     		uxth	r3, r3
 1290 01e8 E386     		strh	r3, [r4, #54]	@ movhi
 1291              	.LVL78:
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1292              		.loc 1 1277 0
 1293 01ea 0026     		movs	r6, #0
 1294 01ec C2E7     		b	.L105
 1295              	.LVL79:
 1296              	.L102:
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1297              		.loc 1 1342 0
 1298 01ee 4A46     		mov	r2, r9
 1299 01f0 2946     		mov	r1, r5
 1300 01f2 2046     		mov	r0, r4
 1301 01f4 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1302              	.LVL80:
 1303 01f8 0346     		mov	r3, r0
 1304 01fa 18B1     		cbz	r0, .L110
 1305              	.LVL81:
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1306              		.loc 1 1345 0
 1307 01fc 2023     		movs	r3, #32
 1308 01fe 6365     		str	r3, [r4, #84]
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1309              		.loc 1 1344 0
 1310 0200 0123     		movs	r3, #1
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1311              		.loc 1 1346 0
 1312 0202 1EE7     		b	.L92
ARM GAS  /tmp/ccmvXlQX.s 			page 95


 1313              	.LVL82:
 1314              	.L110:
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1315              		.loc 1 1350 0
 1316 0204 A268     		ldr	r2, [r4, #8]
 1317 0206 002A     		cmp	r2, #0
 1318 0208 7FF41BAF 		bne	.L92
 1319              	.LBB3:
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1320              		.loc 1 1352 0
 1321 020c 0192     		str	r2, [sp, #4]
 1322 020e 2268     		ldr	r2, [r4]
 1323 0210 D168     		ldr	r1, [r2, #12]
 1324 0212 0191     		str	r1, [sp, #4]
 1325 0214 9268     		ldr	r2, [r2, #8]
 1326 0216 0192     		str	r2, [sp, #4]
 1327 0218 019A     		ldr	r2, [sp, #4]
 1328 021a 12E7     		b	.L92
 1329              	.LVL83:
 1330              	.L113:
 1331              	.LBE3:
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1332              		.loc 1 1170 0
 1333 021c 0223     		movs	r3, #2
 1334              	.LVL84:
 1335 021e 10E7     		b	.L92
 1336              	.LVL85:
 1337              	.L115:
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1338              		.loc 1 1176 0
 1339 0220 0123     		movs	r3, #1
 1340              	.LVL86:
 1341 0222 0EE7     		b	.L92
 1342              	.LVL87:
 1343              	.L116:
 1344 0224 0123     		movs	r3, #1
 1345              	.LVL88:
 1346 0226 0CE7     		b	.L92
 1347              	.LVL89:
 1348              	.L117:
 1349 0228 0123     		movs	r3, #1
 1350              	.LVL90:
 1351 022a 0AE7     		b	.L92
 1352              	.LVL91:
 1353              	.L118:
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         goto error;
 1354              		.loc 1 1254 0
 1355 022c 0323     		movs	r3, #3
 1356 022e 08E7     		b	.L92
 1357              	.L119:
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         goto error;
 1358              		.loc 1 1299 0
 1359 0230 0323     		movs	r3, #3
 1360 0232 06E7     		b	.L92
 1361              	.L125:
 1362 0234 0323     		movs	r3, #3
 1363 0236 04E7     		b	.L92
ARM GAS  /tmp/ccmvXlQX.s 			page 96


 1364              		.cfi_endproc
 1365              	.LFE71:
 1367              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 1368              		.align	1
 1369              		.global	HAL_SPI_Receive
 1370              		.syntax unified
 1371              		.thumb
 1372              		.thumb_func
 1373              		.fpu softvfp
 1375              	HAL_SPI_Receive:
 1376              	.LFB70:
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 1377              		.loc 1 935 0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 0
 1380              		@ frame_needed = 0, uses_anonymous_args = 0
 1381              	.LVL92:
 1382 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1383              	.LCFI22:
 1384              		.cfi_def_cfa_offset 24
 1385              		.cfi_offset 4, -24
 1386              		.cfi_offset 5, -20
 1387              		.cfi_offset 6, -16
 1388              		.cfi_offset 7, -12
 1389              		.cfi_offset 8, -8
 1390              		.cfi_offset 14, -4
 1391 0004 82B0     		sub	sp, sp, #8
 1392              	.LCFI23:
 1393              		.cfi_def_cfa_offset 32
 1394 0006 0446     		mov	r4, r0
 1395 0008 0F46     		mov	r7, r1
 1396 000a 9046     		mov	r8, r2
 1397 000c 1D46     		mov	r5, r3
 1398              	.LVL93:
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1399              		.loc 1 939 0
 1400 000e 4368     		ldr	r3, [r0, #4]
 1401              	.LVL94:
 1402 0010 B3F5827F 		cmp	r3, #260
 1403 0014 07D0     		beq	.L154
 1404              	.L127:
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1405              		.loc 1 947 0
 1406 0016 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 1407 001a 012B     		cmp	r3, #1
 1408 001c 0FD1     		bne	.L155
 1409 001e 0220     		movs	r0, #2
 1410              	.LVL95:
 1411              	.L128:
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1412              		.loc 1 1129 0
 1413 0020 02B0     		add	sp, sp, #8
 1414              	.LCFI24:
 1415              		.cfi_remember_state
 1416              		.cfi_def_cfa_offset 24
 1417              		@ sp needed
 1418 0022 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  /tmp/ccmvXlQX.s 			page 97


 1419              	.LVL96:
 1420              	.L154:
 1421              	.LCFI25:
 1422              		.cfi_restore_state
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1423              		.loc 1 939 0 discriminator 1
 1424 0026 8368     		ldr	r3, [r0, #8]
 1425 0028 002B     		cmp	r3, #0
 1426 002a F4D1     		bne	.L127
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 1427              		.loc 1 941 0
 1428 002c 0423     		movs	r3, #4
 1429 002e 80F85130 		strb	r3, [r0, #81]
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1430              		.loc 1 943 0
 1431 0032 0095     		str	r5, [sp]
 1432 0034 1346     		mov	r3, r2
 1433 0036 0A46     		mov	r2, r1
 1434              	.LVL97:
 1435 0038 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1436              	.LVL98:
 1437 003c F0E7     		b	.L128
 1438              	.LVL99:
 1439              	.L155:
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1440              		.loc 1 947 0 discriminator 2
 1441 003e 0123     		movs	r3, #1
 1442 0040 84F85030 		strb	r3, [r4, #80]
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1443              		.loc 1 950 0 discriminator 2
 1444 0044 FFF7FEFF 		bl	HAL_GetTick
 1445              	.LVL100:
 1446 0048 0646     		mov	r6, r0
 1447              	.LVL101:
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1448              		.loc 1 952 0 discriminator 2
 1449 004a 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 1450 004e DBB2     		uxtb	r3, r3
 1451 0050 012B     		cmp	r3, #1
 1452 0052 07D0     		beq	.L156
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1453              		.loc 1 954 0
 1454 0054 0220     		movs	r0, #2
 1455              	.LVL102:
 1456              	.L129:
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1457              		.loc 1 1126 0
 1458 0056 0123     		movs	r3, #1
 1459 0058 84F85130 		strb	r3, [r4, #81]
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 1460              		.loc 1 1127 0
 1461 005c 0023     		movs	r3, #0
 1462 005e 84F85030 		strb	r3, [r4, #80]
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 1463              		.loc 1 1128 0
 1464 0062 DDE7     		b	.L128
 1465              	.LVL103:
ARM GAS  /tmp/ccmvXlQX.s 			page 98


 1466              	.L156:
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1467              		.loc 1 958 0
 1468 0064 002F     		cmp	r7, #0
 1469 0066 6FD0     		beq	.L146
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1470              		.loc 1 958 0 is_stmt 0 discriminator 1
 1471 0068 B8F1000F 		cmp	r8, #0
 1472 006c 6ED0     		beq	.L147
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1473              		.loc 1 965 0 is_stmt 1
 1474 006e 0423     		movs	r3, #4
 1475 0070 84F85130 		strb	r3, [r4, #81]
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 1476              		.loc 1 966 0
 1477 0074 0023     		movs	r3, #0
 1478 0076 6365     		str	r3, [r4, #84]
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1479              		.loc 1 967 0
 1480 0078 A763     		str	r7, [r4, #56]
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1481              		.loc 1 968 0
 1482 007a A4F83C80 		strh	r8, [r4, #60]	@ movhi
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1483              		.loc 1 969 0
 1484 007e A4F83E80 		strh	r8, [r4, #62]	@ movhi
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 1485              		.loc 1 972 0
 1486 0082 2363     		str	r3, [r4, #48]
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 1487              		.loc 1 973 0
 1488 0084 A386     		strh	r3, [r4, #52]	@ movhi
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1489              		.loc 1 974 0
 1490 0086 E386     		strh	r3, [r4, #54]	@ movhi
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1491              		.loc 1 975 0
 1492 0088 2364     		str	r3, [r4, #64]
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1493              		.loc 1 976 0
 1494 008a 6364     		str	r3, [r4, #68]
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1495              		.loc 1 989 0
 1496 008c A368     		ldr	r3, [r4, #8]
 1497 008e B3F5004F 		cmp	r3, #32768
 1498 0092 0BD0     		beq	.L157
 1499              	.L130:
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1500              		.loc 1 995 0
 1501 0094 2368     		ldr	r3, [r4]
 1502 0096 1A68     		ldr	r2, [r3]
 1503 0098 12F0400F 		tst	r2, #64
 1504 009c 03D1     		bne	.L131
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1505              		.loc 1 998 0
 1506 009e 1A68     		ldr	r2, [r3]
 1507 00a0 42F04002 		orr	r2, r2, #64
ARM GAS  /tmp/ccmvXlQX.s 			page 99


 1508 00a4 1A60     		str	r2, [r3]
 1509              	.L131:
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1510              		.loc 1 1002 0
 1511 00a6 E368     		ldr	r3, [r4, #12]
 1512 00a8 83B1     		cbz	r3, .L132
 1513 00aa 2DE0     		b	.L133
 1514              	.L157:
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1515              		.loc 1 991 0
 1516 00ac 2268     		ldr	r2, [r4]
 1517 00ae 1368     		ldr	r3, [r2]
 1518 00b0 23F48043 		bic	r3, r3, #16384
 1519 00b4 1360     		str	r3, [r2]
 1520 00b6 EDE7     		b	.L130
 1521              	.LVL104:
 1522              	.L134:
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1523              		.loc 1 1018 0
 1524 00b8 FFF7FEFF 		bl	HAL_GetTick
 1525              	.LVL105:
 1526 00bc 801B     		subs	r0, r0, r6
 1527 00be 8542     		cmp	r5, r0
 1528 00c0 02D8     		bhi	.L136
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1529              		.loc 1 1018 0 is_stmt 0 discriminator 1
 1530 00c2 B5F1FF3F 		cmp	r5, #-1
 1531 00c6 43D1     		bne	.L148
 1532              	.L136:
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1533              		.loc 1 1018 0 discriminator 3
 1534 00c8 002D     		cmp	r5, #0
 1535 00ca 43D0     		beq	.L149
 1536              	.L132:
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1537              		.loc 1 1005 0 is_stmt 1
 1538 00cc E38F     		ldrh	r3, [r4, #62]
 1539 00ce 9BB2     		uxth	r3, r3
 1540 00d0 002B     		cmp	r3, #0
 1541 00d2 2DD0     		beq	.L138
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1542              		.loc 1 1008 0
 1543 00d4 2368     		ldr	r3, [r4]
 1544 00d6 9A68     		ldr	r2, [r3, #8]
 1545 00d8 12F0010F 		tst	r2, #1
 1546 00dc ECD0     		beq	.L134
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 1547              		.loc 1 1011 0
 1548 00de A26B     		ldr	r2, [r4, #56]
 1549 00e0 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1550 00e2 1370     		strb	r3, [r2]
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1551              		.loc 1 1012 0
 1552 00e4 A36B     		ldr	r3, [r4, #56]
 1553 00e6 0133     		adds	r3, r3, #1
 1554 00e8 A363     		str	r3, [r4, #56]
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
ARM GAS  /tmp/ccmvXlQX.s 			page 100


 1555              		.loc 1 1013 0
 1556 00ea E38F     		ldrh	r3, [r4, #62]
 1557 00ec 9BB2     		uxth	r3, r3
 1558 00ee 013B     		subs	r3, r3, #1
 1559 00f0 9BB2     		uxth	r3, r3
 1560 00f2 E387     		strh	r3, [r4, #62]	@ movhi
 1561 00f4 EAE7     		b	.L132
 1562              	.L139:
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1563              		.loc 1 1041 0
 1564 00f6 FFF7FEFF 		bl	HAL_GetTick
 1565              	.LVL106:
 1566 00fa 801B     		subs	r0, r0, r6
 1567 00fc 8542     		cmp	r5, r0
 1568 00fe 02D8     		bhi	.L141
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1569              		.loc 1 1041 0 is_stmt 0 discriminator 1
 1570 0100 B5F1FF3F 		cmp	r5, #-1
 1571 0104 28D1     		bne	.L150
 1572              	.L141:
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1573              		.loc 1 1041 0 discriminator 3
 1574 0106 4DB3     		cbz	r5, .L151
 1575              	.L133:
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1576              		.loc 1 1029 0 is_stmt 1
 1577 0108 E38F     		ldrh	r3, [r4, #62]
 1578 010a 9BB2     		uxth	r3, r3
 1579 010c 83B1     		cbz	r3, .L138
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1580              		.loc 1 1032 0
 1581 010e 2368     		ldr	r3, [r4]
 1582 0110 9A68     		ldr	r2, [r3, #8]
 1583 0112 12F0010F 		tst	r2, #1
 1584 0116 EED0     		beq	.L139
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1585              		.loc 1 1034 0
 1586 0118 A26B     		ldr	r2, [r4, #56]
 1587 011a DB68     		ldr	r3, [r3, #12]
 1588 011c 1380     		strh	r3, [r2]	@ movhi
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1589              		.loc 1 1035 0
 1590 011e A36B     		ldr	r3, [r4, #56]
 1591 0120 0233     		adds	r3, r3, #2
 1592 0122 A363     		str	r3, [r4, #56]
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 1593              		.loc 1 1036 0
 1594 0124 E38F     		ldrh	r3, [r4, #62]
 1595 0126 9BB2     		uxth	r3, r3
 1596 0128 013B     		subs	r3, r3, #1
 1597 012a 9BB2     		uxth	r3, r3
 1598 012c E387     		strh	r3, [r4, #62]	@ movhi
 1599 012e EBE7     		b	.L133
 1600              	.L138:
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1601              		.loc 1 1096 0
 1602 0130 3246     		mov	r2, r6
ARM GAS  /tmp/ccmvXlQX.s 			page 101


 1603 0132 2946     		mov	r1, r5
 1604 0134 2046     		mov	r0, r4
 1605 0136 FFF7FEFF 		bl	SPI_EndRxTransaction
 1606              	.LVL107:
 1607 013a 08B1     		cbz	r0, .L143
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1608              		.loc 1 1098 0
 1609 013c 2023     		movs	r3, #32
 1610 013e 6365     		str	r3, [r4, #84]
 1611              	.L143:
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1612              		.loc 1 1120 0
 1613 0140 636D     		ldr	r3, [r4, #84]
 1614 0142 6BB9     		cbnz	r3, .L152
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1615              		.loc 1 937 0
 1616 0144 0020     		movs	r0, #0
 1617 0146 86E7     		b	.L129
 1618              	.LVL108:
 1619              	.L146:
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1620              		.loc 1 960 0
 1621 0148 0120     		movs	r0, #1
 1622              	.LVL109:
 1623 014a 84E7     		b	.L129
 1624              	.LVL110:
 1625              	.L147:
 1626 014c 0120     		movs	r0, #1
 1627              	.LVL111:
 1628 014e 82E7     		b	.L129
 1629              	.L148:
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 1630              		.loc 1 1020 0
 1631 0150 0320     		movs	r0, #3
 1632 0152 80E7     		b	.L129
 1633              	.L149:
 1634 0154 0320     		movs	r0, #3
 1635 0156 7EE7     		b	.L129
 1636              	.L150:
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 1637              		.loc 1 1043 0
 1638 0158 0320     		movs	r0, #3
 1639 015a 7CE7     		b	.L129
 1640              	.L151:
 1641 015c 0320     		movs	r0, #3
 1642 015e 7AE7     		b	.L129
 1643              	.L152:
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1644              		.loc 1 1122 0
 1645 0160 0120     		movs	r0, #1
 1646 0162 78E7     		b	.L129
 1647              		.cfi_endproc
 1648              	.LFE70:
 1650              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 1651              		.align	1
 1652              		.global	HAL_SPI_Transmit_IT
 1653              		.syntax unified
ARM GAS  /tmp/ccmvXlQX.s 			page 102


 1654              		.thumb
 1655              		.thumb_func
 1656              		.fpu softvfp
 1658              	HAL_SPI_Transmit_IT:
 1659              	.LFB72:
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1660              		.loc 1 1370 0
 1661              		.cfi_startproc
 1662              		@ args = 0, pretend = 0, frame = 0
 1663              		@ frame_needed = 0, uses_anonymous_args = 0
 1664              		@ link register save eliminated.
 1665              	.LVL112:
 1666 0000 0346     		mov	r3, r0
 1667              	.LVL113:
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1668              		.loc 1 1377 0
 1669 0002 90F85000 		ldrb	r0, [r0, #80]	@ zero_extendqisi2
 1670              	.LVL114:
 1671 0006 0128     		cmp	r0, #1
 1672 0008 43D0     		beq	.L164
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1673              		.loc 1 1377 0 is_stmt 0 discriminator 2
 1674 000a 0120     		movs	r0, #1
 1675 000c 83F85000 		strb	r0, [r3, #80]
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1676              		.loc 1 1379 0 is_stmt 1 discriminator 2
 1677 0010 0029     		cmp	r1, #0
 1678 0012 35D0     		beq	.L165
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1679              		.loc 1 1379 0 is_stmt 0 discriminator 1
 1680 0014 002A     		cmp	r2, #0
 1681 0016 35D0     		beq	.L166
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1682              		.loc 1 1385 0 is_stmt 1
 1683 0018 93F85100 		ldrb	r0, [r3, #81]	@ zero_extendqisi2
 1684 001c C0B2     		uxtb	r0, r0
 1685 001e 0128     		cmp	r0, #1
 1686 0020 01D0     		beq	.L169
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1687              		.loc 1 1387 0
 1688 0022 0220     		movs	r0, #2
 1689 0024 2FE0     		b	.L160
 1690              	.L169:
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1691              		.loc 1 1392 0
 1692 0026 0320     		movs	r0, #3
 1693 0028 83F85100 		strb	r0, [r3, #81]
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 1694              		.loc 1 1393 0
 1695 002c 0020     		movs	r0, #0
 1696 002e 5865     		str	r0, [r3, #84]
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1697              		.loc 1 1394 0
 1698 0030 1963     		str	r1, [r3, #48]
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1699              		.loc 1 1395 0
 1700 0032 9A86     		strh	r2, [r3, #52]	@ movhi
ARM GAS  /tmp/ccmvXlQX.s 			page 103


1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1701              		.loc 1 1396 0
 1702 0034 DA86     		strh	r2, [r3, #54]	@ movhi
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 1703              		.loc 1 1399 0
 1704 0036 9863     		str	r0, [r3, #56]
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 1705              		.loc 1 1400 0
 1706 0038 9887     		strh	r0, [r3, #60]	@ movhi
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1707              		.loc 1 1401 0
 1708 003a D887     		strh	r0, [r3, #62]	@ movhi
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1709              		.loc 1 1402 0
 1710 003c 1864     		str	r0, [r3, #64]
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1711              		.loc 1 1405 0
 1712 003e DA68     		ldr	r2, [r3, #12]
 1713              	.LVL115:
 1714 0040 AAB1     		cbz	r2, .L161
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1715              		.loc 1 1407 0
 1716 0042 154A     		ldr	r2, .L171
 1717 0044 5A64     		str	r2, [r3, #68]
 1718              	.L162:
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1719              		.loc 1 1415 0
 1720 0046 9A68     		ldr	r2, [r3, #8]
 1721 0048 B2F5004F 		cmp	r2, #32768
 1722 004c 12D0     		beq	.L170
 1723              	.LVL116:
 1724              	.L163:
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1725              		.loc 1 1429 0
 1726 004e 1968     		ldr	r1, [r3]
 1727 0050 4A68     		ldr	r2, [r1, #4]
 1728 0052 42F0A002 		orr	r2, r2, #160
 1729 0056 4A60     		str	r2, [r1, #4]
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1730              		.loc 1 1433 0
 1731 0058 1A68     		ldr	r2, [r3]
 1732 005a 1168     		ldr	r1, [r2]
 1733 005c 11F0400F 		tst	r1, #64
 1734 0060 15D1     		bne	.L168
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1735              		.loc 1 1436 0
 1736 0062 1168     		ldr	r1, [r2]
 1737 0064 41F04001 		orr	r1, r1, #64
 1738 0068 1160     		str	r1, [r2]
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1739              		.loc 1 1371 0
 1740 006a 0020     		movs	r0, #0
 1741 006c 0BE0     		b	.L160
 1742              	.LVL117:
 1743              	.L161:
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1744              		.loc 1 1411 0
ARM GAS  /tmp/ccmvXlQX.s 			page 104


 1745 006e 0B4A     		ldr	r2, .L171+4
 1746 0070 5A64     		str	r2, [r3, #68]
 1747 0072 E8E7     		b	.L162
 1748              	.L170:
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1749              		.loc 1 1417 0
 1750 0074 1968     		ldr	r1, [r3]
 1751              	.LVL118:
 1752 0076 0A68     		ldr	r2, [r1]
 1753 0078 42F48042 		orr	r2, r2, #16384
 1754 007c 0A60     		str	r2, [r1]
 1755              	.LVL119:
 1756 007e E6E7     		b	.L163
 1757              	.LVL120:
 1758              	.L165:
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1759              		.loc 1 1381 0
 1760 0080 0120     		movs	r0, #1
 1761 0082 00E0     		b	.L160
 1762              	.L166:
 1763 0084 0120     		movs	r0, #1
 1764              	.LVL121:
 1765              	.L160:
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 1766              		.loc 1 1440 0
 1767 0086 0022     		movs	r2, #0
 1768 0088 83F85020 		strb	r2, [r3, #80]
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 1769              		.loc 1 1441 0
 1770 008c 7047     		bx	lr
 1771              	.LVL122:
 1772              	.L168:
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1773              		.loc 1 1371 0
 1774 008e 0020     		movs	r0, #0
 1775 0090 F9E7     		b	.L160
 1776              	.LVL123:
 1777              	.L164:
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1778              		.loc 1 1377 0
 1779 0092 0220     		movs	r0, #2
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1780              		.loc 1 1442 0
 1781 0094 7047     		bx	lr
 1782              	.L172:
 1783 0096 00BF     		.align	2
 1784              	.L171:
 1785 0098 00000000 		.word	SPI_TxISR_16BIT
 1786 009c 00000000 		.word	SPI_TxISR_8BIT
 1787              		.cfi_endproc
 1788              	.LFE72:
 1790              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 1791              		.align	1
 1792              		.global	HAL_SPI_TransmitReceive_IT
 1793              		.syntax unified
 1794              		.thumb
 1795              		.thumb_func
ARM GAS  /tmp/ccmvXlQX.s 			page 105


 1796              		.fpu softvfp
 1798              	HAL_SPI_TransmitReceive_IT:
 1799              	.LFB74:
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tmp_mode;
 1800              		.loc 1 1545 0
 1801              		.cfi_startproc
 1802              		@ args = 0, pretend = 0, frame = 0
 1803              		@ frame_needed = 0, uses_anonymous_args = 0
 1804              		@ link register save eliminated.
 1805              	.LVL124:
 1806 0000 30B4     		push	{r4, r5}
 1807              	.LCFI26:
 1808              		.cfi_def_cfa_offset 8
 1809              		.cfi_offset 4, -8
 1810              		.cfi_offset 5, -4
 1811              	.LVL125:
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1812              		.loc 1 1554 0
 1813 0002 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 1814 0006 012C     		cmp	r4, #1
 1815 0008 54D0     		beq	.L180
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1816              		.loc 1 1554 0 is_stmt 0 discriminator 2
 1817 000a 0124     		movs	r4, #1
 1818 000c 80F85040 		strb	r4, [r0, #80]
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1819              		.loc 1 1557 0 is_stmt 1 discriminator 2
 1820 0010 90F85140 		ldrb	r4, [r0, #81]	@ zero_extendqisi2
 1821 0014 E4B2     		uxtb	r4, r4
 1822              	.LVL126:
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1823              		.loc 1 1558 0 discriminator 2
 1824 0016 4568     		ldr	r5, [r0, #4]
 1825              	.LVL127:
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1826              		.loc 1 1560 0 discriminator 2
 1827 0018 012C     		cmp	r4, #1
 1828 001a 10D0     		beq	.L175
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1829              		.loc 1 1560 0 is_stmt 0 discriminator 1
 1830 001c B5F5827F 		cmp	r5, #260
 1831 0020 06D0     		beq	.L189
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1832              		.loc 1 1563 0 is_stmt 1
 1833 0022 0223     		movs	r3, #2
 1834              	.LVL128:
 1835              	.L176:
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 1836              		.loc 1 1620 0
 1837 0024 0022     		movs	r2, #0
 1838 0026 80F85020 		strb	r2, [r0, #80]
 1839              	.LVL129:
 1840              	.L174:
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1841              		.loc 1 1622 0
 1842 002a 1846     		mov	r0, r3
 1843              	.LVL130:
ARM GAS  /tmp/ccmvXlQX.s 			page 106


 1844 002c 30BC     		pop	{r4, r5}
 1845              	.LCFI27:
 1846              		.cfi_remember_state
 1847              		.cfi_restore 5
 1848              		.cfi_restore 4
 1849              		.cfi_def_cfa_offset 0
 1850 002e 7047     		bx	lr
 1851              	.LVL131:
 1852              	.L189:
 1853              	.LCFI28:
 1854              		.cfi_restore_state
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1855              		.loc 1 1561 0
 1856 0030 8568     		ldr	r5, [r0, #8]
 1857              	.LVL132:
 1858 0032 002D     		cmp	r5, #0
 1859 0034 34D1     		bne	.L182
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1860              		.loc 1 1561 0 is_stmt 0 discriminator 1
 1861 0036 042C     		cmp	r4, #4
 1862 0038 01D0     		beq	.L175
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1863              		.loc 1 1563 0 is_stmt 1
 1864 003a 0223     		movs	r3, #2
 1865              	.LVL133:
 1866 003c F2E7     		b	.L176
 1867              	.LVL134:
 1868              	.L175:
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1869              		.loc 1 1567 0
 1870 003e 0029     		cmp	r1, #0
 1871 0040 30D0     		beq	.L184
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1872              		.loc 1 1567 0 is_stmt 0 discriminator 1
 1873 0042 002A     		cmp	r2, #0
 1874 0044 30D0     		beq	.L185
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1875              		.loc 1 1567 0 discriminator 2
 1876 0046 002B     		cmp	r3, #0
 1877 0048 30D0     		beq	.L186
1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1878              		.loc 1 1574 0 is_stmt 1
 1879 004a 90F85140 		ldrb	r4, [r0, #81]	@ zero_extendqisi2
 1880              	.LVL135:
 1881 004e E4B2     		uxtb	r4, r4
 1882 0050 042C     		cmp	r4, #4
 1883 0052 02D0     		beq	.L177
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1884              		.loc 1 1576 0
 1885 0054 0524     		movs	r4, #5
 1886 0056 80F85140 		strb	r4, [r0, #81]
 1887              	.L177:
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1888              		.loc 1 1580 0
 1889 005a 0024     		movs	r4, #0
 1890 005c 4465     		str	r4, [r0, #84]
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
ARM GAS  /tmp/ccmvXlQX.s 			page 107


 1891              		.loc 1 1581 0
 1892 005e 0163     		str	r1, [r0, #48]
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1893              		.loc 1 1582 0
 1894 0060 8386     		strh	r3, [r0, #52]	@ movhi
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1895              		.loc 1 1583 0
 1896 0062 C386     		strh	r3, [r0, #54]	@ movhi
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1897              		.loc 1 1584 0
 1898 0064 8263     		str	r2, [r0, #56]
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1899              		.loc 1 1585 0
 1900 0066 8387     		strh	r3, [r0, #60]	@ movhi
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1901              		.loc 1 1586 0
 1902 0068 C387     		strh	r3, [r0, #62]	@ movhi
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1903              		.loc 1 1589 0
 1904 006a C368     		ldr	r3, [r0, #12]
 1905              	.LVL136:
 1906 006c 9BB1     		cbz	r3, .L178
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 1907              		.loc 1 1591 0
 1908 006e 124B     		ldr	r3, .L190
 1909 0070 0364     		str	r3, [r0, #64]
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1910              		.loc 1 1592 0
 1911 0072 124B     		ldr	r3, .L190+4
 1912 0074 4364     		str	r3, [r0, #68]
 1913              	.L179:
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1914              		.loc 1 1609 0
 1915 0076 0268     		ldr	r2, [r0]
 1916              	.LVL137:
 1917 0078 5368     		ldr	r3, [r2, #4]
 1918 007a 43F0E003 		orr	r3, r3, #224
 1919 007e 5360     		str	r3, [r2, #4]
 1920              	.LVL138:
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1921              		.loc 1 1612 0
 1922 0080 0368     		ldr	r3, [r0]
 1923 0082 1A68     		ldr	r2, [r3]
 1924 0084 12F0400F 		tst	r2, #64
 1925 0088 12D1     		bne	.L187
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1926              		.loc 1 1615 0
 1927 008a 1A68     		ldr	r2, [r3]
 1928 008c 42F04002 		orr	r2, r2, #64
 1929 0090 1A60     		str	r2, [r3]
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1930              		.loc 1 1548 0
 1931 0092 0023     		movs	r3, #0
 1932 0094 C6E7     		b	.L176
 1933              	.LVL139:
 1934              	.L178:
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
ARM GAS  /tmp/ccmvXlQX.s 			page 108


 1935              		.loc 1 1596 0
 1936 0096 0A4B     		ldr	r3, .L190+8
 1937 0098 0364     		str	r3, [r0, #64]
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1938              		.loc 1 1597 0
 1939 009a 0A4B     		ldr	r3, .L190+12
 1940 009c 4364     		str	r3, [r0, #68]
 1941 009e EAE7     		b	.L179
 1942              	.LVL140:
 1943              	.L182:
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1944              		.loc 1 1563 0
 1945 00a0 0223     		movs	r3, #2
 1946              	.LVL141:
 1947 00a2 BFE7     		b	.L176
 1948              	.LVL142:
 1949              	.L184:
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1950              		.loc 1 1569 0
 1951 00a4 0123     		movs	r3, #1
 1952              	.LVL143:
 1953 00a6 BDE7     		b	.L176
 1954              	.LVL144:
 1955              	.L185:
 1956 00a8 0123     		movs	r3, #1
 1957              	.LVL145:
 1958 00aa BBE7     		b	.L176
 1959              	.LVL146:
 1960              	.L186:
 1961 00ac 0123     		movs	r3, #1
 1962              	.LVL147:
 1963 00ae B9E7     		b	.L176
 1964              	.LVL148:
 1965              	.L187:
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1966              		.loc 1 1548 0
 1967 00b0 0023     		movs	r3, #0
 1968 00b2 B7E7     		b	.L176
 1969              	.LVL149:
 1970              	.L180:
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1971              		.loc 1 1554 0
 1972 00b4 0223     		movs	r3, #2
 1973              	.LVL150:
 1974 00b6 B8E7     		b	.L174
 1975              	.L191:
 1976              		.align	2
 1977              	.L190:
 1978 00b8 00000000 		.word	SPI_2linesRxISR_16BIT
 1979 00bc 00000000 		.word	SPI_2linesTxISR_16BIT
 1980 00c0 00000000 		.word	SPI_2linesRxISR_8BIT
 1981 00c4 00000000 		.word	SPI_2linesTxISR_8BIT
 1982              		.cfi_endproc
 1983              	.LFE74:
 1985              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 1986              		.align	1
 1987              		.global	HAL_SPI_Receive_IT
ARM GAS  /tmp/ccmvXlQX.s 			page 109


 1988              		.syntax unified
 1989              		.thumb
 1990              		.thumb_func
 1991              		.fpu softvfp
 1993              	HAL_SPI_Receive_IT:
 1994              	.LFB73:
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1995              		.loc 1 1453 0
 1996              		.cfi_startproc
 1997              		@ args = 0, pretend = 0, frame = 0
 1998              		@ frame_needed = 0, uses_anonymous_args = 0
 1999              	.LVL151:
 2000 0000 38B5     		push	{r3, r4, r5, lr}
 2001              	.LCFI29:
 2002              		.cfi_def_cfa_offset 16
 2003              		.cfi_offset 3, -16
 2004              		.cfi_offset 4, -12
 2005              		.cfi_offset 5, -8
 2006              		.cfi_offset 14, -4
 2007 0002 0446     		mov	r4, r0
 2008              	.LVL152:
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2009              		.loc 1 1456 0
 2010 0004 8568     		ldr	r5, [r0, #8]
 2011 0006 1DB9     		cbnz	r5, .L193
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2012              		.loc 1 1456 0 is_stmt 0 discriminator 1
 2013 0008 4368     		ldr	r3, [r0, #4]
 2014 000a B3F5827F 		cmp	r3, #260
 2015 000e 10D0     		beq	.L205
 2016              	.L193:
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2017              		.loc 1 1464 0 is_stmt 1
 2018 0010 94F85000 		ldrb	r0, [r4, #80]	@ zero_extendqisi2
 2019              	.LVL153:
 2020 0014 0128     		cmp	r0, #1
 2021 0016 4AD0     		beq	.L199
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2022              		.loc 1 1464 0 is_stmt 0 discriminator 2
 2023 0018 0123     		movs	r3, #1
 2024 001a 84F85030 		strb	r3, [r4, #80]
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2025              		.loc 1 1466 0 is_stmt 1 discriminator 2
 2026 001e 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2027 0022 C0B2     		uxtb	r0, r0
 2028 0024 9842     		cmp	r0, r3
 2029 0026 0CD0     		beq	.L206
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2030              		.loc 1 1468 0
 2031 0028 0220     		movs	r0, #2
 2032              	.LVL154:
 2033              	.L195:
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 2034              		.loc 1 1531 0
 2035 002a 0023     		movs	r3, #0
 2036 002c 84F85030 		strb	r3, [r4, #80]
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
ARM GAS  /tmp/ccmvXlQX.s 			page 110


 2037              		.loc 1 1532 0
 2038 0030 38BD     		pop	{r3, r4, r5, pc}
 2039              	.LVL155:
 2040              	.L205:
 2041 0032 1346     		mov	r3, r2
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 2042              		.loc 1 1458 0
 2043 0034 0422     		movs	r2, #4
 2044              	.LVL156:
 2045 0036 80F85120 		strb	r2, [r0, #81]
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2046              		.loc 1 1460 0
 2047 003a 0A46     		mov	r2, r1
 2048 003c FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 2049              	.LVL157:
 2050 0040 38BD     		pop	{r3, r4, r5, pc}
 2051              	.LVL158:
 2052              	.L206:
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2053              		.loc 1 1472 0
 2054 0042 0029     		cmp	r1, #0
 2055 0044 2DD0     		beq	.L201
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2056              		.loc 1 1472 0 is_stmt 0 discriminator 1
 2057 0046 002A     		cmp	r2, #0
 2058 0048 2DD0     		beq	.L202
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2059              		.loc 1 1479 0 is_stmt 1
 2060 004a 0423     		movs	r3, #4
 2061 004c 84F85130 		strb	r3, [r4, #81]
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2062              		.loc 1 1480 0
 2063 0050 0023     		movs	r3, #0
 2064 0052 6365     		str	r3, [r4, #84]
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2065              		.loc 1 1481 0
 2066 0054 A163     		str	r1, [r4, #56]
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2067              		.loc 1 1482 0
 2068 0056 A287     		strh	r2, [r4, #60]	@ movhi
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2069              		.loc 1 1483 0
 2070 0058 E287     		strh	r2, [r4, #62]	@ movhi
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2071              		.loc 1 1486 0
 2072 005a 2363     		str	r3, [r4, #48]
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2073              		.loc 1 1487 0
 2074 005c A386     		strh	r3, [r4, #52]	@ movhi
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2075              		.loc 1 1488 0
 2076 005e E386     		strh	r3, [r4, #54]	@ movhi
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2077              		.loc 1 1489 0
 2078 0060 6364     		str	r3, [r4, #68]
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2079              		.loc 1 1492 0
ARM GAS  /tmp/ccmvXlQX.s 			page 111


 2080 0062 E368     		ldr	r3, [r4, #12]
 2081 0064 A3B1     		cbz	r3, .L196
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2082              		.loc 1 1494 0
 2083 0066 134B     		ldr	r3, .L208
 2084 0068 2364     		str	r3, [r4, #64]
 2085              	.L197:
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2086              		.loc 1 1502 0
 2087 006a B5F5004F 		cmp	r5, #32768
 2088 006e 12D0     		beq	.L207
 2089              	.LVL159:
 2090              	.L198:
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2091              		.loc 1 1516 0
 2092 0070 2268     		ldr	r2, [r4]
 2093 0072 5368     		ldr	r3, [r2, #4]
 2094 0074 43F06003 		orr	r3, r3, #96
 2095 0078 5360     		str	r3, [r2, #4]
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2096              		.loc 1 1523 0
 2097 007a 2368     		ldr	r3, [r4]
 2098 007c 1A68     		ldr	r2, [r3]
 2099 007e 12F0400F 		tst	r2, #64
 2100 0082 12D1     		bne	.L203
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2101              		.loc 1 1526 0
 2102 0084 1A68     		ldr	r2, [r3]
 2103 0086 42F04002 		orr	r2, r2, #64
 2104 008a 1A60     		str	r2, [r3]
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2105              		.loc 1 1454 0
 2106 008c 0020     		movs	r0, #0
 2107 008e CCE7     		b	.L195
 2108              	.LVL160:
 2109              	.L196:
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2110              		.loc 1 1498 0
 2111 0090 094B     		ldr	r3, .L208+4
 2112 0092 2364     		str	r3, [r4, #64]
 2113 0094 E9E7     		b	.L197
 2114              	.L207:
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2115              		.loc 1 1504 0
 2116 0096 2268     		ldr	r2, [r4]
 2117              	.LVL161:
 2118 0098 1368     		ldr	r3, [r2]
 2119 009a 23F48043 		bic	r3, r3, #16384
 2120 009e 1360     		str	r3, [r2]
 2121              	.LVL162:
 2122 00a0 E6E7     		b	.L198
 2123              	.LVL163:
 2124              	.L201:
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2125              		.loc 1 1474 0
 2126 00a2 0120     		movs	r0, #1
 2127 00a4 C1E7     		b	.L195
ARM GAS  /tmp/ccmvXlQX.s 			page 112


 2128              	.L202:
 2129 00a6 0120     		movs	r0, #1
 2130 00a8 BFE7     		b	.L195
 2131              	.LVL164:
 2132              	.L203:
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2133              		.loc 1 1454 0
 2134 00aa 0020     		movs	r0, #0
 2135 00ac BDE7     		b	.L195
 2136              	.LVL165:
 2137              	.L199:
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2138              		.loc 1 1464 0
 2139 00ae 0220     		movs	r0, #2
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2140              		.loc 1 1533 0
 2141 00b0 38BD     		pop	{r3, r4, r5, pc}
 2142              	.LVL166:
 2143              	.L209:
 2144 00b2 00BF     		.align	2
 2145              	.L208:
 2146 00b4 00000000 		.word	SPI_RxISR_16BIT
 2147 00b8 00000000 		.word	SPI_RxISR_8BIT
 2148              		.cfi_endproc
 2149              	.LFE73:
 2151              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 2152              		.align	1
 2153              		.global	HAL_SPI_Transmit_DMA
 2154              		.syntax unified
 2155              		.thumb
 2156              		.thumb_func
 2157              		.fpu softvfp
 2159              	HAL_SPI_Transmit_DMA:
 2160              	.LFB75:
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2161              		.loc 1 1633 0
 2162              		.cfi_startproc
 2163              		@ args = 0, pretend = 0, frame = 0
 2164              		@ frame_needed = 0, uses_anonymous_args = 0
 2165              	.LVL167:
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2166              		.loc 1 1643 0
 2167 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2168 0004 012B     		cmp	r3, #1
 2169 0006 60D0     		beq	.L216
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2170              		.loc 1 1633 0 discriminator 2
 2171 0008 10B5     		push	{r4, lr}
 2172              	.LCFI30:
 2173              		.cfi_def_cfa_offset 8
 2174              		.cfi_offset 4, -8
 2175              		.cfi_offset 14, -4
 2176 000a 0446     		mov	r4, r0
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2177              		.loc 1 1643 0 discriminator 2
 2178 000c 0123     		movs	r3, #1
 2179 000e 80F85030 		strb	r3, [r0, #80]
ARM GAS  /tmp/ccmvXlQX.s 			page 113


1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2180              		.loc 1 1645 0 discriminator 2
 2181 0012 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
 2182 0016 DBB2     		uxtb	r3, r3
 2183 0018 012B     		cmp	r3, #1
 2184 001a 05D0     		beq	.L224
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2185              		.loc 1 1647 0
 2186 001c 0223     		movs	r3, #2
 2187              	.LVL168:
 2188              	.L212:
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 2189              		.loc 1 1724 0
 2190 001e 0022     		movs	r2, #0
 2191 0020 84F85020 		strb	r2, [r4, #80]
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2192              		.loc 1 1726 0
 2193 0024 1846     		mov	r0, r3
 2194 0026 10BD     		pop	{r4, pc}
 2195              	.LVL169:
 2196              	.L224:
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2197              		.loc 1 1651 0
 2198 0028 0029     		cmp	r1, #0
 2199 002a 4AD0     		beq	.L218
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2200              		.loc 1 1651 0 is_stmt 0 discriminator 1
 2201 002c 002A     		cmp	r2, #0
 2202 002e 4AD0     		beq	.L219
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2203              		.loc 1 1658 0 is_stmt 1
 2204 0030 0323     		movs	r3, #3
 2205 0032 80F85130 		strb	r3, [r0, #81]
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2206              		.loc 1 1659 0
 2207 0036 0023     		movs	r3, #0
 2208 0038 4365     		str	r3, [r0, #84]
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2209              		.loc 1 1660 0
 2210 003a 0163     		str	r1, [r0, #48]
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2211              		.loc 1 1661 0
 2212 003c 8286     		strh	r2, [r0, #52]	@ movhi
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2213              		.loc 1 1662 0
 2214 003e C286     		strh	r2, [r0, #54]	@ movhi
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2215              		.loc 1 1665 0
 2216 0040 8363     		str	r3, [r0, #56]
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2217              		.loc 1 1666 0
 2218 0042 4364     		str	r3, [r0, #68]
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2219              		.loc 1 1667 0
 2220 0044 0364     		str	r3, [r0, #64]
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2221              		.loc 1 1668 0
ARM GAS  /tmp/ccmvXlQX.s 			page 114


 2222 0046 8387     		strh	r3, [r0, #60]	@ movhi
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2223              		.loc 1 1669 0
 2224 0048 C387     		strh	r3, [r0, #62]	@ movhi
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2225              		.loc 1 1672 0
 2226 004a 8368     		ldr	r3, [r0, #8]
 2227 004c B3F5004F 		cmp	r3, #32768
 2228 0050 1DD0     		beq	.L225
 2229              	.LVL170:
 2230              	.L213:
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2231              		.loc 1 1686 0
 2232 0052 A36C     		ldr	r3, [r4, #72]
 2233 0054 1E4A     		ldr	r2, .L226
 2234 0056 DA62     		str	r2, [r3, #44]
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2235              		.loc 1 1689 0
 2236 0058 A36C     		ldr	r3, [r4, #72]
 2237 005a 1E4A     		ldr	r2, .L226+4
 2238 005c 9A62     		str	r2, [r3, #40]
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2239              		.loc 1 1692 0
 2240 005e A36C     		ldr	r3, [r4, #72]
 2241 0060 1D4A     		ldr	r2, .L226+8
 2242 0062 1A63     		str	r2, [r3, #48]
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2243              		.loc 1 1695 0
 2244 0064 A36C     		ldr	r3, [r4, #72]
 2245 0066 0022     		movs	r2, #0
 2246 0068 5A63     		str	r2, [r3, #52]
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2247              		.loc 1 1698 0
 2248 006a 2268     		ldr	r2, [r4]
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2249              		.loc 1 1699 0
 2250 006c E38E     		ldrh	r3, [r4, #54]
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2251              		.loc 1 1698 0
 2252 006e 9BB2     		uxth	r3, r3
 2253 0070 0C32     		adds	r2, r2, #12
 2254 0072 216B     		ldr	r1, [r4, #48]
 2255              	.LVL171:
 2256 0074 A06C     		ldr	r0, [r4, #72]
 2257              	.LVL172:
 2258 0076 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2259              	.LVL173:
 2260 007a 0346     		mov	r3, r0
 2261 007c 68B1     		cbz	r0, .L214
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2262              		.loc 1 1702 0
 2263 007e 636D     		ldr	r3, [r4, #84]
 2264 0080 43F01003 		orr	r3, r3, #16
 2265 0084 6365     		str	r3, [r4, #84]
 2266              	.LVL174:
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2267              		.loc 1 1705 0
ARM GAS  /tmp/ccmvXlQX.s 			page 115


 2268 0086 0123     		movs	r3, #1
 2269 0088 84F85130 		strb	r3, [r4, #81]
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2270              		.loc 1 1706 0
 2271 008c C7E7     		b	.L212
 2272              	.LVL175:
 2273              	.L225:
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2274              		.loc 1 1674 0
 2275 008e 0268     		ldr	r2, [r0]
 2276              	.LVL176:
 2277 0090 1368     		ldr	r3, [r2]
 2278 0092 43F48043 		orr	r3, r3, #16384
 2279 0096 1360     		str	r3, [r2]
 2280              	.LVL177:
 2281 0098 DBE7     		b	.L213
 2282              	.LVL178:
 2283              	.L214:
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2284              		.loc 1 1710 0
 2285 009a 2268     		ldr	r2, [r4]
 2286 009c 1168     		ldr	r1, [r2]
 2287 009e 11F0400F 		tst	r1, #64
 2288 00a2 03D1     		bne	.L215
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2289              		.loc 1 1713 0
 2290 00a4 1168     		ldr	r1, [r2]
 2291 00a6 41F04001 		orr	r1, r1, #64
 2292 00aa 1160     		str	r1, [r2]
 2293              	.L215:
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2294              		.loc 1 1717 0
 2295 00ac 2168     		ldr	r1, [r4]
 2296 00ae 4A68     		ldr	r2, [r1, #4]
 2297 00b0 42F02002 		orr	r2, r2, #32
 2298 00b4 4A60     		str	r2, [r1, #4]
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2299              		.loc 1 1720 0
 2300 00b6 2168     		ldr	r1, [r4]
 2301 00b8 4A68     		ldr	r2, [r1, #4]
 2302 00ba 42F00202 		orr	r2, r2, #2
 2303 00be 4A60     		str	r2, [r1, #4]
 2304 00c0 ADE7     		b	.L212
 2305              	.LVL179:
 2306              	.L218:
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2307              		.loc 1 1653 0
 2308 00c2 0123     		movs	r3, #1
 2309 00c4 ABE7     		b	.L212
 2310              	.L219:
 2311 00c6 0123     		movs	r3, #1
 2312 00c8 A9E7     		b	.L212
 2313              	.L216:
 2314              	.LCFI31:
 2315              		.cfi_def_cfa_offset 0
 2316              		.cfi_restore 4
 2317              		.cfi_restore 14
ARM GAS  /tmp/ccmvXlQX.s 			page 116


1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2318              		.loc 1 1643 0
 2319 00ca 0223     		movs	r3, #2
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2320              		.loc 1 1726 0
 2321 00cc 1846     		mov	r0, r3
 2322              	.LVL180:
 2323 00ce 7047     		bx	lr
 2324              	.L227:
 2325              		.align	2
 2326              	.L226:
 2327 00d0 00000000 		.word	SPI_DMAHalfTransmitCplt
 2328 00d4 00000000 		.word	SPI_DMATransmitCplt
 2329 00d8 00000000 		.word	SPI_DMAError
 2330              		.cfi_endproc
 2331              	.LFE75:
 2333              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 2334              		.align	1
 2335              		.global	HAL_SPI_TransmitReceive_DMA
 2336              		.syntax unified
 2337              		.thumb
 2338              		.thumb_func
 2339              		.fpu softvfp
 2341              	HAL_SPI_TransmitReceive_DMA:
 2342              	.LFB77:
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tmp_mode;
 2343              		.loc 1 1853 0
 2344              		.cfi_startproc
 2345              		@ args = 0, pretend = 0, frame = 0
 2346              		@ frame_needed = 0, uses_anonymous_args = 0
 2347              	.LVL181:
 2348 0000 38B5     		push	{r3, r4, r5, lr}
 2349              	.LCFI32:
 2350              		.cfi_def_cfa_offset 16
 2351              		.cfi_offset 3, -16
 2352              		.cfi_offset 4, -12
 2353              		.cfi_offset 5, -8
 2354              		.cfi_offset 14, -4
 2355              	.LVL182:
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2356              		.loc 1 1866 0
 2357 0002 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 2358 0006 012C     		cmp	r4, #1
 2359 0008 00F09780 		beq	.L238
 2360 000c 0446     		mov	r4, r0
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2361              		.loc 1 1866 0 is_stmt 0 discriminator 2
 2362 000e 0120     		movs	r0, #1
 2363              	.LVL183:
 2364 0010 84F85000 		strb	r0, [r4, #80]
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 2365              		.loc 1 1869 0 is_stmt 1 discriminator 2
 2366 0014 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2367 0018 C0B2     		uxtb	r0, r0
 2368              	.LVL184:
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2369              		.loc 1 1870 0 discriminator 2
ARM GAS  /tmp/ccmvXlQX.s 			page 117


 2370 001a 6568     		ldr	r5, [r4, #4]
 2371              	.LVL185:
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2372              		.loc 1 1872 0 discriminator 2
 2373 001c 0128     		cmp	r0, #1
 2374 001e 0FD0     		beq	.L230
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2375              		.loc 1 1872 0 is_stmt 0 discriminator 1
 2376 0020 B5F5827F 		cmp	r5, #260
 2377 0024 05D0     		beq	.L246
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2378              		.loc 1 1875 0 is_stmt 1
 2379 0026 0223     		movs	r3, #2
 2380              	.LVL186:
 2381              	.L231:
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 2382              		.loc 1 1980 0
 2383 0028 0022     		movs	r2, #0
 2384 002a 84F85020 		strb	r2, [r4, #80]
 2385              	.LVL187:
 2386              	.L229:
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2387              		.loc 1 1982 0
 2388 002e 1846     		mov	r0, r3
 2389 0030 38BD     		pop	{r3, r4, r5, pc}
 2390              	.LVL188:
 2391              	.L246:
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2392              		.loc 1 1873 0
 2393 0032 A568     		ldr	r5, [r4, #8]
 2394              	.LVL189:
 2395 0034 002D     		cmp	r5, #0
 2396 0036 78D1     		bne	.L240
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2397              		.loc 1 1873 0 is_stmt 0 discriminator 1
 2398 0038 0428     		cmp	r0, #4
 2399 003a 01D0     		beq	.L230
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2400              		.loc 1 1875 0 is_stmt 1
 2401 003c 0223     		movs	r3, #2
 2402              	.LVL190:
 2403 003e F3E7     		b	.L231
 2404              	.LVL191:
 2405              	.L230:
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2406              		.loc 1 1879 0
 2407 0040 0029     		cmp	r1, #0
 2408 0042 74D0     		beq	.L242
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2409              		.loc 1 1879 0 is_stmt 0 discriminator 1
 2410 0044 002A     		cmp	r2, #0
 2411 0046 74D0     		beq	.L243
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2412              		.loc 1 1879 0 discriminator 2
 2413 0048 002B     		cmp	r3, #0
 2414 004a 74D0     		beq	.L244
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  /tmp/ccmvXlQX.s 			page 118


 2415              		.loc 1 1886 0 is_stmt 1
 2416 004c 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2417              	.LVL192:
 2418 0050 C0B2     		uxtb	r0, r0
 2419 0052 0428     		cmp	r0, #4
 2420 0054 02D0     		beq	.L232
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2421              		.loc 1 1888 0
 2422 0056 0520     		movs	r0, #5
 2423 0058 84F85100 		strb	r0, [r4, #81]
 2424              	.L232:
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2425              		.loc 1 1892 0
 2426 005c 0020     		movs	r0, #0
 2427 005e 6065     		str	r0, [r4, #84]
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2428              		.loc 1 1893 0
 2429 0060 2163     		str	r1, [r4, #48]
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2430              		.loc 1 1894 0
 2431 0062 A386     		strh	r3, [r4, #52]	@ movhi
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2432              		.loc 1 1895 0
 2433 0064 E386     		strh	r3, [r4, #54]	@ movhi
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2434              		.loc 1 1896 0
 2435 0066 A263     		str	r2, [r4, #56]
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2436              		.loc 1 1897 0
 2437 0068 A387     		strh	r3, [r4, #60]	@ movhi
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2438              		.loc 1 1898 0
 2439 006a E387     		strh	r3, [r4, #62]	@ movhi
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2440              		.loc 1 1901 0
 2441 006c 2064     		str	r0, [r4, #64]
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2442              		.loc 1 1902 0
 2443 006e 6064     		str	r0, [r4, #68]
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2444              		.loc 1 1913 0
 2445 0070 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 2446              	.LVL193:
 2447 0074 DBB2     		uxtb	r3, r3
 2448 0076 042B     		cmp	r3, #4
 2449 0078 1CD0     		beq	.L247
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 2450              		.loc 1 1922 0
 2451 007a E36C     		ldr	r3, [r4, #76]
 2452 007c 304A     		ldr	r2, .L248
 2453              	.LVL194:
 2454 007e DA62     		str	r2, [r3, #44]
 2455              	.LVL195:
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2456              		.loc 1 1923 0
 2457 0080 E36C     		ldr	r3, [r4, #76]
 2458 0082 304A     		ldr	r2, .L248+4
ARM GAS  /tmp/ccmvXlQX.s 			page 119


 2459 0084 9A62     		str	r2, [r3, #40]
 2460              	.L234:
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2461              		.loc 1 1927 0
 2462 0086 E36C     		ldr	r3, [r4, #76]
 2463 0088 2F4A     		ldr	r2, .L248+8
 2464 008a 1A63     		str	r2, [r3, #48]
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2465              		.loc 1 1930 0
 2466 008c E36C     		ldr	r3, [r4, #76]
 2467 008e 0022     		movs	r2, #0
 2468 0090 5A63     		str	r2, [r3, #52]
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2469              		.loc 1 1933 0
 2470 0092 2168     		ldr	r1, [r4]
 2471              	.LVL196:
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2472              		.loc 1 1934 0
 2473 0094 E38F     		ldrh	r3, [r4, #62]
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2474              		.loc 1 1933 0
 2475 0096 9BB2     		uxth	r3, r3
 2476 0098 A26B     		ldr	r2, [r4, #56]
 2477 009a 0C31     		adds	r1, r1, #12
 2478 009c E06C     		ldr	r0, [r4, #76]
 2479 009e FFF7FEFF 		bl	HAL_DMA_Start_IT
 2480              	.LVL197:
 2481 00a2 70B1     		cbz	r0, .L235
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2482              		.loc 1 1937 0
 2483 00a4 636D     		ldr	r3, [r4, #84]
 2484 00a6 43F01003 		orr	r3, r3, #16
 2485 00aa 6365     		str	r3, [r4, #84]
 2486              	.LVL198:
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2487              		.loc 1 1940 0
 2488 00ac 0123     		movs	r3, #1
 2489 00ae 84F85130 		strb	r3, [r4, #81]
1941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2490              		.loc 1 1941 0
 2491 00b2 B9E7     		b	.L231
 2492              	.LVL199:
 2493              	.L247:
1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 2494              		.loc 1 1916 0
 2495 00b4 E36C     		ldr	r3, [r4, #76]
 2496 00b6 254A     		ldr	r2, .L248+12
 2497              	.LVL200:
 2498 00b8 DA62     		str	r2, [r3, #44]
 2499              	.LVL201:
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2500              		.loc 1 1917 0
 2501 00ba E36C     		ldr	r3, [r4, #76]
 2502 00bc 244A     		ldr	r2, .L248+16
 2503 00be 9A62     		str	r2, [r3, #40]
 2504 00c0 E1E7     		b	.L234
 2505              	.LVL202:
ARM GAS  /tmp/ccmvXlQX.s 			page 120


 2506              	.L235:
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2507              		.loc 1 1945 0
 2508 00c2 2268     		ldr	r2, [r4]
 2509 00c4 5368     		ldr	r3, [r2, #4]
 2510 00c6 43F00103 		orr	r3, r3, #1
 2511 00ca 5360     		str	r3, [r2, #4]
1949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 2512              		.loc 1 1949 0
 2513 00cc A26C     		ldr	r2, [r4, #72]
 2514 00ce 0023     		movs	r3, #0
 2515 00d0 D362     		str	r3, [r2, #44]
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 2516              		.loc 1 1950 0
 2517 00d2 A26C     		ldr	r2, [r4, #72]
 2518 00d4 9362     		str	r3, [r2, #40]
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 2519              		.loc 1 1951 0
 2520 00d6 A26C     		ldr	r2, [r4, #72]
 2521 00d8 1363     		str	r3, [r2, #48]
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2522              		.loc 1 1952 0
 2523 00da A26C     		ldr	r2, [r4, #72]
 2524 00dc 5363     		str	r3, [r2, #52]
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2525              		.loc 1 1955 0
 2526 00de 2268     		ldr	r2, [r4]
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2527              		.loc 1 1956 0
 2528 00e0 E38E     		ldrh	r3, [r4, #54]
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2529              		.loc 1 1955 0
 2530 00e2 9BB2     		uxth	r3, r3
 2531 00e4 0C32     		adds	r2, r2, #12
 2532 00e6 216B     		ldr	r1, [r4, #48]
 2533 00e8 A06C     		ldr	r0, [r4, #72]
 2534 00ea FFF7FEFF 		bl	HAL_DMA_Start_IT
 2535              	.LVL203:
 2536 00ee 0346     		mov	r3, r0
 2537 00f0 38B1     		cbz	r0, .L236
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2538              		.loc 1 1959 0
 2539 00f2 636D     		ldr	r3, [r4, #84]
 2540 00f4 43F01003 		orr	r3, r3, #16
 2541 00f8 6365     		str	r3, [r4, #84]
 2542              	.LVL204:
1962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2543              		.loc 1 1962 0
 2544 00fa 0123     		movs	r3, #1
 2545 00fc 84F85130 		strb	r3, [r4, #81]
1963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2546              		.loc 1 1963 0
 2547 0100 92E7     		b	.L231
 2548              	.LVL205:
 2549              	.L236:
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2550              		.loc 1 1967 0
ARM GAS  /tmp/ccmvXlQX.s 			page 121


 2551 0102 2268     		ldr	r2, [r4]
 2552 0104 1168     		ldr	r1, [r2]
 2553 0106 11F0400F 		tst	r1, #64
 2554 010a 03D1     		bne	.L237
1970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2555              		.loc 1 1970 0
 2556 010c 1168     		ldr	r1, [r2]
 2557 010e 41F04001 		orr	r1, r1, #64
 2558 0112 1160     		str	r1, [r2]
 2559              	.L237:
1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2560              		.loc 1 1973 0
 2561 0114 2168     		ldr	r1, [r4]
 2562 0116 4A68     		ldr	r2, [r1, #4]
 2563 0118 42F02002 		orr	r2, r2, #32
 2564 011c 4A60     		str	r2, [r1, #4]
1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2565              		.loc 1 1976 0
 2566 011e 2168     		ldr	r1, [r4]
 2567 0120 4A68     		ldr	r2, [r1, #4]
 2568 0122 42F00202 		orr	r2, r2, #2
 2569 0126 4A60     		str	r2, [r1, #4]
 2570 0128 7EE7     		b	.L231
 2571              	.LVL206:
 2572              	.L240:
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2573              		.loc 1 1875 0
 2574 012a 0223     		movs	r3, #2
 2575              	.LVL207:
 2576 012c 7CE7     		b	.L231
 2577              	.LVL208:
 2578              	.L242:
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2579              		.loc 1 1881 0
 2580 012e 0123     		movs	r3, #1
 2581              	.LVL209:
 2582 0130 7AE7     		b	.L231
 2583              	.LVL210:
 2584              	.L243:
 2585 0132 0123     		movs	r3, #1
 2586              	.LVL211:
 2587 0134 78E7     		b	.L231
 2588              	.LVL212:
 2589              	.L244:
 2590 0136 0123     		movs	r3, #1
 2591              	.LVL213:
 2592 0138 76E7     		b	.L231
 2593              	.LVL214:
 2594              	.L238:
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2595              		.loc 1 1866 0
 2596 013a 0223     		movs	r3, #2
 2597              	.LVL215:
 2598 013c 77E7     		b	.L229
 2599              	.L249:
 2600 013e 00BF     		.align	2
 2601              	.L248:
ARM GAS  /tmp/ccmvXlQX.s 			page 122


 2602 0140 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 2603 0144 00000000 		.word	SPI_DMATransmitReceiveCplt
 2604 0148 00000000 		.word	SPI_DMAError
 2605 014c 00000000 		.word	SPI_DMAHalfReceiveCplt
 2606 0150 00000000 		.word	SPI_DMAReceiveCplt
 2607              		.cfi_endproc
 2608              	.LFE77:
 2610              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 2611              		.align	1
 2612              		.global	HAL_SPI_Receive_DMA
 2613              		.syntax unified
 2614              		.thumb
 2615              		.thumb_func
 2616              		.fpu softvfp
 2618              	HAL_SPI_Receive_DMA:
 2619              	.LFB76:
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2620              		.loc 1 1739 0
 2621              		.cfi_startproc
 2622              		@ args = 0, pretend = 0, frame = 0
 2623              		@ frame_needed = 0, uses_anonymous_args = 0
 2624              	.LVL216:
 2625 0000 38B5     		push	{r3, r4, r5, lr}
 2626              	.LCFI33:
 2627              		.cfi_def_cfa_offset 16
 2628              		.cfi_offset 3, -16
 2629              		.cfi_offset 4, -12
 2630              		.cfi_offset 5, -8
 2631              		.cfi_offset 14, -4
 2632 0002 0446     		mov	r4, r0
 2633              	.LVL217:
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2634              		.loc 1 1745 0
 2635 0004 8568     		ldr	r5, [r0, #8]
 2636 0006 1DB9     		cbnz	r5, .L251
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2637              		.loc 1 1745 0 is_stmt 0 discriminator 1
 2638 0008 4368     		ldr	r3, [r0, #4]
 2639 000a B3F5827F 		cmp	r3, #260
 2640 000e 11D0     		beq	.L262
 2641              	.L251:
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2642              		.loc 1 1757 0 is_stmt 1
 2643 0010 94F85000 		ldrb	r0, [r4, #80]	@ zero_extendqisi2
 2644              	.LVL218:
 2645 0014 0128     		cmp	r0, #1
 2646 0016 65D0     		beq	.L257
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2647              		.loc 1 1757 0 is_stmt 0 discriminator 2
 2648 0018 0123     		movs	r3, #1
 2649 001a 84F85030 		strb	r3, [r4, #80]
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2650              		.loc 1 1759 0 is_stmt 1 discriminator 2
 2651 001e 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2652 0022 C0B2     		uxtb	r0, r0
 2653 0024 9842     		cmp	r0, r3
 2654 0026 0ED0     		beq	.L263
ARM GAS  /tmp/ccmvXlQX.s 			page 123


1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2655              		.loc 1 1761 0
 2656 0028 0223     		movs	r3, #2
 2657              	.LVL219:
 2658              	.L253:
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 2659              		.loc 1 1837 0
 2660 002a 0022     		movs	r2, #0
 2661 002c 84F85020 		strb	r2, [r4, #80]
 2662              	.LVL220:
 2663              	.L252:
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2664              		.loc 1 1839 0
 2665 0030 1846     		mov	r0, r3
 2666 0032 38BD     		pop	{r3, r4, r5, pc}
 2667              	.LVL221:
 2668              	.L262:
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2669              		.loc 1 1747 0
 2670 0034 0423     		movs	r3, #4
 2671 0036 80F85130 		strb	r3, [r0, #81]
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2672              		.loc 1 1753 0
 2673 003a 1346     		mov	r3, r2
 2674 003c 0A46     		mov	r2, r1
 2675              	.LVL222:
 2676 003e FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 2677              	.LVL223:
 2678 0042 0346     		mov	r3, r0
 2679 0044 F4E7     		b	.L252
 2680              	.LVL224:
 2681              	.L263:
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2682              		.loc 1 1765 0
 2683 0046 0029     		cmp	r1, #0
 2684 0048 48D0     		beq	.L259
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2685              		.loc 1 1765 0 is_stmt 0 discriminator 1
 2686 004a 002A     		cmp	r2, #0
 2687 004c 48D0     		beq	.L260
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2688              		.loc 1 1772 0 is_stmt 1
 2689 004e 0423     		movs	r3, #4
 2690 0050 84F85130 		strb	r3, [r4, #81]
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2691              		.loc 1 1773 0
 2692 0054 0023     		movs	r3, #0
 2693 0056 6365     		str	r3, [r4, #84]
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2694              		.loc 1 1774 0
 2695 0058 A163     		str	r1, [r4, #56]
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2696              		.loc 1 1775 0
 2697 005a A287     		strh	r2, [r4, #60]	@ movhi
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2698              		.loc 1 1776 0
 2699 005c E287     		strh	r2, [r4, #62]	@ movhi
ARM GAS  /tmp/ccmvXlQX.s 			page 124


1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2700              		.loc 1 1779 0
 2701 005e 2364     		str	r3, [r4, #64]
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2702              		.loc 1 1780 0
 2703 0060 6364     		str	r3, [r4, #68]
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2704              		.loc 1 1781 0
 2705 0062 A386     		strh	r3, [r4, #52]	@ movhi
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2706              		.loc 1 1782 0
 2707 0064 E386     		strh	r3, [r4, #54]	@ movhi
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2708              		.loc 1 1785 0
 2709 0066 B5F5004F 		cmp	r5, #32768
 2710 006a 1DD0     		beq	.L264
 2711              	.LVL225:
 2712              	.L254:
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2713              		.loc 1 1799 0
 2714 006c E36C     		ldr	r3, [r4, #76]
 2715 006e 1E4A     		ldr	r2, .L265
 2716 0070 DA62     		str	r2, [r3, #44]
1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2717              		.loc 1 1802 0
 2718 0072 E36C     		ldr	r3, [r4, #76]
 2719 0074 1D4A     		ldr	r2, .L265+4
 2720 0076 9A62     		str	r2, [r3, #40]
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2721              		.loc 1 1805 0
 2722 0078 E36C     		ldr	r3, [r4, #76]
 2723 007a 1D4A     		ldr	r2, .L265+8
 2724 007c 1A63     		str	r2, [r3, #48]
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2725              		.loc 1 1808 0
 2726 007e E36C     		ldr	r3, [r4, #76]
 2727 0080 0022     		movs	r2, #0
 2728 0082 5A63     		str	r2, [r3, #52]
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2729              		.loc 1 1811 0
 2730 0084 2168     		ldr	r1, [r4]
 2731              	.LVL226:
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2732              		.loc 1 1812 0
 2733 0086 E38F     		ldrh	r3, [r4, #62]
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2734              		.loc 1 1811 0
 2735 0088 9BB2     		uxth	r3, r3
 2736 008a A26B     		ldr	r2, [r4, #56]
 2737 008c 0C31     		adds	r1, r1, #12
 2738 008e E06C     		ldr	r0, [r4, #76]
 2739 0090 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2740              	.LVL227:
 2741 0094 0346     		mov	r3, r0
 2742 0096 68B1     		cbz	r0, .L255
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2743              		.loc 1 1815 0
ARM GAS  /tmp/ccmvXlQX.s 			page 125


 2744 0098 636D     		ldr	r3, [r4, #84]
 2745 009a 43F01003 		orr	r3, r3, #16
 2746 009e 6365     		str	r3, [r4, #84]
 2747              	.LVL228:
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2748              		.loc 1 1818 0
 2749 00a0 0123     		movs	r3, #1
 2750 00a2 84F85130 		strb	r3, [r4, #81]
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2751              		.loc 1 1819 0
 2752 00a6 C0E7     		b	.L253
 2753              	.LVL229:
 2754              	.L264:
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2755              		.loc 1 1787 0
 2756 00a8 2268     		ldr	r2, [r4]
 2757              	.LVL230:
 2758 00aa 1368     		ldr	r3, [r2]
 2759 00ac 23F48043 		bic	r3, r3, #16384
 2760 00b0 1360     		str	r3, [r2]
 2761              	.LVL231:
 2762 00b2 DBE7     		b	.L254
 2763              	.LVL232:
 2764              	.L255:
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2765              		.loc 1 1823 0
 2766 00b4 2268     		ldr	r2, [r4]
 2767 00b6 1168     		ldr	r1, [r2]
 2768 00b8 11F0400F 		tst	r1, #64
 2769 00bc 03D1     		bne	.L256
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2770              		.loc 1 1826 0
 2771 00be 1168     		ldr	r1, [r2]
 2772 00c0 41F04001 		orr	r1, r1, #64
 2773 00c4 1160     		str	r1, [r2]
 2774              	.L256:
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2775              		.loc 1 1830 0
 2776 00c6 2168     		ldr	r1, [r4]
 2777 00c8 4A68     		ldr	r2, [r1, #4]
 2778 00ca 42F02002 		orr	r2, r2, #32
 2779 00ce 4A60     		str	r2, [r1, #4]
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2780              		.loc 1 1833 0
 2781 00d0 2168     		ldr	r1, [r4]
 2782 00d2 4A68     		ldr	r2, [r1, #4]
 2783 00d4 42F00102 		orr	r2, r2, #1
 2784 00d8 4A60     		str	r2, [r1, #4]
 2785 00da A6E7     		b	.L253
 2786              	.LVL233:
 2787              	.L259:
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2788              		.loc 1 1767 0
 2789 00dc 0123     		movs	r3, #1
 2790 00de A4E7     		b	.L253
 2791              	.L260:
 2792 00e0 0123     		movs	r3, #1
ARM GAS  /tmp/ccmvXlQX.s 			page 126


 2793 00e2 A2E7     		b	.L253
 2794              	.L257:
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2795              		.loc 1 1757 0
 2796 00e4 0223     		movs	r3, #2
 2797 00e6 A3E7     		b	.L252
 2798              	.L266:
 2799              		.align	2
 2800              	.L265:
 2801 00e8 00000000 		.word	SPI_DMAHalfReceiveCplt
 2802 00ec 00000000 		.word	SPI_DMAReceiveCplt
 2803 00f0 00000000 		.word	SPI_DMAError
 2804              		.cfi_endproc
 2805              	.LFE76:
 2807              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 2808              		.align	1
 2809              		.global	HAL_SPI_Abort
 2810              		.syntax unified
 2811              		.thumb
 2812              		.thumb_func
 2813              		.fpu softvfp
 2815              	HAL_SPI_Abort:
 2816              	.LFB78:
1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 2817              		.loc 1 1998 0
 2818              		.cfi_startproc
 2819              		@ args = 0, pretend = 0, frame = 16
 2820              		@ frame_needed = 0, uses_anonymous_args = 0
 2821              	.LVL234:
 2822 0000 10B5     		push	{r4, lr}
 2823              	.LCFI34:
 2824              		.cfi_def_cfa_offset 8
 2825              		.cfi_offset 4, -8
 2826              		.cfi_offset 14, -4
 2827 0002 84B0     		sub	sp, sp, #16
 2828              	.LCFI35:
 2829              		.cfi_def_cfa_offset 24
 2830 0004 0446     		mov	r4, r0
 2831              	.LVL235:
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = resetcount;
 2832              		.loc 1 2005 0
 2833 0006 494B     		ldr	r3, .L288
 2834 0008 1B68     		ldr	r3, [r3]
 2835 000a 494A     		ldr	r2, .L288+4
 2836 000c A2FB0323 		umull	r2, r3, r2, r3
 2837 0010 5B0A     		lsrs	r3, r3, #9
 2838 0012 6422     		movs	r2, #100
 2839 0014 02FB03F3 		mul	r3, r2, r3
 2840 0018 0293     		str	r3, [sp, #8]
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2841              		.loc 1 2006 0
 2842 001a 029B     		ldr	r3, [sp, #8]
 2843 001c 0393     		str	r3, [sp, #12]
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2844              		.loc 1 2009 0
 2845 001e 0268     		ldr	r2, [r0]
 2846 0020 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccmvXlQX.s 			page 127


 2847 0022 23F02003 		bic	r3, r3, #32
 2848 0026 5360     		str	r3, [r2, #4]
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2849              		.loc 1 2012 0
 2850 0028 0268     		ldr	r2, [r0]
 2851 002a 5368     		ldr	r3, [r2, #4]
 2852 002c 13F0800F 		tst	r3, #128
 2853 0030 12D0     		beq	.L268
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 2854              		.loc 1 2014 0
 2855 0032 404B     		ldr	r3, .L288+8
 2856 0034 4364     		str	r3, [r0, #68]
 2857              	.L271:
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 2858              		.loc 1 2018 0
 2859 0036 039B     		ldr	r3, [sp, #12]
 2860 0038 43B1     		cbz	r3, .L285
2023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 2861              		.loc 1 2023 0
 2862 003a 039B     		ldr	r3, [sp, #12]
 2863 003c 013B     		subs	r3, r3, #1
 2864 003e 0393     		str	r3, [sp, #12]
2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
 2865              		.loc 1 2024 0
 2866 0040 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 2867 0044 DBB2     		uxtb	r3, r3
 2868 0046 072B     		cmp	r3, #7
 2869 0048 F5D1     		bne	.L271
 2870 004a 03E0     		b	.L270
 2871              	.L285:
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 2872              		.loc 1 2020 0
 2873 004c 636D     		ldr	r3, [r4, #84]
 2874 004e 43F04003 		orr	r3, r3, #64
 2875 0052 6365     		str	r3, [r4, #84]
 2876              	.L270:
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2877              		.loc 1 2026 0
 2878 0054 029B     		ldr	r3, [sp, #8]
 2879 0056 0393     		str	r3, [sp, #12]
 2880              	.L268:
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2881              		.loc 1 2029 0
 2882 0058 5368     		ldr	r3, [r2, #4]
 2883 005a 13F0400F 		tst	r3, #64
 2884 005e 12D0     		beq	.L272
2031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 2885              		.loc 1 2031 0
 2886 0060 354B     		ldr	r3, .L288+12
 2887 0062 2364     		str	r3, [r4, #64]
 2888              	.L275:
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 2889              		.loc 1 2035 0
 2890 0064 039B     		ldr	r3, [sp, #12]
 2891 0066 43B1     		cbz	r3, .L286
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 2892              		.loc 1 2040 0
ARM GAS  /tmp/ccmvXlQX.s 			page 128


 2893 0068 039B     		ldr	r3, [sp, #12]
 2894 006a 013B     		subs	r3, r3, #1
 2895 006c 0393     		str	r3, [sp, #12]
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
 2896              		.loc 1 2041 0
 2897 006e 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 2898 0072 DBB2     		uxtb	r3, r3
 2899 0074 072B     		cmp	r3, #7
 2900 0076 F5D1     		bne	.L275
 2901 0078 03E0     		b	.L274
 2902              	.L286:
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 2903              		.loc 1 2037 0
 2904 007a 636D     		ldr	r3, [r4, #84]
 2905 007c 43F04003 		orr	r3, r3, #64
 2906 0080 6365     		str	r3, [r4, #84]
 2907              	.L274:
2043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2908              		.loc 1 2043 0
 2909 0082 029B     		ldr	r3, [sp, #8]
 2910 0084 0393     		str	r3, [sp, #12]
 2911              	.L272:
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2912              		.loc 1 2047 0
 2913 0086 5368     		ldr	r3, [r2, #4]
 2914 0088 13F0020F 		tst	r3, #2
 2915 008c 1DD0     		beq	.L276
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 2916              		.loc 1 2050 0
 2917 008e A36C     		ldr	r3, [r4, #72]
 2918 0090 DBB1     		cbz	r3, .L276
2054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2919              		.loc 1 2054 0
 2920 0092 0022     		movs	r2, #0
 2921 0094 5A63     		str	r2, [r3, #52]
2057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 2922              		.loc 1 2057 0
 2923 0096 A06C     		ldr	r0, [r4, #72]
 2924              	.LVL236:
 2925 0098 FFF7FEFF 		bl	HAL_DMA_Abort
 2926              	.LVL237:
 2927 009c 08B1     		cbz	r0, .L277
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 2928              		.loc 1 2059 0
 2929 009e 4023     		movs	r3, #64
 2930 00a0 6365     		str	r3, [r4, #84]
 2931              	.L277:
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2932              		.loc 1 2063 0
 2933 00a2 2268     		ldr	r2, [r4]
 2934 00a4 5368     		ldr	r3, [r2, #4]
 2935 00a6 23F00203 		bic	r3, r3, #2
 2936 00aa 5360     		str	r3, [r2, #4]
 2937              	.L279:
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 2938              		.loc 1 2068 0
 2939 00ac 039B     		ldr	r3, [sp, #12]
ARM GAS  /tmp/ccmvXlQX.s 			page 129


 2940 00ae 43B1     		cbz	r3, .L287
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 2941              		.loc 1 2073 0
 2942 00b0 039B     		ldr	r3, [sp, #12]
 2943 00b2 013B     		subs	r3, r3, #1
 2944 00b4 0393     		str	r3, [sp, #12]
2074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 2945              		.loc 1 2074 0
 2946 00b6 2368     		ldr	r3, [r4]
 2947 00b8 9B68     		ldr	r3, [r3, #8]
 2948 00ba 13F0020F 		tst	r3, #2
 2949 00be F5D0     		beq	.L279
 2950 00c0 03E0     		b	.L276
 2951              	.L287:
2070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           break;
 2952              		.loc 1 2070 0
 2953 00c2 636D     		ldr	r3, [r4, #84]
 2954 00c4 43F04003 		orr	r3, r3, #64
 2955 00c8 6365     		str	r3, [r4, #84]
 2956              	.L276:
2079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2957              		.loc 1 2079 0
 2958 00ca 2368     		ldr	r3, [r4]
 2959 00cc 5B68     		ldr	r3, [r3, #4]
 2960 00ce 13F0010F 		tst	r3, #1
 2961 00d2 13D0     		beq	.L280
2082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 2962              		.loc 1 2082 0
 2963 00d4 E36C     		ldr	r3, [r4, #76]
 2964 00d6 8BB1     		cbz	r3, .L280
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2965              		.loc 1 2086 0
 2966 00d8 0022     		movs	r2, #0
 2967 00da 5A63     		str	r2, [r3, #52]
2089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 2968              		.loc 1 2089 0
 2969 00dc E06C     		ldr	r0, [r4, #76]
 2970 00de FFF7FEFF 		bl	HAL_DMA_Abort
 2971              	.LVL238:
 2972 00e2 08B1     		cbz	r0, .L281
2091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 2973              		.loc 1 2091 0
 2974 00e4 4023     		movs	r3, #64
 2975 00e6 6365     		str	r3, [r4, #84]
 2976              	.L281:
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2977              		.loc 1 2095 0
 2978 00e8 2268     		ldr	r2, [r4]
 2979 00ea 1368     		ldr	r3, [r2]
 2980 00ec 23F04003 		bic	r3, r3, #64
 2981 00f0 1360     		str	r3, [r2]
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 2982              		.loc 1 2098 0
 2983 00f2 2268     		ldr	r2, [r4]
 2984 00f4 5368     		ldr	r3, [r2, #4]
 2985 00f6 23F00103 		bic	r3, r3, #1
 2986 00fa 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccmvXlQX.s 			page 130


 2987              	.L280:
2102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2988              		.loc 1 2102 0
 2989 00fc 0023     		movs	r3, #0
 2990 00fe E387     		strh	r3, [r4, #62]	@ movhi
2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2991              		.loc 1 2103 0
 2992 0100 E386     		strh	r3, [r4, #54]	@ movhi
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2993              		.loc 1 2106 0
 2994 0102 636D     		ldr	r3, [r4, #84]
 2995 0104 402B     		cmp	r3, #64
 2996 0106 0ED0     		beq	.L283
2114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2997              		.loc 1 2114 0
 2998 0108 0020     		movs	r0, #0
 2999 010a 6065     		str	r0, [r4, #84]
 3000              	.L282:
 3001              	.LVL239:
 3002              	.LBB4:
2118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3003              		.loc 1 2118 0
 3004 010c 0023     		movs	r3, #0
 3005 010e 0193     		str	r3, [sp, #4]
 3006 0110 2368     		ldr	r3, [r4]
 3007 0112 DA68     		ldr	r2, [r3, #12]
 3008 0114 0192     		str	r2, [sp, #4]
 3009 0116 9B68     		ldr	r3, [r3, #8]
 3010 0118 0193     		str	r3, [sp, #4]
 3011 011a 019B     		ldr	r3, [sp, #4]
 3012              	.LBE4:
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3013              		.loc 1 2121 0
 3014 011c 0123     		movs	r3, #1
 3015 011e 84F85130 		strb	r3, [r4, #81]
2124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3016              		.loc 1 2124 0
 3017 0122 04B0     		add	sp, sp, #16
 3018              	.LCFI36:
 3019              		.cfi_remember_state
 3020              		.cfi_def_cfa_offset 8
 3021              		@ sp needed
 3022 0124 10BD     		pop	{r4, pc}
 3023              	.LVL240:
 3024              	.L283:
 3025              	.LCFI37:
 3026              		.cfi_restore_state
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3027              		.loc 1 2109 0
 3028 0126 0120     		movs	r0, #1
 3029 0128 F0E7     		b	.L282
 3030              	.L289:
 3031 012a 00BF     		.align	2
 3032              	.L288:
 3033 012c 00000000 		.word	SystemCoreClock
 3034 0130 F1197605 		.word	91625969
 3035 0134 00000000 		.word	SPI_AbortTx_ISR
ARM GAS  /tmp/ccmvXlQX.s 			page 131


 3036 0138 00000000 		.word	SPI_AbortRx_ISR
 3037              		.cfi_endproc
 3038              	.LFE78:
 3040              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 3041              		.align	1
 3042              		.global	HAL_SPI_DMAPause
 3043              		.syntax unified
 3044              		.thumb
 3045              		.thumb_func
 3046              		.fpu softvfp
 3048              	HAL_SPI_DMAPause:
 3049              	.LFB80:
2302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
 3050              		.loc 1 2302 0
 3051              		.cfi_startproc
 3052              		@ args = 0, pretend = 0, frame = 0
 3053              		@ frame_needed = 0, uses_anonymous_args = 0
 3054              		@ link register save eliminated.
 3055              	.LVL241:
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3056              		.loc 1 2304 0
 3057 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3058 0004 012B     		cmp	r3, #1
 3059 0006 0CD0     		beq	.L292
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3060              		.loc 1 2304 0 is_stmt 0 discriminator 2
 3061 0008 0123     		movs	r3, #1
 3062 000a 80F85030 		strb	r3, [r0, #80]
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3063              		.loc 1 2307 0 is_stmt 1 discriminator 2
 3064 000e 0268     		ldr	r2, [r0]
 3065 0010 5368     		ldr	r3, [r2, #4]
 3066 0012 23F00303 		bic	r3, r3, #3
 3067 0016 5360     		str	r3, [r2, #4]
2310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3068              		.loc 1 2310 0 discriminator 2
 3069 0018 0023     		movs	r3, #0
 3070 001a 80F85030 		strb	r3, [r0, #80]
2312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 3071              		.loc 1 2312 0 discriminator 2
 3072 001e 1846     		mov	r0, r3
 3073              	.LVL242:
 3074 0020 7047     		bx	lr
 3075              	.LVL243:
 3076              	.L292:
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3077              		.loc 1 2304 0
 3078 0022 0220     		movs	r0, #2
 3079              	.LVL244:
2313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3080              		.loc 1 2313 0
 3081 0024 7047     		bx	lr
 3082              		.cfi_endproc
 3083              	.LFE80:
 3085              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 3086              		.align	1
 3087              		.global	HAL_SPI_DMAResume
ARM GAS  /tmp/ccmvXlQX.s 			page 132


 3088              		.syntax unified
 3089              		.thumb
 3090              		.thumb_func
 3091              		.fpu softvfp
 3093              	HAL_SPI_DMAResume:
 3094              	.LFB81:
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
 3095              		.loc 1 2322 0
 3096              		.cfi_startproc
 3097              		@ args = 0, pretend = 0, frame = 0
 3098              		@ frame_needed = 0, uses_anonymous_args = 0
 3099              		@ link register save eliminated.
 3100              	.LVL245:
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3101              		.loc 1 2324 0
 3102 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3103 0004 012B     		cmp	r3, #1
 3104 0006 0CD0     		beq	.L295
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3105              		.loc 1 2324 0 is_stmt 0 discriminator 2
 3106 0008 0123     		movs	r3, #1
 3107 000a 80F85030 		strb	r3, [r0, #80]
2327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3108              		.loc 1 2327 0 is_stmt 1 discriminator 2
 3109 000e 0268     		ldr	r2, [r0]
 3110 0010 5368     		ldr	r3, [r2, #4]
 3111 0012 43F00303 		orr	r3, r3, #3
 3112 0016 5360     		str	r3, [r2, #4]
2330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3113              		.loc 1 2330 0 discriminator 2
 3114 0018 0023     		movs	r3, #0
 3115 001a 80F85030 		strb	r3, [r0, #80]
2332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 3116              		.loc 1 2332 0 discriminator 2
 3117 001e 1846     		mov	r0, r3
 3118              	.LVL246:
 3119 0020 7047     		bx	lr
 3120              	.LVL247:
 3121              	.L295:
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3122              		.loc 1 2324 0
 3123 0022 0220     		movs	r0, #2
 3124              	.LVL248:
2333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3125              		.loc 1 2333 0
 3126 0024 7047     		bx	lr
 3127              		.cfi_endproc
 3128              	.LFE81:
 3130              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 3131              		.align	1
 3132              		.global	HAL_SPI_DMAStop
 3133              		.syntax unified
 3134              		.thumb
 3135              		.thumb_func
 3136              		.fpu softvfp
 3138              	HAL_SPI_DMAStop:
 3139              	.LFB82:
ARM GAS  /tmp/ccmvXlQX.s 			page 133


2342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3140              		.loc 1 2342 0
 3141              		.cfi_startproc
 3142              		@ args = 0, pretend = 0, frame = 0
 3143              		@ frame_needed = 0, uses_anonymous_args = 0
 3144              	.LVL249:
 3145 0000 38B5     		push	{r3, r4, r5, lr}
 3146              	.LCFI38:
 3147              		.cfi_def_cfa_offset 16
 3148              		.cfi_offset 3, -16
 3149              		.cfi_offset 4, -12
 3150              		.cfi_offset 5, -8
 3151              		.cfi_offset 14, -4
 3152 0002 0446     		mov	r4, r0
 3153              	.LVL250:
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3154              		.loc 1 2351 0
 3155 0004 806C     		ldr	r0, [r0, #72]
 3156              	.LVL251:
 3157 0006 E0B1     		cbz	r0, .L299
2353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3158              		.loc 1 2353 0
 3159 0008 FFF7FEFF 		bl	HAL_DMA_Abort
 3160              	.LVL252:
 3161 000c 0546     		mov	r5, r0
 3162 000e 20B1     		cbz	r0, .L297
2355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3163              		.loc 1 2355 0
 3164 0010 636D     		ldr	r3, [r4, #84]
 3165 0012 43F01003 		orr	r3, r3, #16
 3166 0016 6365     		str	r3, [r4, #84]
 3167              	.LVL253:
2356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 3168              		.loc 1 2356 0
 3169 0018 0125     		movs	r5, #1
 3170              	.LVL254:
 3171              	.L297:
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3172              		.loc 1 2360 0
 3173 001a E06C     		ldr	r0, [r4, #76]
 3174 001c 38B1     		cbz	r0, .L298
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3175              		.loc 1 2362 0
 3176 001e FFF7FEFF 		bl	HAL_DMA_Abort
 3177              	.LVL255:
 3178 0022 20B1     		cbz	r0, .L298
2364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3179              		.loc 1 2364 0
 3180 0024 636D     		ldr	r3, [r4, #84]
 3181 0026 43F01003 		orr	r3, r3, #16
 3182 002a 6365     		str	r3, [r4, #84]
 3183              	.LVL256:
2365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 3184              		.loc 1 2365 0
 3185 002c 0125     		movs	r5, #1
 3186              	.LVL257:
 3187              	.L298:
ARM GAS  /tmp/ccmvXlQX.s 			page 134


2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 3188              		.loc 1 2370 0
 3189 002e 2268     		ldr	r2, [r4]
 3190 0030 5368     		ldr	r3, [r2, #4]
 3191 0032 23F00303 		bic	r3, r3, #3
 3192 0036 5360     		str	r3, [r2, #4]
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 3193              		.loc 1 2371 0
 3194 0038 0123     		movs	r3, #1
 3195 003a 84F85130 		strb	r3, [r4, #81]
2373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3196              		.loc 1 2373 0
 3197 003e 2846     		mov	r0, r5
 3198 0040 38BD     		pop	{r3, r4, r5, pc}
 3199              	.LVL258:
 3200              	.L299:
2343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
 3201              		.loc 1 2343 0
 3202 0042 0025     		movs	r5, #0
 3203 0044 E9E7     		b	.L297
 3204              		.cfi_endproc
 3205              	.LFE82:
 3207              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 3208              		.align	1
 3209              		.weak	HAL_SPI_TxCpltCallback
 3210              		.syntax unified
 3211              		.thumb
 3212              		.thumb_func
 3213              		.fpu softvfp
 3215              	HAL_SPI_TxCpltCallback:
 3216              	.LFB84:
2484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3217              		.loc 1 2484 0
 3218              		.cfi_startproc
 3219              		@ args = 0, pretend = 0, frame = 0
 3220              		@ frame_needed = 0, uses_anonymous_args = 0
 3221              		@ link register save eliminated.
 3222              	.LVL259:
 3223 0000 7047     		bx	lr
 3224              		.cfi_endproc
 3225              	.LFE84:
 3227              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 3228              		.align	1
 3229              		.weak	HAL_SPI_RxCpltCallback
 3230              		.syntax unified
 3231              		.thumb
 3232              		.thumb_func
 3233              		.fpu softvfp
 3235              	HAL_SPI_RxCpltCallback:
 3236              	.LFB85:
2500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3237              		.loc 1 2500 0
 3238              		.cfi_startproc
 3239              		@ args = 0, pretend = 0, frame = 0
 3240              		@ frame_needed = 0, uses_anonymous_args = 0
 3241              		@ link register save eliminated.
 3242              	.LVL260:
ARM GAS  /tmp/ccmvXlQX.s 			page 135


 3243 0000 7047     		bx	lr
 3244              		.cfi_endproc
 3245              	.LFE85:
 3247              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 3248              		.align	1
 3249              		.weak	HAL_SPI_TxRxCpltCallback
 3250              		.syntax unified
 3251              		.thumb
 3252              		.thumb_func
 3253              		.fpu softvfp
 3255              	HAL_SPI_TxRxCpltCallback:
 3256              	.LFB86:
2516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3257              		.loc 1 2516 0
 3258              		.cfi_startproc
 3259              		@ args = 0, pretend = 0, frame = 0
 3260              		@ frame_needed = 0, uses_anonymous_args = 0
 3261              		@ link register save eliminated.
 3262              	.LVL261:
 3263 0000 7047     		bx	lr
 3264              		.cfi_endproc
 3265              	.LFE86:
 3267              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 3268              		.align	1
 3269              		.weak	HAL_SPI_TxHalfCpltCallback
 3270              		.syntax unified
 3271              		.thumb
 3272              		.thumb_func
 3273              		.fpu softvfp
 3275              	HAL_SPI_TxHalfCpltCallback:
 3276              	.LFB87:
2532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3277              		.loc 1 2532 0
 3278              		.cfi_startproc
 3279              		@ args = 0, pretend = 0, frame = 0
 3280              		@ frame_needed = 0, uses_anonymous_args = 0
 3281              		@ link register save eliminated.
 3282              	.LVL262:
 3283 0000 7047     		bx	lr
 3284              		.cfi_endproc
 3285              	.LFE87:
 3287              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 3288              		.align	1
 3289              		.syntax unified
 3290              		.thumb
 3291              		.thumb_func
 3292              		.fpu softvfp
 3294              	SPI_DMAHalfTransmitCplt:
 3295              	.LFB97:
2897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3296              		.loc 1 2897 0
 3297              		.cfi_startproc
 3298              		@ args = 0, pretend = 0, frame = 0
 3299              		@ frame_needed = 0, uses_anonymous_args = 0
 3300              	.LVL263:
2897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3301              		.loc 1 2897 0
ARM GAS  /tmp/ccmvXlQX.s 			page 136


 3302 0000 08B5     		push	{r3, lr}
 3303              	.LCFI39:
 3304              		.cfi_def_cfa_offset 8
 3305              		.cfi_offset 3, -8
 3306              		.cfi_offset 14, -4
 3307              	.LVL264:
2904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3308              		.loc 1 2904 0
 3309 0002 406A     		ldr	r0, [r0, #36]
 3310              	.LVL265:
 3311 0004 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
 3312              	.LVL266:
 3313 0008 08BD     		pop	{r3, pc}
 3314              		.cfi_endproc
 3315              	.LFE97:
 3317              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 3318              		.align	1
 3319              		.weak	HAL_SPI_RxHalfCpltCallback
 3320              		.syntax unified
 3321              		.thumb
 3322              		.thumb_func
 3323              		.fpu softvfp
 3325              	HAL_SPI_RxHalfCpltCallback:
 3326              	.LFB88:
2548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3327              		.loc 1 2548 0
 3328              		.cfi_startproc
 3329              		@ args = 0, pretend = 0, frame = 0
 3330              		@ frame_needed = 0, uses_anonymous_args = 0
 3331              		@ link register save eliminated.
 3332              	.LVL267:
 3333 0000 7047     		bx	lr
 3334              		.cfi_endproc
 3335              	.LFE88:
 3337              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 3338              		.align	1
 3339              		.syntax unified
 3340              		.thumb
 3341              		.thumb_func
 3342              		.fpu softvfp
 3344              	SPI_DMAHalfReceiveCplt:
 3345              	.LFB98:
2915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3346              		.loc 1 2915 0
 3347              		.cfi_startproc
 3348              		@ args = 0, pretend = 0, frame = 0
 3349              		@ frame_needed = 0, uses_anonymous_args = 0
 3350              	.LVL268:
2915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3351              		.loc 1 2915 0
 3352 0000 08B5     		push	{r3, lr}
 3353              	.LCFI40:
 3354              		.cfi_def_cfa_offset 8
 3355              		.cfi_offset 3, -8
 3356              		.cfi_offset 14, -4
 3357              	.LVL269:
2922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccmvXlQX.s 			page 137


 3358              		.loc 1 2922 0
 3359 0002 406A     		ldr	r0, [r0, #36]
 3360              	.LVL270:
 3361 0004 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
 3362              	.LVL271:
 3363 0008 08BD     		pop	{r3, pc}
 3364              		.cfi_endproc
 3365              	.LFE98:
 3367              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 3368              		.align	1
 3369              		.weak	HAL_SPI_TxRxHalfCpltCallback
 3370              		.syntax unified
 3371              		.thumb
 3372              		.thumb_func
 3373              		.fpu softvfp
 3375              	HAL_SPI_TxRxHalfCpltCallback:
 3376              	.LFB89:
2564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3377              		.loc 1 2564 0
 3378              		.cfi_startproc
 3379              		@ args = 0, pretend = 0, frame = 0
 3380              		@ frame_needed = 0, uses_anonymous_args = 0
 3381              		@ link register save eliminated.
 3382              	.LVL272:
 3383 0000 7047     		bx	lr
 3384              		.cfi_endproc
 3385              	.LFE89:
 3387              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 3388              		.align	1
 3389              		.syntax unified
 3390              		.thumb
 3391              		.thumb_func
 3392              		.fpu softvfp
 3394              	SPI_DMAHalfTransmitReceiveCplt:
 3395              	.LFB99:
2933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3396              		.loc 1 2933 0
 3397              		.cfi_startproc
 3398              		@ args = 0, pretend = 0, frame = 0
 3399              		@ frame_needed = 0, uses_anonymous_args = 0
 3400              	.LVL273:
2933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3401              		.loc 1 2933 0
 3402 0000 08B5     		push	{r3, lr}
 3403              	.LCFI41:
 3404              		.cfi_def_cfa_offset 8
 3405              		.cfi_offset 3, -8
 3406              		.cfi_offset 14, -4
 3407              	.LVL274:
2940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3408              		.loc 1 2940 0
 3409 0002 406A     		ldr	r0, [r0, #36]
 3410              	.LVL275:
 3411 0004 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
 3412              	.LVL276:
 3413 0008 08BD     		pop	{r3, pc}
 3414              		.cfi_endproc
ARM GAS  /tmp/ccmvXlQX.s 			page 138


 3415              	.LFE99:
 3417              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 3418              		.align	1
 3419              		.weak	HAL_SPI_ErrorCallback
 3420              		.syntax unified
 3421              		.thumb
 3422              		.thumb_func
 3423              		.fpu softvfp
 3425              	HAL_SPI_ErrorCallback:
 3426              	.LFB90:
2580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3427              		.loc 1 2580 0
 3428              		.cfi_startproc
 3429              		@ args = 0, pretend = 0, frame = 0
 3430              		@ frame_needed = 0, uses_anonymous_args = 0
 3431              		@ link register save eliminated.
 3432              	.LVL277:
 3433 0000 7047     		bx	lr
 3434              		.cfi_endproc
 3435              	.LFE90:
 3437              		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
 3438              		.align	1
 3439              		.syntax unified
 3440              		.thumb
 3441              		.thumb_func
 3442              		.fpu softvfp
 3444              	SPI_CloseTx_ISR:
 3445              	.LFB117:
3753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 3446              		.loc 1 3753 0
 3447              		.cfi_startproc
 3448              		@ args = 0, pretend = 0, frame = 8
 3449              		@ frame_needed = 0, uses_anonymous_args = 0
 3450              	.LVL278:
3753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 3451              		.loc 1 3753 0
 3452 0000 10B5     		push	{r4, lr}
 3453              	.LCFI42:
 3454              		.cfi_def_cfa_offset 8
 3455              		.cfi_offset 4, -8
 3456              		.cfi_offset 14, -4
 3457 0002 82B0     		sub	sp, sp, #8
 3458              	.LCFI43:
 3459              		.cfi_def_cfa_offset 16
 3460 0004 0446     		mov	r4, r0
3755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3461              		.loc 1 3755 0
 3462 0006 204B     		ldr	r3, .L325
 3463 0008 1B68     		ldr	r3, [r3]
 3464 000a 204A     		ldr	r2, .L325+4
 3465 000c A2FB0323 		umull	r2, r3, r2, r3
 3466 0010 5B0A     		lsrs	r3, r3, #9
 3467 0012 6422     		movs	r2, #100
 3468 0014 02FB03F3 		mul	r3, r2, r3
 3469 0018 0193     		str	r3, [sp, #4]
3758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3470              		.loc 1 3758 0
ARM GAS  /tmp/ccmvXlQX.s 			page 139


 3471 001a FFF7FEFF 		bl	HAL_GetTick
 3472              	.LVL279:
 3473 001e 0246     		mov	r2, r0
 3474              	.LVL280:
 3475              	.L317:
3763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3476              		.loc 1 3763 0
 3477 0020 019B     		ldr	r3, [sp, #4]
 3478 0022 43B1     		cbz	r3, .L323
3768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 3479              		.loc 1 3768 0
 3480 0024 019B     		ldr	r3, [sp, #4]
 3481 0026 013B     		subs	r3, r3, #1
 3482 0028 0193     		str	r3, [sp, #4]
3769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3483              		.loc 1 3769 0
 3484 002a 2368     		ldr	r3, [r4]
 3485 002c 9B68     		ldr	r3, [r3, #8]
 3486 002e 13F0020F 		tst	r3, #2
 3487 0032 F5D0     		beq	.L317
 3488 0034 03E0     		b	.L316
 3489              	.L323:
3765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 3490              		.loc 1 3765 0
 3491 0036 636D     		ldr	r3, [r4, #84]
 3492 0038 43F02003 		orr	r3, r3, #32
 3493 003c 6365     		str	r3, [r4, #84]
 3494              	.L316:
3772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3495              		.loc 1 3772 0
 3496 003e 2168     		ldr	r1, [r4]
 3497 0040 4B68     		ldr	r3, [r1, #4]
 3498 0042 23F0A003 		bic	r3, r3, #160
 3499 0046 4B60     		str	r3, [r1, #4]
3775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3500              		.loc 1 3775 0
 3501 0048 6421     		movs	r1, #100
 3502 004a 2046     		mov	r0, r4
 3503              	.LVL281:
 3504 004c FFF7FEFF 		bl	SPI_EndRxTxTransaction
 3505              	.LVL282:
 3506 0050 18B1     		cbz	r0, .L318
3777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3507              		.loc 1 3777 0
 3508 0052 636D     		ldr	r3, [r4, #84]
 3509 0054 43F02003 		orr	r3, r3, #32
 3510 0058 6365     		str	r3, [r4, #84]
 3511              	.L318:
3781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3512              		.loc 1 3781 0
 3513 005a A368     		ldr	r3, [r4, #8]
 3514 005c 33B9     		cbnz	r3, .L319
 3515              	.LBB5:
3783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3516              		.loc 1 3783 0
 3517 005e 0093     		str	r3, [sp]
 3518 0060 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccmvXlQX.s 			page 140


 3519 0062 DA68     		ldr	r2, [r3, #12]
 3520 0064 0092     		str	r2, [sp]
 3521 0066 9B68     		ldr	r3, [r3, #8]
 3522 0068 0093     		str	r3, [sp]
 3523 006a 009B     		ldr	r3, [sp]
 3524              	.L319:
 3525              	.LBE5:
3786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 3526              		.loc 1 3786 0
 3527 006c 0123     		movs	r3, #1
 3528 006e 84F85130 		strb	r3, [r4, #81]
3787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3529              		.loc 1 3787 0
 3530 0072 636D     		ldr	r3, [r4, #84]
 3531 0074 23B9     		cbnz	r3, .L324
3802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3532              		.loc 1 3802 0
 3533 0076 2046     		mov	r0, r4
 3534 0078 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 3535              	.LVL283:
 3536              	.L314:
3805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3537              		.loc 1 3805 0
 3538 007c 02B0     		add	sp, sp, #8
 3539              	.LCFI44:
 3540              		.cfi_remember_state
 3541              		.cfi_def_cfa_offset 8
 3542              		@ sp needed
 3543 007e 10BD     		pop	{r4, pc}
 3544              	.LVL284:
 3545              	.L324:
 3546              	.LCFI45:
 3547              		.cfi_restore_state
3793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3548              		.loc 1 3793 0
 3549 0080 2046     		mov	r0, r4
 3550 0082 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3551              	.LVL285:
 3552 0086 F9E7     		b	.L314
 3553              	.L326:
 3554              		.align	2
 3555              	.L325:
 3556 0088 00000000 		.word	SystemCoreClock
 3557 008c F1197605 		.word	91625969
 3558              		.cfi_endproc
 3559              	.LFE117:
 3561              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 3562              		.align	1
 3563              		.syntax unified
 3564              		.thumb
 3565              		.thumb_func
 3566              		.fpu softvfp
 3568              	SPI_TxISR_8BIT:
 3569              	.LFB110:
3414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 3570              		.loc 1 3414 0
 3571              		.cfi_startproc
ARM GAS  /tmp/ccmvXlQX.s 			page 141


 3572              		@ args = 0, pretend = 0, frame = 0
 3573              		@ frame_needed = 0, uses_anonymous_args = 0
 3574              	.LVL286:
 3575 0000 08B5     		push	{r3, lr}
 3576              	.LCFI46:
 3577              		.cfi_def_cfa_offset 8
 3578              		.cfi_offset 3, -8
 3579              		.cfi_offset 14, -4
3415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 3580              		.loc 1 3415 0
 3581 0002 0368     		ldr	r3, [r0]
 3582 0004 026B     		ldr	r2, [r0, #48]
 3583 0006 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3584 0008 1A73     		strb	r2, [r3, #12]
3416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 3585              		.loc 1 3416 0
 3586 000a 036B     		ldr	r3, [r0, #48]
 3587 000c 0133     		adds	r3, r3, #1
 3588 000e 0363     		str	r3, [r0, #48]
3417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3589              		.loc 1 3417 0
 3590 0010 C38E     		ldrh	r3, [r0, #54]
 3591 0012 9BB2     		uxth	r3, r3
 3592 0014 013B     		subs	r3, r3, #1
 3593 0016 9BB2     		uxth	r3, r3
 3594 0018 C386     		strh	r3, [r0, #54]	@ movhi
3419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3595              		.loc 1 3419 0
 3596 001a C38E     		ldrh	r3, [r0, #54]
 3597 001c 9BB2     		uxth	r3, r3
 3598 001e 03B1     		cbz	r3, .L330
 3599              	.LVL287:
 3600              	.L327:
 3601 0020 08BD     		pop	{r3, pc}
 3602              	.LVL288:
 3603              	.L330:
3428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3604              		.loc 1 3428 0
 3605 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
 3606              	.LVL289:
3430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3607              		.loc 1 3430 0
 3608 0026 FBE7     		b	.L327
 3609              		.cfi_endproc
 3610              	.LFE110:
 3612              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 3613              		.align	1
 3614              		.syntax unified
 3615              		.thumb
 3616              		.thumb_func
 3617              		.fpu softvfp
 3619              	SPI_TxISR_16BIT:
 3620              	.LFB111:
3439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 3621              		.loc 1 3439 0
 3622              		.cfi_startproc
 3623              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccmvXlQX.s 			page 142


 3624              		@ frame_needed = 0, uses_anonymous_args = 0
 3625              	.LVL290:
 3626 0000 08B5     		push	{r3, lr}
 3627              	.LCFI47:
 3628              		.cfi_def_cfa_offset 8
 3629              		.cfi_offset 3, -8
 3630              		.cfi_offset 14, -4
3441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 3631              		.loc 1 3441 0
 3632 0002 0368     		ldr	r3, [r0]
 3633 0004 026B     		ldr	r2, [r0, #48]
 3634 0006 1288     		ldrh	r2, [r2]
 3635 0008 DA60     		str	r2, [r3, #12]
3442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 3636              		.loc 1 3442 0
 3637 000a 036B     		ldr	r3, [r0, #48]
 3638 000c 0233     		adds	r3, r3, #2
 3639 000e 0363     		str	r3, [r0, #48]
3443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3640              		.loc 1 3443 0
 3641 0010 C38E     		ldrh	r3, [r0, #54]
 3642 0012 9BB2     		uxth	r3, r3
 3643 0014 013B     		subs	r3, r3, #1
 3644 0016 9BB2     		uxth	r3, r3
 3645 0018 C386     		strh	r3, [r0, #54]	@ movhi
3445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3646              		.loc 1 3445 0
 3647 001a C38E     		ldrh	r3, [r0, #54]
 3648 001c 9BB2     		uxth	r3, r3
 3649 001e 03B1     		cbz	r3, .L334
 3650              	.LVL291:
 3651              	.L331:
 3652 0020 08BD     		pop	{r3, pc}
 3653              	.LVL292:
 3654              	.L334:
3454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3655              		.loc 1 3454 0
 3656 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
 3657              	.LVL293:
3456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3658              		.loc 1 3456 0
 3659 0026 FBE7     		b	.L331
 3660              		.cfi_endproc
 3661              	.LFE111:
 3663              		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 3664              		.align	1
 3665              		.syntax unified
 3666              		.thumb
 3667              		.thumb_func
 3668              		.fpu softvfp
 3670              	SPI_CloseRx_ISR:
 3671              	.LFB116:
3679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
 3672              		.loc 1 3679 0
 3673              		.cfi_startproc
 3674              		@ args = 0, pretend = 0, frame = 8
 3675              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccmvXlQX.s 			page 143


 3676              	.LVL294:
 3677 0000 10B5     		push	{r4, lr}
 3678              	.LCFI48:
 3679              		.cfi_def_cfa_offset 8
 3680              		.cfi_offset 4, -8
 3681              		.cfi_offset 14, -4
 3682 0002 82B0     		sub	sp, sp, #8
 3683              	.LCFI49:
 3684              		.cfi_def_cfa_offset 16
 3685 0004 0446     		mov	r4, r0
3681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3686              		.loc 1 3681 0
 3687 0006 0268     		ldr	r2, [r0]
 3688 0008 5368     		ldr	r3, [r2, #4]
 3689 000a 23F06003 		bic	r3, r3, #96
 3690 000e 5360     		str	r3, [r2, #4]
3684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3691              		.loc 1 3684 0
 3692 0010 FFF7FEFF 		bl	HAL_GetTick
 3693              	.LVL295:
 3694 0014 0246     		mov	r2, r0
 3695 0016 6421     		movs	r1, #100
 3696 0018 2046     		mov	r0, r4
 3697 001a FFF7FEFF 		bl	SPI_EndRxTransaction
 3698              	.LVL296:
 3699 001e 18B1     		cbz	r0, .L336
3686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3700              		.loc 1 3686 0
 3701 0020 636D     		ldr	r3, [r4, #84]
 3702 0022 43F02003 		orr	r3, r3, #32
 3703 0026 6365     		str	r3, [r4, #84]
 3704              	.L336:
3690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3705              		.loc 1 3690 0
 3706 0028 A368     		ldr	r3, [r4, #8]
 3707 002a 33B9     		cbnz	r3, .L337
 3708              	.LBB6:
3692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3709              		.loc 1 3692 0
 3710 002c 0193     		str	r3, [sp, #4]
 3711 002e 2368     		ldr	r3, [r4]
 3712 0030 DA68     		ldr	r2, [r3, #12]
 3713 0032 0192     		str	r2, [sp, #4]
 3714 0034 9B68     		ldr	r3, [r3, #8]
 3715 0036 0193     		str	r3, [sp, #4]
 3716 0038 019B     		ldr	r3, [sp, #4]
 3717              	.L337:
 3718              	.LBE6:
3694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3719              		.loc 1 3694 0
 3720 003a 0123     		movs	r3, #1
 3721 003c 84F85130 		strb	r3, [r4, #81]
3723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3722              		.loc 1 3723 0
 3723 0040 636D     		ldr	r3, [r4, #84]
 3724 0042 23B1     		cbz	r3, .L341
3738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccmvXlQX.s 			page 144


 3725              		.loc 1 3738 0
 3726 0044 2046     		mov	r0, r4
 3727 0046 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3728              	.LVL297:
 3729              	.L335:
3744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3730              		.loc 1 3744 0
 3731 004a 02B0     		add	sp, sp, #8
 3732              	.LCFI50:
 3733              		.cfi_remember_state
 3734              		.cfi_def_cfa_offset 8
 3735              		@ sp needed
 3736 004c 10BD     		pop	{r4, pc}
 3737              	.LVL298:
 3738              	.L341:
 3739              	.LCFI51:
 3740              		.cfi_restore_state
3729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3741              		.loc 1 3729 0
 3742 004e 2046     		mov	r0, r4
 3743 0050 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 3744              	.LVL299:
 3745 0054 F9E7     		b	.L335
 3746              		.cfi_endproc
 3747              	.LFE116:
 3749              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 3750              		.align	1
 3751              		.syntax unified
 3752              		.thumb
 3753              		.thumb_func
 3754              		.fpu softvfp
 3756              	SPI_RxISR_8BIT:
 3757              	.LFB108:
3315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
 3758              		.loc 1 3315 0
 3759              		.cfi_startproc
 3760              		@ args = 0, pretend = 0, frame = 0
 3761              		@ frame_needed = 0, uses_anonymous_args = 0
 3762              	.LVL300:
 3763 0000 08B5     		push	{r3, lr}
 3764              	.LCFI52:
 3765              		.cfi_def_cfa_offset 8
 3766              		.cfi_offset 3, -8
 3767              		.cfi_offset 14, -4
3316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 3768              		.loc 1 3316 0
 3769 0002 836B     		ldr	r3, [r0, #56]
 3770 0004 0268     		ldr	r2, [r0]
 3771 0006 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 3772 0008 1A70     		strb	r2, [r3]
3317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 3773              		.loc 1 3317 0
 3774 000a 836B     		ldr	r3, [r0, #56]
 3775 000c 0133     		adds	r3, r3, #1
 3776 000e 8363     		str	r3, [r0, #56]
3318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3777              		.loc 1 3318 0
ARM GAS  /tmp/ccmvXlQX.s 			page 145


 3778 0010 C38F     		ldrh	r3, [r0, #62]
 3779 0012 9BB2     		uxth	r3, r3
 3780 0014 013B     		subs	r3, r3, #1
 3781 0016 9BB2     		uxth	r3, r3
 3782 0018 C387     		strh	r3, [r0, #62]	@ movhi
3335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3783              		.loc 1 3335 0
 3784 001a C38F     		ldrh	r3, [r0, #62]
 3785 001c 9BB2     		uxth	r3, r3
 3786 001e 03B1     		cbz	r3, .L345
 3787              	.LVL301:
 3788              	.L342:
 3789 0020 08BD     		pop	{r3, pc}
 3790              	.LVL302:
 3791              	.L345:
3344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3792              		.loc 1 3344 0
 3793 0022 FFF7FEFF 		bl	SPI_CloseRx_ISR
 3794              	.LVL303:
3346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3795              		.loc 1 3346 0
 3796 0026 FBE7     		b	.L342
 3797              		.cfi_endproc
 3798              	.LFE108:
 3800              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 3801              		.align	1
 3802              		.syntax unified
 3803              		.thumb
 3804              		.thumb_func
 3805              		.fpu softvfp
 3807              	SPI_RxISR_16BIT:
 3808              	.LFB109:
3374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 3809              		.loc 1 3374 0
 3810              		.cfi_startproc
 3811              		@ args = 0, pretend = 0, frame = 0
 3812              		@ frame_needed = 0, uses_anonymous_args = 0
 3813              	.LVL304:
 3814 0000 08B5     		push	{r3, lr}
 3815              	.LCFI53:
 3816              		.cfi_def_cfa_offset 8
 3817              		.cfi_offset 3, -8
 3818              		.cfi_offset 14, -4
3375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 3819              		.loc 1 3375 0
 3820 0002 836B     		ldr	r3, [r0, #56]
 3821 0004 0268     		ldr	r2, [r0]
 3822 0006 D268     		ldr	r2, [r2, #12]
 3823 0008 1A80     		strh	r2, [r3]	@ movhi
3376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 3824              		.loc 1 3376 0
 3825 000a 836B     		ldr	r3, [r0, #56]
 3826 000c 0233     		adds	r3, r3, #2
 3827 000e 8363     		str	r3, [r0, #56]
3377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3828              		.loc 1 3377 0
 3829 0010 C38F     		ldrh	r3, [r0, #62]
ARM GAS  /tmp/ccmvXlQX.s 			page 146


 3830 0012 9BB2     		uxth	r3, r3
 3831 0014 013B     		subs	r3, r3, #1
 3832 0016 9BB2     		uxth	r3, r3
 3833 0018 C387     		strh	r3, [r0, #62]	@ movhi
3394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3834              		.loc 1 3394 0
 3835 001a C38F     		ldrh	r3, [r0, #62]
 3836 001c 9BB2     		uxth	r3, r3
 3837 001e 03B1     		cbz	r3, .L349
 3838              	.LVL305:
 3839              	.L346:
 3840 0020 08BD     		pop	{r3, pc}
 3841              	.LVL306:
 3842              	.L349:
3403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3843              		.loc 1 3403 0
 3844 0022 FFF7FEFF 		bl	SPI_CloseRx_ISR
 3845              	.LVL307:
3405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3846              		.loc 1 3405 0
 3847 0026 FBE7     		b	.L346
 3848              		.cfi_endproc
 3849              	.LFE109:
 3851              		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 3852              		.align	1
 3853              		.syntax unified
 3854              		.thumb
 3855              		.thumb_func
 3856              		.fpu softvfp
 3858              	SPI_CloseRxTx_ISR:
 3859              	.LFB115:
3573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 3860              		.loc 1 3573 0
 3861              		.cfi_startproc
 3862              		@ args = 0, pretend = 0, frame = 8
 3863              		@ frame_needed = 0, uses_anonymous_args = 0
 3864              	.LVL308:
 3865 0000 10B5     		push	{r4, lr}
 3866              	.LCFI54:
 3867              		.cfi_def_cfa_offset 8
 3868              		.cfi_offset 4, -8
 3869              		.cfi_offset 14, -4
 3870 0002 82B0     		sub	sp, sp, #8
 3871              	.LCFI55:
 3872              		.cfi_def_cfa_offset 16
 3873 0004 0446     		mov	r4, r0
3575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3874              		.loc 1 3575 0
 3875 0006 284B     		ldr	r3, .L362
 3876 0008 1B68     		ldr	r3, [r3]
 3877 000a 284A     		ldr	r2, .L362+4
 3878 000c A2FB0323 		umull	r2, r3, r2, r3
 3879 0010 5B0A     		lsrs	r3, r3, #9
 3880 0012 6422     		movs	r2, #100
 3881 0014 02FB03F3 		mul	r3, r2, r3
 3882 0018 0193     		str	r3, [sp, #4]
3578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccmvXlQX.s 			page 147


 3883              		.loc 1 3578 0
 3884 001a FFF7FEFF 		bl	HAL_GetTick
 3885              	.LVL309:
 3886 001e 0246     		mov	r2, r0
 3887              	.LVL310:
3581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3888              		.loc 1 3581 0
 3889 0020 2168     		ldr	r1, [r4]
 3890 0022 4B68     		ldr	r3, [r1, #4]
 3891 0024 23F02003 		bic	r3, r3, #32
 3892 0028 4B60     		str	r3, [r1, #4]
 3893              	.L353:
3586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3894              		.loc 1 3586 0
 3895 002a 019B     		ldr	r3, [sp, #4]
 3896 002c 43B1     		cbz	r3, .L360
3591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 3897              		.loc 1 3591 0
 3898 002e 019B     		ldr	r3, [sp, #4]
 3899 0030 013B     		subs	r3, r3, #1
 3900 0032 0193     		str	r3, [sp, #4]
3592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3901              		.loc 1 3592 0
 3902 0034 2368     		ldr	r3, [r4]
 3903 0036 9B68     		ldr	r3, [r3, #8]
 3904 0038 13F0020F 		tst	r3, #2
 3905 003c F5D0     		beq	.L353
 3906 003e 03E0     		b	.L352
 3907              	.L360:
3588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 3908              		.loc 1 3588 0
 3909 0040 636D     		ldr	r3, [r4, #84]
 3910 0042 43F02003 		orr	r3, r3, #32
 3911 0046 6365     		str	r3, [r4, #84]
 3912              	.L352:
3595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3913              		.loc 1 3595 0
 3914 0048 6421     		movs	r1, #100
 3915 004a 2046     		mov	r0, r4
 3916              	.LVL311:
 3917 004c FFF7FEFF 		bl	SPI_EndRxTxTransaction
 3918              	.LVL312:
 3919 0050 18B1     		cbz	r0, .L354
3597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3920              		.loc 1 3597 0
 3921 0052 636D     		ldr	r3, [r4, #84]
 3922 0054 43F02003 		orr	r3, r3, #32
 3923 0058 6365     		str	r3, [r4, #84]
 3924              	.L354:
3601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3925              		.loc 1 3601 0
 3926 005a A368     		ldr	r3, [r4, #8]
 3927 005c 33B9     		cbnz	r3, .L355
 3928              	.LBB7:
3603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3929              		.loc 1 3603 0
 3930 005e 0093     		str	r3, [sp]
ARM GAS  /tmp/ccmvXlQX.s 			page 148


 3931 0060 2368     		ldr	r3, [r4]
 3932 0062 DA68     		ldr	r2, [r3, #12]
 3933 0064 0092     		str	r2, [sp]
 3934 0066 9B68     		ldr	r3, [r3, #8]
 3935 0068 0093     		str	r3, [sp]
 3936 006a 009B     		ldr	r3, [sp]
 3937              	.L355:
 3938              	.LBE7:
3634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3939              		.loc 1 3634 0
 3940 006c 636D     		ldr	r3, [r4, #84]
 3941 006e 9BB9     		cbnz	r3, .L356
3636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 3942              		.loc 1 3636 0
 3943 0070 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 3944 0074 DBB2     		uxtb	r3, r3
 3945 0076 042B     		cmp	r3, #4
 3946 0078 07D0     		beq	.L361
3648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user TxRx complete callback */
 3947              		.loc 1 3648 0
 3948 007a 0123     		movs	r3, #1
 3949 007c 84F85130 		strb	r3, [r4, #81]
3653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3950              		.loc 1 3653 0
 3951 0080 2046     		mov	r0, r4
 3952 0082 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 3953              	.LVL313:
 3954              	.L350:
3670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3955              		.loc 1 3670 0
 3956 0086 02B0     		add	sp, sp, #8
 3957              	.LCFI56:
 3958              		.cfi_remember_state
 3959              		.cfi_def_cfa_offset 8
 3960              		@ sp needed
 3961 0088 10BD     		pop	{r4, pc}
 3962              	.LVL314:
 3963              	.L361:
 3964              	.LCFI57:
 3965              		.cfi_restore_state
3638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user Rx complete callback */
 3966              		.loc 1 3638 0
 3967 008a 0123     		movs	r3, #1
 3968 008c 84F85130 		strb	r3, [r4, #81]
3643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3969              		.loc 1 3643 0
 3970 0090 2046     		mov	r0, r4
 3971 0092 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 3972              	.LVL315:
 3973 0096 F6E7     		b	.L350
 3974              	.L356:
3659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
 3975              		.loc 1 3659 0
 3976 0098 0123     		movs	r3, #1
 3977 009a 84F85130 		strb	r3, [r4, #81]
3664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3978              		.loc 1 3664 0
ARM GAS  /tmp/ccmvXlQX.s 			page 149


 3979 009e 2046     		mov	r0, r4
 3980 00a0 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3981              	.LVL316:
3670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3982              		.loc 1 3670 0
 3983 00a4 EFE7     		b	.L350
 3984              	.L363:
 3985 00a6 00BF     		.align	2
 3986              	.L362:
 3987 00a8 00000000 		.word	SystemCoreClock
 3988 00ac F1197605 		.word	91625969
 3989              		.cfi_endproc
 3990              	.LFE115:
 3992              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 3993              		.align	1
 3994              		.syntax unified
 3995              		.thumb
 3996              		.thumb_func
 3997              		.fpu softvfp
 3999              	SPI_2linesTxISR_8BIT:
 4000              	.LFB105:
3174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 4001              		.loc 1 3174 0
 4002              		.cfi_startproc
 4003              		@ args = 0, pretend = 0, frame = 0
 4004              		@ frame_needed = 0, uses_anonymous_args = 0
 4005              	.LVL317:
 4006 0000 08B5     		push	{r3, lr}
 4007              	.LCFI58:
 4008              		.cfi_def_cfa_offset 8
 4009              		.cfi_offset 3, -8
 4010              		.cfi_offset 14, -4
3175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 4011              		.loc 1 3175 0
 4012 0002 0368     		ldr	r3, [r0]
 4013 0004 026B     		ldr	r2, [r0, #48]
 4014 0006 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4015 0008 1A73     		strb	r2, [r3, #12]
3176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 4016              		.loc 1 3176 0
 4017 000a 036B     		ldr	r3, [r0, #48]
 4018 000c 0133     		adds	r3, r3, #1
 4019 000e 0363     		str	r3, [r0, #48]
3177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4020              		.loc 1 3177 0
 4021 0010 C38E     		ldrh	r3, [r0, #54]
 4022 0012 9BB2     		uxth	r3, r3
 4023 0014 013B     		subs	r3, r3, #1
 4024 0016 9BB2     		uxth	r3, r3
 4025 0018 C386     		strh	r3, [r0, #54]	@ movhi
3180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4026              		.loc 1 3180 0
 4027 001a C38E     		ldrh	r3, [r0, #54]
 4028 001c 9BB2     		uxth	r3, r3
 4029 001e 3BB9     		cbnz	r3, .L364
3194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4030              		.loc 1 3194 0
ARM GAS  /tmp/ccmvXlQX.s 			page 150


 4031 0020 0268     		ldr	r2, [r0]
 4032 0022 5368     		ldr	r3, [r2, #4]
 4033 0024 23F08003 		bic	r3, r3, #128
 4034 0028 5360     		str	r3, [r2, #4]
3196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4035              		.loc 1 3196 0
 4036 002a C38F     		ldrh	r3, [r0, #62]
 4037 002c 9BB2     		uxth	r3, r3
 4038 002e 03B1     		cbz	r3, .L367
 4039              	.LVL318:
 4040              	.L364:
 4041 0030 08BD     		pop	{r3, pc}
 4042              	.LVL319:
 4043              	.L367:
3198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4044              		.loc 1 3198 0
 4045 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4046              	.LVL320:
3201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4047              		.loc 1 3201 0
 4048 0036 FBE7     		b	.L364
 4049              		.cfi_endproc
 4050              	.LFE105:
 4052              		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 4053              		.align	1
 4054              		.syntax unified
 4055              		.thumb
 4056              		.thumb_func
 4057              		.fpu softvfp
 4059              	SPI_2linesRxISR_8BIT:
 4060              	.LFB104:
3118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 8bit mode */
 4061              		.loc 1 3118 0
 4062              		.cfi_startproc
 4063              		@ args = 0, pretend = 0, frame = 0
 4064              		@ frame_needed = 0, uses_anonymous_args = 0
 4065              	.LVL321:
 4066 0000 08B5     		push	{r3, lr}
 4067              	.LCFI59:
 4068              		.cfi_def_cfa_offset 8
 4069              		.cfi_offset 3, -8
 4070              		.cfi_offset 14, -4
3120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 4071              		.loc 1 3120 0
 4072 0002 836B     		ldr	r3, [r0, #56]
 4073 0004 0268     		ldr	r2, [r0]
 4074 0006 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 4075 0008 1A70     		strb	r2, [r3]
3121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 4076              		.loc 1 3121 0
 4077 000a 836B     		ldr	r3, [r0, #56]
 4078 000c 0133     		adds	r3, r3, #1
 4079 000e 8363     		str	r3, [r0, #56]
3122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4080              		.loc 1 3122 0
 4081 0010 C38F     		ldrh	r3, [r0, #62]
 4082 0012 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccmvXlQX.s 			page 151


 4083 0014 013B     		subs	r3, r3, #1
 4084 0016 9BB2     		uxth	r3, r3
 4085 0018 C387     		strh	r3, [r0, #62]	@ movhi
3125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4086              		.loc 1 3125 0
 4087 001a C38F     		ldrh	r3, [r0, #62]
 4088 001c 9BB2     		uxth	r3, r3
 4089 001e 3BB9     		cbnz	r3, .L368
3136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4090              		.loc 1 3136 0
 4091 0020 0268     		ldr	r2, [r0]
 4092 0022 5368     		ldr	r3, [r2, #4]
 4093 0024 23F06003 		bic	r3, r3, #96
 4094 0028 5360     		str	r3, [r2, #4]
3138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4095              		.loc 1 3138 0
 4096 002a C38E     		ldrh	r3, [r0, #54]
 4097 002c 9BB2     		uxth	r3, r3
 4098 002e 03B1     		cbz	r3, .L371
 4099              	.LVL322:
 4100              	.L368:
 4101 0030 08BD     		pop	{r3, pc}
 4102              	.LVL323:
 4103              	.L371:
3140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4104              		.loc 1 3140 0
 4105 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4106              	.LVL324:
3143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4107              		.loc 1 3143 0
 4108 0036 FBE7     		b	.L368
 4109              		.cfi_endproc
 4110              	.LFE104:
 4112              		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
 4113              		.align	1
 4114              		.syntax unified
 4115              		.thumb
 4116              		.thumb_func
 4117              		.fpu softvfp
 4119              	SPI_2linesTxISR_16BIT:
 4120              	.LFB107:
3262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 4121              		.loc 1 3262 0
 4122              		.cfi_startproc
 4123              		@ args = 0, pretend = 0, frame = 0
 4124              		@ frame_needed = 0, uses_anonymous_args = 0
 4125              	.LVL325:
 4126 0000 08B5     		push	{r3, lr}
 4127              	.LCFI60:
 4128              		.cfi_def_cfa_offset 8
 4129              		.cfi_offset 3, -8
 4130              		.cfi_offset 14, -4
3264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 4131              		.loc 1 3264 0
 4132 0002 0368     		ldr	r3, [r0]
 4133 0004 026B     		ldr	r2, [r0, #48]
 4134 0006 1288     		ldrh	r2, [r2]
ARM GAS  /tmp/ccmvXlQX.s 			page 152


 4135 0008 DA60     		str	r2, [r3, #12]
3265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 4136              		.loc 1 3265 0
 4137 000a 036B     		ldr	r3, [r0, #48]
 4138 000c 0233     		adds	r3, r3, #2
 4139 000e 0363     		str	r3, [r0, #48]
3266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4140              		.loc 1 3266 0
 4141 0010 C38E     		ldrh	r3, [r0, #54]
 4142 0012 9BB2     		uxth	r3, r3
 4143 0014 013B     		subs	r3, r3, #1
 4144 0016 9BB2     		uxth	r3, r3
 4145 0018 C386     		strh	r3, [r0, #54]	@ movhi
3269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4146              		.loc 1 3269 0
 4147 001a C38E     		ldrh	r3, [r0, #54]
 4148 001c 9BB2     		uxth	r3, r3
 4149 001e 3BB9     		cbnz	r3, .L372
3283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4150              		.loc 1 3283 0
 4151 0020 0268     		ldr	r2, [r0]
 4152 0022 5368     		ldr	r3, [r2, #4]
 4153 0024 23F08003 		bic	r3, r3, #128
 4154 0028 5360     		str	r3, [r2, #4]
3285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4155              		.loc 1 3285 0
 4156 002a C38F     		ldrh	r3, [r0, #62]
 4157 002c 9BB2     		uxth	r3, r3
 4158 002e 03B1     		cbz	r3, .L375
 4159              	.LVL326:
 4160              	.L372:
 4161 0030 08BD     		pop	{r3, pc}
 4162              	.LVL327:
 4163              	.L375:
3287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4164              		.loc 1 3287 0
 4165 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4166              	.LVL328:
3290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4167              		.loc 1 3290 0
 4168 0036 FBE7     		b	.L372
 4169              		.cfi_endproc
 4170              	.LFE107:
 4172              		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 4173              		.align	1
 4174              		.syntax unified
 4175              		.thumb
 4176              		.thumb_func
 4177              		.fpu softvfp
 4179              	SPI_2linesRxISR_16BIT:
 4180              	.LFB106:
3210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
 4181              		.loc 1 3210 0
 4182              		.cfi_startproc
 4183              		@ args = 0, pretend = 0, frame = 0
 4184              		@ frame_needed = 0, uses_anonymous_args = 0
 4185              	.LVL329:
ARM GAS  /tmp/ccmvXlQX.s 			page 153


 4186 0000 08B5     		push	{r3, lr}
 4187              	.LCFI61:
 4188              		.cfi_def_cfa_offset 8
 4189              		.cfi_offset 3, -8
 4190              		.cfi_offset 14, -4
3212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 4191              		.loc 1 3212 0
 4192 0002 836B     		ldr	r3, [r0, #56]
 4193 0004 0268     		ldr	r2, [r0]
 4194 0006 D268     		ldr	r2, [r2, #12]
 4195 0008 1A80     		strh	r2, [r3]	@ movhi
3213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 4196              		.loc 1 3213 0
 4197 000a 836B     		ldr	r3, [r0, #56]
 4198 000c 0233     		adds	r3, r3, #2
 4199 000e 8363     		str	r3, [r0, #56]
3214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4200              		.loc 1 3214 0
 4201 0010 C38F     		ldrh	r3, [r0, #62]
 4202 0012 9BB2     		uxth	r3, r3
 4203 0014 013B     		subs	r3, r3, #1
 4204 0016 9BB2     		uxth	r3, r3
 4205 0018 C387     		strh	r3, [r0, #62]	@ movhi
3216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4206              		.loc 1 3216 0
 4207 001a C38F     		ldrh	r3, [r0, #62]
 4208 001c 9BB2     		uxth	r3, r3
 4209 001e 3BB9     		cbnz	r3, .L376
3227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4210              		.loc 1 3227 0
 4211 0020 0268     		ldr	r2, [r0]
 4212 0022 5368     		ldr	r3, [r2, #4]
 4213 0024 23F04003 		bic	r3, r3, #64
 4214 0028 5360     		str	r3, [r2, #4]
3229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4215              		.loc 1 3229 0
 4216 002a C38E     		ldrh	r3, [r0, #54]
 4217 002c 9BB2     		uxth	r3, r3
 4218 002e 03B1     		cbz	r3, .L379
 4219              	.LVL330:
 4220              	.L376:
 4221 0030 08BD     		pop	{r3, pc}
 4222              	.LVL331:
 4223              	.L379:
3231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4224              		.loc 1 3231 0
 4225 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4226              	.LVL332:
3234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4227              		.loc 1 3234 0
 4228 0036 FBE7     		b	.L376
 4229              		.cfi_endproc
 4230              	.LFE106:
 4232              		.section	.text.SPI_DMAError,"ax",%progbits
 4233              		.align	1
 4234              		.syntax unified
 4235              		.thumb
ARM GAS  /tmp/ccmvXlQX.s 			page 154


 4236              		.thumb_func
 4237              		.fpu softvfp
 4239              	SPI_DMAError:
 4240              	.LFB100:
2951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4241              		.loc 1 2951 0
 4242              		.cfi_startproc
 4243              		@ args = 0, pretend = 0, frame = 0
 4244              		@ frame_needed = 0, uses_anonymous_args = 0
 4245              	.LVL333:
 4246 0000 08B5     		push	{r3, lr}
 4247              	.LCFI62:
 4248              		.cfi_def_cfa_offset 8
 4249              		.cfi_offset 3, -8
 4250              		.cfi_offset 14, -4
2952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4251              		.loc 1 2952 0
 4252 0002 406A     		ldr	r0, [r0, #36]
 4253              	.LVL334:
2955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4254              		.loc 1 2955 0
 4255 0004 0268     		ldr	r2, [r0]
 4256 0006 5368     		ldr	r3, [r2, #4]
 4257 0008 23F00303 		bic	r3, r3, #3
 4258 000c 5360     		str	r3, [r2, #4]
2957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4259              		.loc 1 2957 0
 4260 000e 436D     		ldr	r3, [r0, #84]
 4261 0010 43F01003 		orr	r3, r3, #16
 4262 0014 4365     		str	r3, [r0, #84]
2958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user error callback */
 4263              		.loc 1 2958 0
 4264 0016 0123     		movs	r3, #1
 4265 0018 80F85130 		strb	r3, [r0, #81]
2963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4266              		.loc 1 2963 0
 4267 001c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4268              	.LVL335:
 4269 0020 08BD     		pop	{r3, pc}
 4270              		.cfi_endproc
 4271              	.LFE100:
 4273              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 4274              		.align	1
 4275              		.syntax unified
 4276              		.thumb
 4277              		.thumb_func
 4278              		.fpu softvfp
 4280              	SPI_DMATransmitCplt:
 4281              	.LFB94:
2670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4282              		.loc 1 2670 0
 4283              		.cfi_startproc
 4284              		@ args = 0, pretend = 0, frame = 8
 4285              		@ frame_needed = 0, uses_anonymous_args = 0
 4286              	.LVL336:
 4287 0000 30B5     		push	{r4, r5, lr}
 4288              	.LCFI63:
ARM GAS  /tmp/ccmvXlQX.s 			page 155


 4289              		.cfi_def_cfa_offset 12
 4290              		.cfi_offset 4, -12
 4291              		.cfi_offset 5, -8
 4292              		.cfi_offset 14, -4
 4293 0002 83B0     		sub	sp, sp, #12
 4294              	.LCFI64:
 4295              		.cfi_def_cfa_offset 24
 4296 0004 0546     		mov	r5, r0
2671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 4297              		.loc 1 2671 0
 4298 0006 446A     		ldr	r4, [r0, #36]
 4299              	.LVL337:
2675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4300              		.loc 1 2675 0
 4301 0008 FFF7FEFF 		bl	HAL_GetTick
 4302              	.LVL338:
2678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4303              		.loc 1 2678 0
 4304 000c 2B68     		ldr	r3, [r5]
 4305 000e 1B68     		ldr	r3, [r3]
 4306 0010 13F0200F 		tst	r3, #32
 4307 0014 23D1     		bne	.L383
2681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4308              		.loc 1 2681 0
 4309 0016 2268     		ldr	r2, [r4]
 4310 0018 5368     		ldr	r3, [r2, #4]
 4311 001a 23F02003 		bic	r3, r3, #32
 4312 001e 5360     		str	r3, [r2, #4]
2684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4313              		.loc 1 2684 0
 4314 0020 2268     		ldr	r2, [r4]
 4315 0022 5368     		ldr	r3, [r2, #4]
 4316 0024 23F00203 		bic	r3, r3, #2
 4317 0028 5360     		str	r3, [r2, #4]
2687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4318              		.loc 1 2687 0
 4319 002a 0246     		mov	r2, r0
 4320 002c 6421     		movs	r1, #100
 4321 002e 2046     		mov	r0, r4
 4322              	.LVL339:
 4323 0030 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4324              	.LVL340:
 4325 0034 18B1     		cbz	r0, .L384
2689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4326              		.loc 1 2689 0
 4327 0036 636D     		ldr	r3, [r4, #84]
 4328 0038 43F02003 		orr	r3, r3, #32
 4329 003c 6365     		str	r3, [r4, #84]
 4330              	.L384:
2693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4331              		.loc 1 2693 0
 4332 003e A368     		ldr	r3, [r4, #8]
 4333 0040 33B9     		cbnz	r3, .L385
 4334              	.LBB8:
2695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4335              		.loc 1 2695 0
 4336 0042 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccmvXlQX.s 			page 156


 4337 0044 2368     		ldr	r3, [r4]
 4338 0046 DA68     		ldr	r2, [r3, #12]
 4339 0048 0192     		str	r2, [sp, #4]
 4340 004a 9B68     		ldr	r3, [r3, #8]
 4341 004c 0193     		str	r3, [sp, #4]
 4342 004e 019B     		ldr	r3, [sp, #4]
 4343              	.L385:
 4344              	.LBE8:
2698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4345              		.loc 1 2698 0
 4346 0050 0023     		movs	r3, #0
 4347 0052 E386     		strh	r3, [r4, #54]	@ movhi
2699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4348              		.loc 1 2699 0
 4349 0054 0123     		movs	r3, #1
 4350 0056 84F85130 		strb	r3, [r4, #81]
2701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4351              		.loc 1 2701 0
 4352 005a 636D     		ldr	r3, [r4, #84]
 4353 005c 23B9     		cbnz	r3, .L388
 4354              	.L383:
2716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4355              		.loc 1 2716 0
 4356 005e 2046     		mov	r0, r4
 4357 0060 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4358              	.LVL341:
 4359              	.L382:
2718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4360              		.loc 1 2718 0
 4361 0064 03B0     		add	sp, sp, #12
 4362              	.LCFI65:
 4363              		.cfi_remember_state
 4364              		.cfi_def_cfa_offset 12
 4365              		@ sp needed
 4366 0066 30BD     		pop	{r4, r5, pc}
 4367              	.LVL342:
 4368              	.L388:
 4369              	.LCFI66:
 4370              		.cfi_restore_state
2707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4371              		.loc 1 2707 0
 4372 0068 2046     		mov	r0, r4
 4373 006a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4374              	.LVL343:
2709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4375              		.loc 1 2709 0
 4376 006e F9E7     		b	.L382
 4377              		.cfi_endproc
 4378              	.LFE94:
 4380              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 4381              		.align	1
 4382              		.syntax unified
 4383              		.thumb
 4384              		.thumb_func
 4385              		.fpu softvfp
 4387              	SPI_DMAReceiveCplt:
 4388              	.LFB95:
ARM GAS  /tmp/ccmvXlQX.s 			page 157


2727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4389              		.loc 1 2727 0
 4390              		.cfi_startproc
 4391              		@ args = 0, pretend = 0, frame = 0
 4392              		@ frame_needed = 0, uses_anonymous_args = 0
 4393              	.LVL344:
 4394 0000 38B5     		push	{r3, r4, r5, lr}
 4395              	.LCFI67:
 4396              		.cfi_def_cfa_offset 16
 4397              		.cfi_offset 3, -16
 4398              		.cfi_offset 4, -12
 4399              		.cfi_offset 5, -8
 4400              		.cfi_offset 14, -4
 4401 0002 0546     		mov	r5, r0
2728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 4402              		.loc 1 2728 0
 4403 0004 446A     		ldr	r4, [r0, #36]
 4404              	.LVL345:
2732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4405              		.loc 1 2732 0
 4406 0006 FFF7FEFF 		bl	HAL_GetTick
 4407              	.LVL346:
2735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4408              		.loc 1 2735 0
 4409 000a 2B68     		ldr	r3, [r5]
 4410 000c 1B68     		ldr	r3, [r3]
 4411 000e 13F0200F 		tst	r3, #32
 4412 0012 18D1     		bne	.L390
2738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4413              		.loc 1 2738 0
 4414 0014 2268     		ldr	r2, [r4]
 4415 0016 5368     		ldr	r3, [r2, #4]
 4416 0018 23F02003 		bic	r3, r3, #32
 4417 001c 5360     		str	r3, [r2, #4]
2756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4418              		.loc 1 2756 0
 4419 001e 2268     		ldr	r2, [r4]
 4420 0020 5368     		ldr	r3, [r2, #4]
 4421 0022 23F00303 		bic	r3, r3, #3
 4422 0026 5360     		str	r3, [r2, #4]
2759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4423              		.loc 1 2759 0
 4424 0028 0246     		mov	r2, r0
 4425 002a 6421     		movs	r1, #100
 4426 002c 2046     		mov	r0, r4
 4427              	.LVL347:
 4428 002e FFF7FEFF 		bl	SPI_EndRxTransaction
 4429              	.LVL348:
 4430 0032 08B1     		cbz	r0, .L391
2761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4431              		.loc 1 2761 0
 4432 0034 2023     		movs	r3, #32
 4433 0036 6365     		str	r3, [r4, #84]
 4434              	.L391:
2764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4435              		.loc 1 2764 0
 4436 0038 0023     		movs	r3, #0
ARM GAS  /tmp/ccmvXlQX.s 			page 158


 4437 003a E387     		strh	r3, [r4, #62]	@ movhi
2765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4438              		.loc 1 2765 0
 4439 003c 0123     		movs	r3, #1
 4440 003e 84F85130 		strb	r3, [r4, #81]
2786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4441              		.loc 1 2786 0
 4442 0042 636D     		ldr	r3, [r4, #84]
 4443 0044 1BB9     		cbnz	r3, .L394
 4444              	.L390:
2801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4445              		.loc 1 2801 0
 4446 0046 2046     		mov	r0, r4
 4447 0048 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4448              	.LVL349:
 4449 004c 38BD     		pop	{r3, r4, r5, pc}
 4450              	.LVL350:
 4451              	.L394:
2792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4452              		.loc 1 2792 0
 4453 004e 2046     		mov	r0, r4
 4454 0050 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4455              	.LVL351:
2794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4456              		.loc 1 2794 0
 4457 0054 38BD     		pop	{r3, r4, r5, pc}
 4458              		.cfi_endproc
 4459              	.LFE95:
 4461              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 4462              		.align	1
 4463              		.syntax unified
 4464              		.thumb
 4465              		.thumb_func
 4466              		.fpu softvfp
 4468              	SPI_DMATransmitReceiveCplt:
 4469              	.LFB96:
2812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4470              		.loc 1 2812 0
 4471              		.cfi_startproc
 4472              		@ args = 0, pretend = 0, frame = 0
 4473              		@ frame_needed = 0, uses_anonymous_args = 0
 4474              	.LVL352:
 4475 0000 38B5     		push	{r3, r4, r5, lr}
 4476              	.LCFI68:
 4477              		.cfi_def_cfa_offset 16
 4478              		.cfi_offset 3, -16
 4479              		.cfi_offset 4, -12
 4480              		.cfi_offset 5, -8
 4481              		.cfi_offset 14, -4
 4482 0002 0546     		mov	r5, r0
2813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 4483              		.loc 1 2813 0
 4484 0004 446A     		ldr	r4, [r0, #36]
 4485              	.LVL353:
2817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4486              		.loc 1 2817 0
 4487 0006 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccmvXlQX.s 			page 159


 4488              	.LVL354:
2820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4489              		.loc 1 2820 0
 4490 000a 2B68     		ldr	r3, [r5]
 4491 000c 1B68     		ldr	r3, [r3]
 4492 000e 13F0200F 		tst	r3, #32
 4493 0012 1BD1     		bne	.L396
2823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4494              		.loc 1 2823 0
 4495 0014 2268     		ldr	r2, [r4]
 4496 0016 5368     		ldr	r3, [r2, #4]
 4497 0018 23F02003 		bic	r3, r3, #32
 4498 001c 5360     		str	r3, [r2, #4]
2840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4499              		.loc 1 2840 0
 4500 001e 0246     		mov	r2, r0
 4501 0020 6421     		movs	r1, #100
 4502 0022 2046     		mov	r0, r4
 4503              	.LVL355:
 4504 0024 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4505              	.LVL356:
 4506 0028 18B1     		cbz	r0, .L397
2842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4507              		.loc 1 2842 0
 4508 002a 636D     		ldr	r3, [r4, #84]
 4509 002c 43F02003 		orr	r3, r3, #32
 4510 0030 6365     		str	r3, [r4, #84]
 4511              	.L397:
2846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4512              		.loc 1 2846 0
 4513 0032 2268     		ldr	r2, [r4]
 4514 0034 5368     		ldr	r3, [r2, #4]
 4515 0036 23F00303 		bic	r3, r3, #3
 4516 003a 5360     		str	r3, [r2, #4]
2848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 4517              		.loc 1 2848 0
 4518 003c 0023     		movs	r3, #0
 4519 003e E386     		strh	r3, [r4, #54]	@ movhi
2849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4520              		.loc 1 2849 0
 4521 0040 E387     		strh	r3, [r4, #62]	@ movhi
2850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4522              		.loc 1 2850 0
 4523 0042 0123     		movs	r3, #1
 4524 0044 84F85130 		strb	r3, [r4, #81]
2871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4525              		.loc 1 2871 0
 4526 0048 636D     		ldr	r3, [r4, #84]
 4527 004a 1BB9     		cbnz	r3, .L400
 4528              	.L396:
2886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4529              		.loc 1 2886 0
 4530 004c 2046     		mov	r0, r4
 4531 004e FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4532              	.LVL357:
 4533 0052 38BD     		pop	{r3, r4, r5, pc}
 4534              	.LVL358:
ARM GAS  /tmp/ccmvXlQX.s 			page 160


 4535              	.L400:
2877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4536              		.loc 1 2877 0
 4537 0054 2046     		mov	r0, r4
 4538 0056 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4539              	.LVL359:
2879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4540              		.loc 1 2879 0
 4541 005a 38BD     		pop	{r3, r4, r5, pc}
 4542              		.cfi_endproc
 4543              	.LFE96:
 4545              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 4546              		.align	1
 4547              		.global	HAL_SPI_IRQHandler
 4548              		.syntax unified
 4549              		.thumb
 4550              		.thumb_func
 4551              		.fpu softvfp
 4553              	HAL_SPI_IRQHandler:
 4554              	.LFB83:
2382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 4555              		.loc 1 2382 0
 4556              		.cfi_startproc
 4557              		@ args = 0, pretend = 0, frame = 16
 4558              		@ frame_needed = 0, uses_anonymous_args = 0
 4559              	.LVL360:
 4560 0000 10B5     		push	{r4, lr}
 4561              	.LCFI69:
 4562              		.cfi_def_cfa_offset 8
 4563              		.cfi_offset 4, -8
 4564              		.cfi_offset 14, -4
 4565 0002 84B0     		sub	sp, sp, #16
 4566              	.LCFI70:
 4567              		.cfi_def_cfa_offset 24
 4568 0004 0446     		mov	r4, r0
2383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 4569              		.loc 1 2383 0
 4570 0006 0268     		ldr	r2, [r0]
 4571 0008 5168     		ldr	r1, [r2, #4]
 4572              	.LVL361:
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4573              		.loc 1 2384 0
 4574 000a 9368     		ldr	r3, [r2, #8]
 4575              	.LVL362:
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 4576              		.loc 1 2387 0
 4577 000c 03F04100 		and	r0, r3, #65
 4578              	.LVL363:
 4579 0010 0128     		cmp	r0, #1
 4580 0012 5AD0     		beq	.L411
 4581              	.L402:
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4582              		.loc 1 2395 0
 4583 0014 13F0020F 		tst	r3, #2
 4584 0018 02D0     		beq	.L404
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4585              		.loc 1 2395 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccmvXlQX.s 			page 161


 4586 001a 11F0800F 		tst	r1, #128
 4587 001e 5BD1     		bne	.L412
 4588              	.L404:
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 4589              		.loc 1 2402 0 is_stmt 1
 4590 0020 13F0600F 		tst	r3, #96
 4591 0024 5BD0     		beq	.L401
2403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4592              		.loc 1 2403 0
 4593 0026 11F0200F 		tst	r1, #32
 4594 002a 58D0     		beq	.L401
2406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4595              		.loc 1 2406 0
 4596 002c 13F0400F 		tst	r3, #64
 4597 0030 0FD0     		beq	.L405
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 4598              		.loc 1 2408 0
 4599 0032 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 4600 0036 C0B2     		uxtb	r0, r0
 4601 0038 0328     		cmp	r0, #3
 4602 003a 52D0     		beq	.L406
2410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4603              		.loc 1 2410 0
 4604 003c 606D     		ldr	r0, [r4, #84]
 4605 003e 40F00400 		orr	r0, r0, #4
 4606 0042 6065     		str	r0, [r4, #84]
 4607              	.LBB9:
2411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 4608              		.loc 1 2411 0
 4609 0044 0020     		movs	r0, #0
 4610 0046 0190     		str	r0, [sp, #4]
 4611 0048 D068     		ldr	r0, [r2, #12]
 4612 004a 0190     		str	r0, [sp, #4]
 4613 004c 9068     		ldr	r0, [r2, #8]
 4614 004e 0190     		str	r0, [sp, #4]
 4615 0050 0198     		ldr	r0, [sp, #4]
 4616              	.L405:
 4617              	.LBE9:
2421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4618              		.loc 1 2421 0
 4619 0052 13F0200F 		tst	r3, #32
 4620 0056 0CD0     		beq	.L407
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 4621              		.loc 1 2423 0
 4622 0058 636D     		ldr	r3, [r4, #84]
 4623              	.LVL364:
 4624 005a 43F00103 		orr	r3, r3, #1
 4625 005e 6365     		str	r3, [r4, #84]
 4626              	.LBB10:
2424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4627              		.loc 1 2424 0
 4628 0060 0023     		movs	r3, #0
 4629 0062 0393     		str	r3, [sp, #12]
 4630 0064 9368     		ldr	r3, [r2, #8]
 4631 0066 0393     		str	r3, [sp, #12]
 4632 0068 1368     		ldr	r3, [r2]
 4633 006a 23F04003 		bic	r3, r3, #64
ARM GAS  /tmp/ccmvXlQX.s 			page 162


 4634 006e 1360     		str	r3, [r2]
 4635 0070 039B     		ldr	r3, [sp, #12]
 4636              	.L407:
 4637              	.LBE10:
2429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4638              		.loc 1 2429 0
 4639 0072 636D     		ldr	r3, [r4, #84]
 4640 0074 002B     		cmp	r3, #0
 4641 0076 32D0     		beq	.L401
2432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4642              		.loc 1 2432 0
 4643 0078 2268     		ldr	r2, [r4]
 4644 007a 5368     		ldr	r3, [r2, #4]
 4645 007c 23F0E003 		bic	r3, r3, #224
 4646 0080 5360     		str	r3, [r2, #4]
2434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
 4647              		.loc 1 2434 0
 4648 0082 0123     		movs	r3, #1
 4649 0084 84F85130 		strb	r3, [r4, #81]
2436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 4650              		.loc 1 2436 0
 4651 0088 11F0030F 		tst	r1, #3
 4652 008c 31D0     		beq	.L408
2438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4653              		.loc 1 2438 0
 4654 008e 2268     		ldr	r2, [r4]
 4655 0090 5368     		ldr	r3, [r2, #4]
 4656 0092 23F00303 		bic	r3, r3, #3
 4657 0096 5360     		str	r3, [r2, #4]
2441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 4658              		.loc 1 2441 0
 4659 0098 E36C     		ldr	r3, [r4, #76]
 4660 009a 4BB1     		cbz	r3, .L409
2445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 4661              		.loc 1 2445 0
 4662 009c 174A     		ldr	r2, .L413
 4663 009e 5A63     		str	r2, [r3, #52]
2446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           {
 4664              		.loc 1 2446 0
 4665 00a0 E06C     		ldr	r0, [r4, #76]
 4666 00a2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4667              	.LVL365:
 4668 00a6 18B1     		cbz	r0, .L409
2448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           }
 4669              		.loc 1 2448 0
 4670 00a8 636D     		ldr	r3, [r4, #84]
 4671 00aa 43F04003 		orr	r3, r3, #64
 4672 00ae 6365     		str	r3, [r4, #84]
 4673              	.L409:
2452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 4674              		.loc 1 2452 0
 4675 00b0 A36C     		ldr	r3, [r4, #72]
 4676 00b2 A3B1     		cbz	r3, .L401
2456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 4677              		.loc 1 2456 0
 4678 00b4 114A     		ldr	r2, .L413
 4679 00b6 5A63     		str	r2, [r3, #52]
ARM GAS  /tmp/ccmvXlQX.s 			page 163


2457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           {
 4680              		.loc 1 2457 0
 4681 00b8 A06C     		ldr	r0, [r4, #72]
 4682 00ba FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4683              	.LVL366:
 4684 00be 70B1     		cbz	r0, .L401
2459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           }
 4685              		.loc 1 2459 0
 4686 00c0 636D     		ldr	r3, [r4, #84]
 4687 00c2 43F04003 		orr	r3, r3, #64
 4688 00c6 6365     		str	r3, [r4, #84]
 4689 00c8 09E0     		b	.L401
 4690              	.LVL367:
 4691              	.L411:
2388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4692              		.loc 1 2388 0
 4693 00ca 11F0400F 		tst	r1, #64
 4694 00ce A1D0     		beq	.L402
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
 4695              		.loc 1 2390 0
 4696 00d0 236C     		ldr	r3, [r4, #64]
 4697              	.LVL368:
 4698 00d2 2046     		mov	r0, r4
 4699 00d4 9847     		blx	r3
 4700              	.LVL369:
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 4701              		.loc 1 2391 0
 4702 00d6 02E0     		b	.L401
 4703              	.LVL370:
 4704              	.L412:
2397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
 4705              		.loc 1 2397 0
 4706 00d8 636C     		ldr	r3, [r4, #68]
 4707              	.LVL371:
 4708 00da 2046     		mov	r0, r4
 4709 00dc 9847     		blx	r3
 4710              	.LVL372:
 4711              	.L401:
2475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4712              		.loc 1 2475 0
 4713 00de 04B0     		add	sp, sp, #16
 4714              	.LCFI71:
 4715              		.cfi_remember_state
 4716              		.cfi_def_cfa_offset 8
 4717              		@ sp needed
 4718 00e0 10BD     		pop	{r4, pc}
 4719              	.LVL373:
 4720              	.L406:
 4721              	.LCFI72:
 4722              		.cfi_restore_state
 4723              	.LBB11:
2415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         return;
 4724              		.loc 1 2415 0
 4725 00e2 0023     		movs	r3, #0
 4726              	.LVL374:
 4727 00e4 0293     		str	r3, [sp, #8]
 4728 00e6 D368     		ldr	r3, [r2, #12]
ARM GAS  /tmp/ccmvXlQX.s 			page 164


 4729 00e8 0293     		str	r3, [sp, #8]
 4730 00ea 9368     		ldr	r3, [r2, #8]
 4731 00ec 0293     		str	r3, [sp, #8]
 4732 00ee 029B     		ldr	r3, [sp, #8]
 4733              	.LBE11:
2416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 4734              		.loc 1 2416 0
 4735 00f0 F5E7     		b	.L401
 4736              	.L408:
2469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4737              		.loc 1 2469 0
 4738 00f2 2046     		mov	r0, r4
 4739 00f4 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4740              	.LVL375:
 4741 00f8 F1E7     		b	.L401
 4742              	.L414:
 4743 00fa 00BF     		.align	2
 4744              	.L413:
 4745 00fc 00000000 		.word	SPI_DMAAbortOnError
 4746              		.cfi_endproc
 4747              	.LFE83:
 4749              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 4750              		.align	1
 4751              		.syntax unified
 4752              		.thumb
 4753              		.thumb_func
 4754              		.fpu softvfp
 4756              	SPI_DMAAbortOnError:
 4757              	.LFB101:
2974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4758              		.loc 1 2974 0
 4759              		.cfi_startproc
 4760              		@ args = 0, pretend = 0, frame = 0
 4761              		@ frame_needed = 0, uses_anonymous_args = 0
 4762              	.LVL376:
 4763 0000 08B5     		push	{r3, lr}
 4764              	.LCFI73:
 4765              		.cfi_def_cfa_offset 8
 4766              		.cfi_offset 3, -8
 4767              		.cfi_offset 14, -4
2975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 4768              		.loc 1 2975 0
 4769 0002 406A     		ldr	r0, [r0, #36]
 4770              	.LVL377:
2976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 4771              		.loc 1 2976 0
 4772 0004 0023     		movs	r3, #0
 4773 0006 C387     		strh	r3, [r0, #62]	@ movhi
2977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4774              		.loc 1 2977 0
 4775 0008 C386     		strh	r3, [r0, #54]	@ movhi
2983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4776              		.loc 1 2983 0
 4777 000a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4778              	.LVL378:
 4779 000e 08BD     		pop	{r3, pc}
 4780              		.cfi_endproc
ARM GAS  /tmp/ccmvXlQX.s 			page 165


 4781              	.LFE101:
 4783              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 4784              		.align	1
 4785              		.weak	HAL_SPI_AbortCpltCallback
 4786              		.syntax unified
 4787              		.thumb
 4788              		.thumb_func
 4789              		.fpu softvfp
 4791              	HAL_SPI_AbortCpltCallback:
 4792              	.LFB91:
2598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4793              		.loc 1 2598 0
 4794              		.cfi_startproc
 4795              		@ args = 0, pretend = 0, frame = 0
 4796              		@ frame_needed = 0, uses_anonymous_args = 0
 4797              		@ link register save eliminated.
 4798              	.LVL379:
 4799 0000 7047     		bx	lr
 4800              		.cfi_endproc
 4801              	.LFE91:
 4803              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 4804              		.align	1
 4805              		.global	HAL_SPI_Abort_IT
 4806              		.syntax unified
 4807              		.thumb
 4808              		.thumb_func
 4809              		.fpu softvfp
 4811              	HAL_SPI_Abort_IT:
 4812              	.LFB79:
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 4813              		.loc 1 2142 0
 4814              		.cfi_startproc
 4815              		@ args = 0, pretend = 0, frame = 16
 4816              		@ frame_needed = 0, uses_anonymous_args = 0
 4817              	.LVL380:
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 4818              		.loc 1 2142 0
 4819 0000 30B5     		push	{r4, r5, lr}
 4820              	.LCFI74:
 4821              		.cfi_def_cfa_offset 12
 4822              		.cfi_offset 4, -12
 4823              		.cfi_offset 5, -8
 4824              		.cfi_offset 14, -4
 4825 0002 85B0     		sub	sp, sp, #20
 4826              	.LCFI75:
 4827              		.cfi_def_cfa_offset 32
 4828 0004 0446     		mov	r4, r0
 4829              	.LVL381:
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = resetcount;
 4830              		.loc 1 2151 0
 4831 0006 4E4B     		ldr	r3, .L445
 4832 0008 1B68     		ldr	r3, [r3]
 4833 000a 4E4A     		ldr	r2, .L445+4
 4834 000c A2FB0323 		umull	r2, r3, r2, r3
 4835 0010 5B0A     		lsrs	r3, r3, #9
 4836 0012 6422     		movs	r2, #100
 4837 0014 02FB03F3 		mul	r3, r2, r3
ARM GAS  /tmp/ccmvXlQX.s 			page 166


 4838 0018 0293     		str	r3, [sp, #8]
2152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4839              		.loc 1 2152 0
 4840 001a 029B     		ldr	r3, [sp, #8]
 4841 001c 0393     		str	r3, [sp, #12]
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4842              		.loc 1 2155 0
 4843 001e 0268     		ldr	r2, [r0]
 4844 0020 5368     		ldr	r3, [r2, #4]
 4845 0022 23F02003 		bic	r3, r3, #32
 4846 0026 5360     		str	r3, [r2, #4]
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4847              		.loc 1 2158 0
 4848 0028 0268     		ldr	r2, [r0]
 4849 002a 5368     		ldr	r3, [r2, #4]
 4850 002c 13F0800F 		tst	r3, #128
 4851 0030 12D0     		beq	.L419
2160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 4852              		.loc 1 2160 0
 4853 0032 454B     		ldr	r3, .L445+8
 4854 0034 4364     		str	r3, [r0, #68]
 4855              	.L422:
2164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 4856              		.loc 1 2164 0
 4857 0036 039B     		ldr	r3, [sp, #12]
 4858 0038 43B1     		cbz	r3, .L442
2169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 4859              		.loc 1 2169 0
 4860 003a 039B     		ldr	r3, [sp, #12]
 4861 003c 013B     		subs	r3, r3, #1
 4862 003e 0393     		str	r3, [sp, #12]
2170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
 4863              		.loc 1 2170 0
 4864 0040 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 4865 0044 DBB2     		uxtb	r3, r3
 4866 0046 072B     		cmp	r3, #7
 4867 0048 F5D1     		bne	.L422
 4868 004a 03E0     		b	.L421
 4869              	.L442:
2166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 4870              		.loc 1 2166 0
 4871 004c 636D     		ldr	r3, [r4, #84]
 4872 004e 43F04003 		orr	r3, r3, #64
 4873 0052 6365     		str	r3, [r4, #84]
 4874              	.L421:
2172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 4875              		.loc 1 2172 0
 4876 0054 029B     		ldr	r3, [sp, #8]
 4877 0056 0393     		str	r3, [sp, #12]
 4878              	.L419:
2175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4879              		.loc 1 2175 0
 4880 0058 5368     		ldr	r3, [r2, #4]
 4881 005a 13F0400F 		tst	r3, #64
 4882 005e 12D0     		beq	.L423
2177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 4883              		.loc 1 2177 0
ARM GAS  /tmp/ccmvXlQX.s 			page 167


 4884 0060 3A4B     		ldr	r3, .L445+12
 4885 0062 2364     		str	r3, [r4, #64]
 4886              	.L426:
2181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 4887              		.loc 1 2181 0
 4888 0064 039B     		ldr	r3, [sp, #12]
 4889 0066 43B1     		cbz	r3, .L443
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 4890              		.loc 1 2186 0
 4891 0068 039B     		ldr	r3, [sp, #12]
 4892 006a 013B     		subs	r3, r3, #1
 4893 006c 0393     		str	r3, [sp, #12]
2187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
 4894              		.loc 1 2187 0
 4895 006e 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 4896 0072 DBB2     		uxtb	r3, r3
 4897 0074 072B     		cmp	r3, #7
 4898 0076 F5D1     		bne	.L426
 4899 0078 03E0     		b	.L425
 4900              	.L443:
2183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 4901              		.loc 1 2183 0
 4902 007a 636D     		ldr	r3, [r4, #84]
 4903 007c 43F04003 		orr	r3, r3, #64
 4904 0080 6365     		str	r3, [r4, #84]
 4905              	.L425:
2189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 4906              		.loc 1 2189 0
 4907 0082 029B     		ldr	r3, [sp, #8]
 4908 0084 0393     		str	r3, [sp, #12]
 4909              	.L423:
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4910              		.loc 1 2195 0
 4911 0086 A36C     		ldr	r3, [r4, #72]
 4912 0088 2BB1     		cbz	r3, .L427
2199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4913              		.loc 1 2199 0
 4914 008a 5268     		ldr	r2, [r2, #4]
 4915 008c 12F0020F 		tst	r2, #2
 4916 0090 1BD0     		beq	.L428
2201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4917              		.loc 1 2201 0
 4918 0092 2F4A     		ldr	r2, .L445+16
 4919 0094 5A63     		str	r2, [r3, #52]
 4920              	.L427:
2209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4921              		.loc 1 2209 0
 4922 0096 E36C     		ldr	r3, [r4, #76]
 4923 0098 33B1     		cbz	r3, .L429
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4924              		.loc 1 2213 0
 4925 009a 2268     		ldr	r2, [r4]
 4926 009c 5268     		ldr	r2, [r2, #4]
 4927 009e 12F0010F 		tst	r2, #1
 4928 00a2 15D0     		beq	.L430
2215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4929              		.loc 1 2215 0
ARM GAS  /tmp/ccmvXlQX.s 			page 168


 4930 00a4 2B4A     		ldr	r2, .L445+20
 4931 00a6 5A63     		str	r2, [r3, #52]
 4932              	.L429:
2224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4933              		.loc 1 2224 0
 4934 00a8 2368     		ldr	r3, [r4]
 4935 00aa 5B68     		ldr	r3, [r3, #4]
 4936 00ac 13F0020F 		tst	r3, #2
 4937 00b0 11D0     		beq	.L435
2227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4938              		.loc 1 2227 0
 4939 00b2 A06C     		ldr	r0, [r4, #72]
 4940              	.LVL382:
 4941 00b4 20B3     		cbz	r0, .L436
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 4942              		.loc 1 2230 0
 4943 00b6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4944              	.LVL383:
 4945 00ba 18B3     		cbz	r0, .L437
2232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 4946              		.loc 1 2232 0
 4947 00bc A36C     		ldr	r3, [r4, #72]
 4948 00be 0022     		movs	r2, #0
 4949 00c0 5A63     		str	r2, [r3, #52]
2233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 4950              		.loc 1 2233 0
 4951 00c2 4023     		movs	r3, #64
 4952 00c4 6365     		str	r3, [r4, #84]
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 4953              		.loc 1 2150 0
 4954 00c6 0125     		movs	r5, #1
 4955 00c8 06E0     		b	.L431
 4956              	.LVL384:
 4957              	.L428:
2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4958              		.loc 1 2205 0
 4959 00ca 0022     		movs	r2, #0
 4960 00cc 5A63     		str	r2, [r3, #52]
 4961 00ce E2E7     		b	.L427
 4962              	.L430:
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4963              		.loc 1 2219 0
 4964 00d0 0022     		movs	r2, #0
 4965 00d2 5A63     		str	r2, [r3, #52]
 4966 00d4 E8E7     		b	.L429
 4967              	.L435:
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 4968              		.loc 1 2150 0
 4969 00d6 0125     		movs	r5, #1
 4970              	.LVL385:
 4971              	.L431:
2242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4972              		.loc 1 2242 0
 4973 00d8 2368     		ldr	r3, [r4]
 4974 00da 5B68     		ldr	r3, [r3, #4]
 4975 00dc 13F0010F 		tst	r3, #1
 4976 00e0 09D0     		beq	.L432
ARM GAS  /tmp/ccmvXlQX.s 			page 169


2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4977              		.loc 1 2245 0
 4978 00e2 E06C     		ldr	r0, [r4, #76]
 4979 00e4 38B1     		cbz	r0, .L432
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 4980              		.loc 1 2248 0
 4981 00e6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4982              	.LVL386:
 4983 00ea 68B1     		cbz	r0, .L438
2250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 4984              		.loc 1 2250 0
 4985 00ec E36C     		ldr	r3, [r4, #76]
 4986 00ee 0022     		movs	r2, #0
 4987 00f0 5A63     		str	r2, [r3, #52]
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 4988              		.loc 1 2251 0
 4989 00f2 4023     		movs	r3, #64
 4990 00f4 6365     		str	r3, [r4, #84]
 4991              	.LVL387:
 4992              	.L432:
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4993              		.loc 1 2260 0
 4994 00f6 4DB9     		cbnz	r5, .L444
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   abortcplt = 1U;
 4995              		.loc 1 2149 0
 4996 00f8 0025     		movs	r5, #0
 4997              	.LVL388:
 4998              	.L433:
2293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4999              		.loc 1 2293 0
 5000 00fa 2846     		mov	r0, r5
 5001 00fc 05B0     		add	sp, sp, #20
 5002              	.LCFI76:
 5003              		.cfi_remember_state
 5004              		.cfi_def_cfa_offset 12
 5005              		@ sp needed
 5006 00fe 30BD     		pop	{r4, r5, pc}
 5007              	.LVL389:
 5008              	.L436:
 5009              	.LCFI77:
 5010              		.cfi_restore_state
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5011              		.loc 1 2150 0
 5012 0100 0125     		movs	r5, #1
 5013 0102 E9E7     		b	.L431
 5014              	.L437:
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 5015              		.loc 1 2237 0
 5016 0104 0025     		movs	r5, #0
 5017 0106 E7E7     		b	.L431
 5018              	.LVL390:
 5019              	.L438:
2255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 5020              		.loc 1 2255 0
 5021 0108 0025     		movs	r5, #0
 5022              	.LVL391:
 5023 010a F4E7     		b	.L432
ARM GAS  /tmp/ccmvXlQX.s 			page 170


 5024              	.LVL392:
 5025              	.L444:
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 5026              		.loc 1 2263 0
 5027 010c 0023     		movs	r3, #0
 5028 010e E387     		strh	r3, [r4, #62]	@ movhi
2264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5029              		.loc 1 2264 0
 5030 0110 E386     		strh	r3, [r4, #54]	@ movhi
2267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 5031              		.loc 1 2267 0
 5032 0112 636D     		ldr	r3, [r4, #84]
 5033 0114 402B     		cmp	r3, #64
 5034 0116 10D0     		beq	.L440
2275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 5035              		.loc 1 2275 0
 5036 0118 0025     		movs	r5, #0
 5037              	.LVL393:
 5038 011a 6565     		str	r5, [r4, #84]
 5039              	.L434:
 5040              	.LVL394:
 5041              	.LBB12:
2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5042              		.loc 1 2279 0
 5043 011c 0023     		movs	r3, #0
 5044 011e 0193     		str	r3, [sp, #4]
 5045 0120 2368     		ldr	r3, [r4]
 5046 0122 DA68     		ldr	r2, [r3, #12]
 5047 0124 0192     		str	r2, [sp, #4]
 5048 0126 9B68     		ldr	r3, [r3, #8]
 5049 0128 0193     		str	r3, [sp, #4]
 5050 012a 019B     		ldr	r3, [sp, #4]
 5051              	.LBE12:
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5052              		.loc 1 2282 0
 5053 012c 0123     		movs	r3, #1
 5054 012e 84F85130 		strb	r3, [r4, #81]
2288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5055              		.loc 1 2288 0
 5056 0132 2046     		mov	r0, r4
 5057 0134 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5058              	.LVL395:
 5059 0138 DFE7     		b	.L433
 5060              	.LVL396:
 5061              	.L440:
2270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 5062              		.loc 1 2270 0
 5063 013a 0125     		movs	r5, #1
 5064              	.LVL397:
 5065 013c EEE7     		b	.L434
 5066              	.L446:
 5067 013e 00BF     		.align	2
 5068              	.L445:
 5069 0140 00000000 		.word	SystemCoreClock
 5070 0144 F1197605 		.word	91625969
 5071 0148 00000000 		.word	SPI_AbortTx_ISR
 5072 014c 00000000 		.word	SPI_AbortRx_ISR
ARM GAS  /tmp/ccmvXlQX.s 			page 171


 5073 0150 00000000 		.word	SPI_DMATxAbortCallback
 5074 0154 00000000 		.word	SPI_DMARxAbortCallback
 5075              		.cfi_endproc
 5076              	.LFE79:
 5078              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 5079              		.align	1
 5080              		.syntax unified
 5081              		.thumb
 5082              		.thumb_func
 5083              		.fpu softvfp
 5085              	SPI_DMARxAbortCallback:
 5086              	.LFB103:
3060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5087              		.loc 1 3060 0
 5088              		.cfi_startproc
 5089              		@ args = 0, pretend = 0, frame = 8
 5090              		@ frame_needed = 0, uses_anonymous_args = 0
 5091              	.LVL398:
 5092 0000 10B5     		push	{r4, lr}
 5093              	.LCFI78:
 5094              		.cfi_def_cfa_offset 8
 5095              		.cfi_offset 4, -8
 5096              		.cfi_offset 14, -4
 5097 0002 82B0     		sub	sp, sp, #8
 5098              	.LCFI79:
 5099              		.cfi_def_cfa_offset 16
3061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5100              		.loc 1 3061 0
 5101 0004 446A     		ldr	r4, [r0, #36]
 5102              	.LVL399:
3064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5103              		.loc 1 3064 0
 5104 0006 2268     		ldr	r2, [r4]
 5105 0008 1368     		ldr	r3, [r2]
 5106 000a 23F04003 		bic	r3, r3, #64
 5107 000e 1360     		str	r3, [r2]
3066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5108              		.loc 1 3066 0
 5109 0010 E36C     		ldr	r3, [r4, #76]
 5110 0012 0022     		movs	r2, #0
 5111 0014 5A63     		str	r2, [r3, #52]
3069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5112              		.loc 1 3069 0
 5113 0016 2268     		ldr	r2, [r4]
 5114 0018 5368     		ldr	r3, [r2, #4]
 5115 001a 23F00103 		bic	r3, r3, #1
 5116 001e 5360     		str	r3, [r2, #4]
3072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 5117              		.loc 1 3072 0
 5118 0020 FFF7FEFF 		bl	HAL_GetTick
 5119              	.LVL400:
 5120 0024 0246     		mov	r2, r0
 5121 0026 6421     		movs	r1, #100
 5122 0028 2046     		mov	r0, r4
 5123 002a FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5124              	.LVL401:
 5125 002e 18B1     		cbz	r0, .L448
ARM GAS  /tmp/ccmvXlQX.s 			page 172


3074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 5126              		.loc 1 3074 0
 5127 0030 636D     		ldr	r3, [r4, #84]
 5128 0032 43F04003 		orr	r3, r3, #64
 5129 0036 6365     		str	r3, [r4, #84]
 5130              	.L448:
3078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 5131              		.loc 1 3078 0
 5132 0038 A36C     		ldr	r3, [r4, #72]
 5133 003a 1BB1     		cbz	r3, .L449
3080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 5134              		.loc 1 3080 0
 5135 003c 5B6B     		ldr	r3, [r3, #52]
 5136 003e 0BB1     		cbz	r3, .L449
 5137              	.L447:
3109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5138              		.loc 1 3109 0
 5139 0040 02B0     		add	sp, sp, #8
 5140              	.LCFI80:
 5141              		.cfi_remember_state
 5142              		.cfi_def_cfa_offset 8
 5143              		@ sp needed
 5144 0042 10BD     		pop	{r4, pc}
 5145              	.LVL402:
 5146              	.L449:
 5147              	.LCFI81:
 5148              		.cfi_restore_state
3087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5149              		.loc 1 3087 0
 5150 0044 0023     		movs	r3, #0
 5151 0046 E387     		strh	r3, [r4, #62]	@ movhi
3088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5152              		.loc 1 3088 0
 5153 0048 E386     		strh	r3, [r4, #54]	@ movhi
3091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 5154              		.loc 1 3091 0
 5155 004a 636D     		ldr	r3, [r4, #84]
 5156 004c 402B     		cmp	r3, #64
 5157 004e 01D0     		beq	.L451
3094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 5158              		.loc 1 3094 0
 5159 0050 0023     		movs	r3, #0
 5160 0052 6365     		str	r3, [r4, #84]
 5161              	.L451:
 5162              	.LBB13:
3098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5163              		.loc 1 3098 0
 5164 0054 0023     		movs	r3, #0
 5165 0056 0193     		str	r3, [sp, #4]
 5166 0058 2368     		ldr	r3, [r4]
 5167 005a DA68     		ldr	r2, [r3, #12]
 5168 005c 0192     		str	r2, [sp, #4]
 5169 005e 9B68     		ldr	r3, [r3, #8]
 5170 0060 0193     		str	r3, [sp, #4]
 5171 0062 019B     		ldr	r3, [sp, #4]
 5172              	.LBE13:
3101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccmvXlQX.s 			page 173


 5173              		.loc 1 3101 0
 5174 0064 0123     		movs	r3, #1
 5175 0066 84F85130 		strb	r3, [r4, #81]
3107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5176              		.loc 1 3107 0
 5177 006a 2046     		mov	r0, r4
 5178 006c FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5179              	.LVL403:
 5180 0070 E6E7     		b	.L447
 5181              		.cfi_endproc
 5182              	.LFE103:
 5184              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 5185              		.align	1
 5186              		.syntax unified
 5187              		.thumb
 5188              		.thumb_func
 5189              		.fpu softvfp
 5191              	SPI_DMATxAbortCallback:
 5192              	.LFB102:
2996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5193              		.loc 1 2996 0
 5194              		.cfi_startproc
 5195              		@ args = 0, pretend = 0, frame = 8
 5196              		@ frame_needed = 0, uses_anonymous_args = 0
 5197              	.LVL404:
 5198 0000 00B5     		push	{lr}
 5199              	.LCFI82:
 5200              		.cfi_def_cfa_offset 4
 5201              		.cfi_offset 14, -4
 5202 0002 83B0     		sub	sp, sp, #12
 5203              	.LCFI83:
 5204              		.cfi_def_cfa_offset 16
2997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
 5205              		.loc 1 2997 0
 5206 0004 406A     		ldr	r0, [r0, #36]
 5207              	.LVL405:
3000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5208              		.loc 1 3000 0
 5209 0006 836C     		ldr	r3, [r0, #72]
 5210 0008 0022     		movs	r2, #0
 5211 000a 5A63     		str	r2, [r3, #52]
3001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5212              		.loc 1 3001 0
 5213 000c 1D4B     		ldr	r3, .L462
 5214 000e 1B68     		ldr	r3, [r3]
 5215 0010 1D4A     		ldr	r2, .L462+4
 5216 0012 A2FB0323 		umull	r2, r3, r2, r3
 5217 0016 5B0A     		lsrs	r3, r3, #9
 5218 0018 6422     		movs	r2, #100
 5219 001a 02FB03F3 		mul	r3, r2, r3
 5220 001e 0193     		str	r3, [sp, #4]
3004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5221              		.loc 1 3004 0
 5222 0020 0268     		ldr	r2, [r0]
 5223 0022 5368     		ldr	r3, [r2, #4]
 5224 0024 23F00203 		bic	r3, r3, #2
 5225 0028 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccmvXlQX.s 			page 174


 5226              	.L456:
3009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 5227              		.loc 1 3009 0
 5228 002a 019B     		ldr	r3, [sp, #4]
 5229 002c 43B1     		cbz	r3, .L461
3014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 5230              		.loc 1 3014 0
 5231 002e 019B     		ldr	r3, [sp, #4]
 5232 0030 013B     		subs	r3, r3, #1
 5233 0032 0193     		str	r3, [sp, #4]
3015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5234              		.loc 1 3015 0
 5235 0034 0368     		ldr	r3, [r0]
 5236 0036 9B68     		ldr	r3, [r3, #8]
 5237 0038 13F0020F 		tst	r3, #2
 5238 003c F5D0     		beq	.L456
 5239 003e 03E0     		b	.L455
 5240              	.L461:
3011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 5241              		.loc 1 3011 0
 5242 0040 436D     		ldr	r3, [r0, #84]
 5243 0042 43F04003 		orr	r3, r3, #64
 5244 0046 4365     		str	r3, [r0, #84]
 5245              	.L455:
3018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 5246              		.loc 1 3018 0
 5247 0048 C36C     		ldr	r3, [r0, #76]
 5248 004a 23B1     		cbz	r3, .L457
3020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 5249              		.loc 1 3020 0
 5250 004c 5B6B     		ldr	r3, [r3, #52]
 5251 004e 13B1     		cbz	r3, .L457
 5252              	.LVL406:
 5253              	.L453:
3049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5254              		.loc 1 3049 0
 5255 0050 03B0     		add	sp, sp, #12
 5256              	.LCFI84:
 5257              		.cfi_remember_state
 5258              		.cfi_def_cfa_offset 4
 5259              		@ sp needed
 5260 0052 5DF804FB 		ldr	pc, [sp], #4
 5261              	.LVL407:
 5262              	.L457:
 5263              	.LCFI85:
 5264              		.cfi_restore_state
3027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5265              		.loc 1 3027 0
 5266 0056 0023     		movs	r3, #0
 5267 0058 C387     		strh	r3, [r0, #62]	@ movhi
3028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5268              		.loc 1 3028 0
 5269 005a C386     		strh	r3, [r0, #54]	@ movhi
3031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 5270              		.loc 1 3031 0
 5271 005c 436D     		ldr	r3, [r0, #84]
 5272 005e 402B     		cmp	r3, #64
ARM GAS  /tmp/ccmvXlQX.s 			page 175


 5273 0060 01D0     		beq	.L459
3034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 5274              		.loc 1 3034 0
 5275 0062 0023     		movs	r3, #0
 5276 0064 4365     		str	r3, [r0, #84]
 5277              	.L459:
 5278              	.LBB14:
3038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5279              		.loc 1 3038 0
 5280 0066 0023     		movs	r3, #0
 5281 0068 0093     		str	r3, [sp]
 5282 006a 0368     		ldr	r3, [r0]
 5283 006c DA68     		ldr	r2, [r3, #12]
 5284 006e 0092     		str	r2, [sp]
 5285 0070 9B68     		ldr	r3, [r3, #8]
 5286 0072 0093     		str	r3, [sp]
 5287 0074 009B     		ldr	r3, [sp]
 5288              	.LBE14:
3041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5289              		.loc 1 3041 0
 5290 0076 0123     		movs	r3, #1
 5291 0078 80F85130 		strb	r3, [r0, #81]
3047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5292              		.loc 1 3047 0
 5293 007c FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5294              	.LVL408:
 5295 0080 E6E7     		b	.L453
 5296              	.L463:
 5297 0082 00BF     		.align	2
 5298              	.L462:
 5299 0084 00000000 		.word	SystemCoreClock
 5300 0088 F1197605 		.word	91625969
 5301              		.cfi_endproc
 5302              	.LFE102:
 5304              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 5305              		.align	1
 5306              		.global	HAL_SPI_GetState
 5307              		.syntax unified
 5308              		.thumb
 5309              		.thumb_func
 5310              		.fpu softvfp
 5312              	HAL_SPI_GetState:
 5313              	.LFB92:
2633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Return SPI handle state */
 5314              		.loc 1 2633 0
 5315              		.cfi_startproc
 5316              		@ args = 0, pretend = 0, frame = 0
 5317              		@ frame_needed = 0, uses_anonymous_args = 0
 5318              		@ link register save eliminated.
 5319              	.LVL409:
2635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5320              		.loc 1 2635 0
 5321 0000 90F85100 		ldrb	r0, [r0, #81]	@ zero_extendqisi2
 5322              	.LVL410:
2636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5323              		.loc 1 2636 0
 5324 0004 7047     		bx	lr
ARM GAS  /tmp/ccmvXlQX.s 			page 176


 5325              		.cfi_endproc
 5326              	.LFE92:
 5328              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 5329              		.align	1
 5330              		.global	HAL_SPI_GetError
 5331              		.syntax unified
 5332              		.thumb
 5333              		.thumb_func
 5334              		.fpu softvfp
 5336              	HAL_SPI_GetError:
 5337              	.LFB93:
2645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Return SPI ErrorCode */
 5338              		.loc 1 2645 0
 5339              		.cfi_startproc
 5340              		@ args = 0, pretend = 0, frame = 0
 5341              		@ frame_needed = 0, uses_anonymous_args = 0
 5342              		@ link register save eliminated.
 5343              	.LVL411:
2647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5344              		.loc 1 2647 0
 5345 0000 406D     		ldr	r0, [r0, #84]
 5346              	.LVL412:
2648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5347              		.loc 1 2648 0
 5348 0002 7047     		bx	lr
 5349              		.cfi_endproc
 5350              	.LFE93:
 5352              		.text
 5353              	.Letext0:
 5354              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 5355              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 5356              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 5357              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 5358              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 5359              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 5360              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 5361              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 5362              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 5363              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccmvXlQX.s 			page 177


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_spi.c
     /tmp/ccmvXlQX.s:16     .text.SPI_AbortRx_ISR:0000000000000000 $t
     /tmp/ccmvXlQX.s:22     .text.SPI_AbortRx_ISR:0000000000000000 SPI_AbortRx_ISR
     /tmp/ccmvXlQX.s:88     .text.SPI_AbortRx_ISR:0000000000000058 $d
     /tmp/ccmvXlQX.s:94     .text.SPI_AbortTx_ISR:0000000000000000 $t
     /tmp/ccmvXlQX.s:100    .text.SPI_AbortTx_ISR:0000000000000000 SPI_AbortTx_ISR
     /tmp/ccmvXlQX.s:126    .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 $t
     /tmp/ccmvXlQX.s:132    .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 SPI_WaitFlagStateUntilTimeout
     /tmp/ccmvXlQX.s:237    .text.SPI_EndRxTxTransaction:0000000000000000 $t
     /tmp/ccmvXlQX.s:243    .text.SPI_EndRxTxTransaction:0000000000000000 SPI_EndRxTxTransaction
     /tmp/ccmvXlQX.s:288    .text.SPI_EndRxTransaction:0000000000000000 $t
     /tmp/ccmvXlQX.s:294    .text.SPI_EndRxTransaction:0000000000000000 SPI_EndRxTransaction
     /tmp/ccmvXlQX.s:395    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccmvXlQX.s:402    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccmvXlQX.s:415    .text.HAL_SPI_Init:0000000000000000 $t
     /tmp/ccmvXlQX.s:422    .text.HAL_SPI_Init:0000000000000000 HAL_SPI_Init
     /tmp/ccmvXlQX.s:517    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccmvXlQX.s:524    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccmvXlQX.s:537    .text.HAL_SPI_DeInit:0000000000000000 $t
     /tmp/ccmvXlQX.s:544    .text.HAL_SPI_DeInit:0000000000000000 HAL_SPI_DeInit
     /tmp/ccmvXlQX.s:594    .text.HAL_SPI_Transmit:0000000000000000 $t
     /tmp/ccmvXlQX.s:601    .text.HAL_SPI_Transmit:0000000000000000 HAL_SPI_Transmit
     /tmp/ccmvXlQX.s:917    .text.HAL_SPI_TransmitReceive:0000000000000000 $t
     /tmp/ccmvXlQX.s:924    .text.HAL_SPI_TransmitReceive:0000000000000000 HAL_SPI_TransmitReceive
     /tmp/ccmvXlQX.s:1368   .text.HAL_SPI_Receive:0000000000000000 $t
     /tmp/ccmvXlQX.s:1375   .text.HAL_SPI_Receive:0000000000000000 HAL_SPI_Receive
     /tmp/ccmvXlQX.s:1651   .text.HAL_SPI_Transmit_IT:0000000000000000 $t
     /tmp/ccmvXlQX.s:1658   .text.HAL_SPI_Transmit_IT:0000000000000000 HAL_SPI_Transmit_IT
     /tmp/ccmvXlQX.s:1785   .text.HAL_SPI_Transmit_IT:0000000000000098 $d
     /tmp/ccmvXlQX.s:3619   .text.SPI_TxISR_16BIT:0000000000000000 SPI_TxISR_16BIT
     /tmp/ccmvXlQX.s:3568   .text.SPI_TxISR_8BIT:0000000000000000 SPI_TxISR_8BIT
     /tmp/ccmvXlQX.s:1791   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccmvXlQX.s:1798   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 HAL_SPI_TransmitReceive_IT
     /tmp/ccmvXlQX.s:1978   .text.HAL_SPI_TransmitReceive_IT:00000000000000b8 $d
     /tmp/ccmvXlQX.s:4179   .text.SPI_2linesRxISR_16BIT:0000000000000000 SPI_2linesRxISR_16BIT
     /tmp/ccmvXlQX.s:4119   .text.SPI_2linesTxISR_16BIT:0000000000000000 SPI_2linesTxISR_16BIT
     /tmp/ccmvXlQX.s:4059   .text.SPI_2linesRxISR_8BIT:0000000000000000 SPI_2linesRxISR_8BIT
     /tmp/ccmvXlQX.s:3999   .text.SPI_2linesTxISR_8BIT:0000000000000000 SPI_2linesTxISR_8BIT
     /tmp/ccmvXlQX.s:1986   .text.HAL_SPI_Receive_IT:0000000000000000 $t
     /tmp/ccmvXlQX.s:1993   .text.HAL_SPI_Receive_IT:0000000000000000 HAL_SPI_Receive_IT
     /tmp/ccmvXlQX.s:2146   .text.HAL_SPI_Receive_IT:00000000000000b4 $d
     /tmp/ccmvXlQX.s:3807   .text.SPI_RxISR_16BIT:0000000000000000 SPI_RxISR_16BIT
     /tmp/ccmvXlQX.s:3756   .text.SPI_RxISR_8BIT:0000000000000000 SPI_RxISR_8BIT
     /tmp/ccmvXlQX.s:2152   .text.HAL_SPI_Transmit_DMA:0000000000000000 $t
     /tmp/ccmvXlQX.s:2159   .text.HAL_SPI_Transmit_DMA:0000000000000000 HAL_SPI_Transmit_DMA
     /tmp/ccmvXlQX.s:2327   .text.HAL_SPI_Transmit_DMA:00000000000000d0 $d
     /tmp/ccmvXlQX.s:3294   .text.SPI_DMAHalfTransmitCplt:0000000000000000 SPI_DMAHalfTransmitCplt
     /tmp/ccmvXlQX.s:4280   .text.SPI_DMATransmitCplt:0000000000000000 SPI_DMATransmitCplt
     /tmp/ccmvXlQX.s:4239   .text.SPI_DMAError:0000000000000000 SPI_DMAError
     /tmp/ccmvXlQX.s:2334   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 $t
     /tmp/ccmvXlQX.s:2341   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 HAL_SPI_TransmitReceive_DMA
     /tmp/ccmvXlQX.s:2602   .text.HAL_SPI_TransmitReceive_DMA:0000000000000140 $d
     /tmp/ccmvXlQX.s:3394   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/ccmvXlQX.s:4468   .text.SPI_DMATransmitReceiveCplt:0000000000000000 SPI_DMATransmitReceiveCplt
     /tmp/ccmvXlQX.s:3344   .text.SPI_DMAHalfReceiveCplt:0000000000000000 SPI_DMAHalfReceiveCplt
     /tmp/ccmvXlQX.s:4387   .text.SPI_DMAReceiveCplt:0000000000000000 SPI_DMAReceiveCplt
ARM GAS  /tmp/ccmvXlQX.s 			page 178


     /tmp/ccmvXlQX.s:2611   .text.HAL_SPI_Receive_DMA:0000000000000000 $t
     /tmp/ccmvXlQX.s:2618   .text.HAL_SPI_Receive_DMA:0000000000000000 HAL_SPI_Receive_DMA
     /tmp/ccmvXlQX.s:2801   .text.HAL_SPI_Receive_DMA:00000000000000e8 $d
     /tmp/ccmvXlQX.s:2808   .text.HAL_SPI_Abort:0000000000000000 $t
     /tmp/ccmvXlQX.s:2815   .text.HAL_SPI_Abort:0000000000000000 HAL_SPI_Abort
     /tmp/ccmvXlQX.s:3033   .text.HAL_SPI_Abort:000000000000012c $d
     /tmp/ccmvXlQX.s:3041   .text.HAL_SPI_DMAPause:0000000000000000 $t
     /tmp/ccmvXlQX.s:3048   .text.HAL_SPI_DMAPause:0000000000000000 HAL_SPI_DMAPause
     /tmp/ccmvXlQX.s:3086   .text.HAL_SPI_DMAResume:0000000000000000 $t
     /tmp/ccmvXlQX.s:3093   .text.HAL_SPI_DMAResume:0000000000000000 HAL_SPI_DMAResume
     /tmp/ccmvXlQX.s:3131   .text.HAL_SPI_DMAStop:0000000000000000 $t
     /tmp/ccmvXlQX.s:3138   .text.HAL_SPI_DMAStop:0000000000000000 HAL_SPI_DMAStop
     /tmp/ccmvXlQX.s:3208   .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccmvXlQX.s:3215   .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/ccmvXlQX.s:3228   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/ccmvXlQX.s:3235   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/ccmvXlQX.s:3248   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccmvXlQX.s:3255   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccmvXlQX.s:3268   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccmvXlQX.s:3275   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 HAL_SPI_TxHalfCpltCallback
     /tmp/ccmvXlQX.s:3288   .text.SPI_DMAHalfTransmitCplt:0000000000000000 $t
     /tmp/ccmvXlQX.s:3318   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccmvXlQX.s:3325   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 HAL_SPI_RxHalfCpltCallback
     /tmp/ccmvXlQX.s:3338   .text.SPI_DMAHalfReceiveCplt:0000000000000000 $t
     /tmp/ccmvXlQX.s:3368   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 $t
     /tmp/ccmvXlQX.s:3375   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/ccmvXlQX.s:3388   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 $t
     /tmp/ccmvXlQX.s:3418   .text.HAL_SPI_ErrorCallback:0000000000000000 $t
     /tmp/ccmvXlQX.s:3425   .text.HAL_SPI_ErrorCallback:0000000000000000 HAL_SPI_ErrorCallback
     /tmp/ccmvXlQX.s:3438   .text.SPI_CloseTx_ISR:0000000000000000 $t
     /tmp/ccmvXlQX.s:3444   .text.SPI_CloseTx_ISR:0000000000000000 SPI_CloseTx_ISR
     /tmp/ccmvXlQX.s:3556   .text.SPI_CloseTx_ISR:0000000000000088 $d
     /tmp/ccmvXlQX.s:3562   .text.SPI_TxISR_8BIT:0000000000000000 $t
     /tmp/ccmvXlQX.s:3613   .text.SPI_TxISR_16BIT:0000000000000000 $t
     /tmp/ccmvXlQX.s:3664   .text.SPI_CloseRx_ISR:0000000000000000 $t
     /tmp/ccmvXlQX.s:3670   .text.SPI_CloseRx_ISR:0000000000000000 SPI_CloseRx_ISR
     /tmp/ccmvXlQX.s:3750   .text.SPI_RxISR_8BIT:0000000000000000 $t
     /tmp/ccmvXlQX.s:3801   .text.SPI_RxISR_16BIT:0000000000000000 $t
     /tmp/ccmvXlQX.s:3852   .text.SPI_CloseRxTx_ISR:0000000000000000 $t
     /tmp/ccmvXlQX.s:3858   .text.SPI_CloseRxTx_ISR:0000000000000000 SPI_CloseRxTx_ISR
     /tmp/ccmvXlQX.s:3987   .text.SPI_CloseRxTx_ISR:00000000000000a8 $d
     /tmp/ccmvXlQX.s:3993   .text.SPI_2linesTxISR_8BIT:0000000000000000 $t
     /tmp/ccmvXlQX.s:4053   .text.SPI_2linesRxISR_8BIT:0000000000000000 $t
     /tmp/ccmvXlQX.s:4113   .text.SPI_2linesTxISR_16BIT:0000000000000000 $t
     /tmp/ccmvXlQX.s:4173   .text.SPI_2linesRxISR_16BIT:0000000000000000 $t
     /tmp/ccmvXlQX.s:4233   .text.SPI_DMAError:0000000000000000 $t
     /tmp/ccmvXlQX.s:4274   .text.SPI_DMATransmitCplt:0000000000000000 $t
     /tmp/ccmvXlQX.s:4381   .text.SPI_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccmvXlQX.s:4462   .text.SPI_DMATransmitReceiveCplt:0000000000000000 $t
     /tmp/ccmvXlQX.s:4546   .text.HAL_SPI_IRQHandler:0000000000000000 $t
     /tmp/ccmvXlQX.s:4553   .text.HAL_SPI_IRQHandler:0000000000000000 HAL_SPI_IRQHandler
     /tmp/ccmvXlQX.s:4745   .text.HAL_SPI_IRQHandler:00000000000000fc $d
     /tmp/ccmvXlQX.s:4756   .text.SPI_DMAAbortOnError:0000000000000000 SPI_DMAAbortOnError
     /tmp/ccmvXlQX.s:4750   .text.SPI_DMAAbortOnError:0000000000000000 $t
     /tmp/ccmvXlQX.s:4784   .text.HAL_SPI_AbortCpltCallback:0000000000000000 $t
     /tmp/ccmvXlQX.s:4791   .text.HAL_SPI_AbortCpltCallback:0000000000000000 HAL_SPI_AbortCpltCallback
     /tmp/ccmvXlQX.s:4804   .text.HAL_SPI_Abort_IT:0000000000000000 $t
ARM GAS  /tmp/ccmvXlQX.s 			page 179


     /tmp/ccmvXlQX.s:4811   .text.HAL_SPI_Abort_IT:0000000000000000 HAL_SPI_Abort_IT
     /tmp/ccmvXlQX.s:5069   .text.HAL_SPI_Abort_IT:0000000000000140 $d
     /tmp/ccmvXlQX.s:5191   .text.SPI_DMATxAbortCallback:0000000000000000 SPI_DMATxAbortCallback
     /tmp/ccmvXlQX.s:5085   .text.SPI_DMARxAbortCallback:0000000000000000 SPI_DMARxAbortCallback
     /tmp/ccmvXlQX.s:5079   .text.SPI_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccmvXlQX.s:5185   .text.SPI_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccmvXlQX.s:5299   .text.SPI_DMATxAbortCallback:0000000000000084 $d
     /tmp/ccmvXlQX.s:5305   .text.HAL_SPI_GetState:0000000000000000 $t
     /tmp/ccmvXlQX.s:5312   .text.HAL_SPI_GetState:0000000000000000 HAL_SPI_GetState
     /tmp/ccmvXlQX.s:5329   .text.HAL_SPI_GetError:0000000000000000 $t
     /tmp/ccmvXlQX.s:5336   .text.HAL_SPI_GetError:0000000000000000 HAL_SPI_GetError
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT

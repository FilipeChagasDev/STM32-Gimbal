ARM GAS  /tmp/ccGDryUz.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_rtc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.RTC_ReadTimeCounter,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	RTC_ReadTimeCounter:
  23              	.LFB82:
  24              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @file    stm32f1xx_hal_rtc.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief   RTC HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          functionalities of the Real Time Clock (RTC) peripheral:
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + RTC Time and Date functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + RTC Alarm functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + Peripheral Control functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + Peripheral State functions
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   @verbatim
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==============================================================================
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                   ##### How to use this driver #####
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Enable the RTC domain access (see description in the section above).
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Configure the RTC Prescaler (Asynchronous prescaler to generate RTC 1Hz time base)
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         using the HAL_RTC_Init() function.
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Time and Date configuration ***
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ===================================
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To configure the RTC Calendar (Time and Date) use the HAL_RTC_SetTime()
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         and HAL_RTC_SetDate() functions.
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To read the RTC Calendar, use the HAL_RTC_GetTime() and HAL_RTC_GetDate() functions.
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Alarm configuration ***
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ===========================
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To configure the RTC Alarm use the HAL_RTC_SetAlarm() function.
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         You can also configure the RTC Alarm with interrupt mode using the HAL_RTC_SetAlarm_IT() fu
ARM GAS  /tmp/ccGDryUz.s 			page 2


  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To read the RTC Alarm, use the HAL_RTC_GetAlarm() function.
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Tamper configuration ***
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ============================
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Enable the RTC Tamper and configure the Tamper Level using the
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         HAL_RTCEx_SetTamper() function. You can configure RTC Tamper with interrupt
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         mode using HAL_RTCEx_SetTamper_IT() function.
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) The TAMPER1 alternate function can be mapped to PC13
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Backup Data Registers configuration ***
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ===========================================
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To write to the RTC Backup Data registers, use the HAL_RTCEx_BKUPWrite()
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         function.
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To read the RTC Backup Data registers, use the HAL_RTCEx_BKUPRead()
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         function.
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                   ##### WARNING: Drivers Restrictions  #####
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] RTC version used on STM32F1 families is version V1. All the features supported by V2
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        (other families) will be not supported on F1.
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] As on V2, main RTC features are managed by HW. But on F1, date feature is completely
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        managed by SW.
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] Then, there are some restrictions compared to other families:
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Only format 24 hours supported in HAL (format 12 hours not supported)
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Date is saved in SRAM. Then, when MCU is in STOP or STANDBY mode, date will be lost.
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         User should implement a way to save date before entering in low power mode (an
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         example is provided with firmware package based on backup registers)
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Date is automatically updated each time a HAL_RTC_GetTime or HAL_RTC_GetDate is called.
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Alarm detection is limited to 1 day. It will expire only 1 time (no alarm repetition, need
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         to program a new alarm)
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ##### Backup Domain Operating Condition #####
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==============================================================================
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The real-time clock (RTC) and the RTC backup registers can be powered
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        from the VBAT voltage when the main VDD supply is powered off.
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        To retain the content of the RTC backup registers and supply the RTC
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        when VDD is turned off, VBAT pin can be connected to an optional
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        standby voltage supplied by a battery or by another source.
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] To allow the RTC operating even when the main digital supply (VDD) is turned
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        off, the VBAT pin powers the following blocks:
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) The RTC
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) The LSE oscillator
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) The backup SRAM when the low power backup regulator is enabled
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) PC13 to PC15 I/Os, plus PI8 I/O (when available)
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] When the backup domain is supplied by VDD (analog switch connected to VDD),
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        the following pins are available:
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) PC13 can be used as a Tamper pin
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] When the backup domain is supplied by VBAT (analog switch connected to VBAT
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        because VDD is not present), the following pins are available:
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) PC13 can be used as the Tamper pin
  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                    ##### Backup Domain Reset #####
ARM GAS  /tmp/ccGDryUz.s 			page 3


  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The backup domain reset sets all RTC registers and the RCC_BDCR register
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        to their reset values.
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] A backup domain reset is generated when one of the following events occurs:
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) Software reset, triggered by setting the BDRST bit in the
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         RCC Backup domain control register (RCC_BDCR).
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) VDD or VBAT power on, if both supplies have previously been powered off.
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) Tamper detection event resets all data backup registers.
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                    ##### Backup Domain Access #####
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] After reset, the backup domain (RTC registers, RTC backup data
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        registers and backup SRAM) is protected against possible unwanted write
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        accesses.
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Call the function HAL_RCCEx_PeriphCLKConfig in using RCC_PERIPHCLK_RTC for
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         PeriphClockSelection and select RTCClockSelection (LSE, LSI or HSE)
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Enable the BKP clock in using __HAL_RCC_BKP_CLK_ENABLE()
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                   ##### RTC and low power modes #####
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The MCU can be woken up from a low power mode by an RTC alternate
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        function.
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The RTC alternate functions are the RTC alarms (Alarm A),
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        and RTC tamper event detection.
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        These RTC alternate functions can wake up the system from the Stop and
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        Standby low power modes.
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The system can also wake up from low power modes without depending
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        on an external interrupt (Auto-wakeup mode), by using the RTC alarm.
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Callback registration ***
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   =============================================
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   The compilation define  USE_HAL_RTC_REGISTER_CALLBACKS when set to 1
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   allows the user to configure dynamically the driver callbacks.
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   Use Function @ref HAL_RTC_RegisterCallback() to register an interrupt callback.
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   Function @ref HAL_RTC_RegisterCallback() allows to register following callbacks:
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) AlarmAEventCallback          : RTC Alarm A Event callback.
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Tamper1EventCallback         : RTC Tamper 1 Event callback.
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) MspInitCallback              : RTC MspInit callback.
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) MspDeInitCallback            : RTC MspDeInit callback.
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]	  
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   and a pointer to the user callback function.
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   Use function @ref HAL_RTC_UnRegisterCallback() to reset a callback to the default
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   weak function.
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   @ref HAL_RTC_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   and the Callback ID.
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   This function allows to reset following callbacks:
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) AlarmAEventCallback          : RTC Alarm A Event callback.
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Tamper1EventCallback         : RTC Tamper 1 Event callback.
 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) MspInitCallback              : RTC MspInit callback.
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) MspDeInitCallback            : RTC MspDeInit callback.
ARM GAS  /tmp/ccGDryUz.s 			page 4


 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   By default, after the @ref HAL_RTC_Init() and when the state is HAL_RTC_STATE_RESET,
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   all callbacks are set to the corresponding weak functions :
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   example @ref AlarmAEventCallback().
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   Exception done for MspInit and MspDeInit callbacks that are reset to the legacy weak function
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   in the @ref HAL_RTC_Init()/@ref HAL_RTC_DeInit() only when these callbacks are null
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   (not registered beforehand).
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   If not, MspInit or MspDeInit are not null, @ref HAL_RTC_Init()/@ref HAL_RTC_DeInit()
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   Callbacks can be registered/unregistered in HAL_RTC_STATE_READY state only.
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   in HAL_RTC_STATE_READY or HAL_RTC_STATE_RESET state,
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   In that case first register the MspInit/MspDeInit user callbacks
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   using @ref HAL_RTC_RegisterCallback() before calling @ref HAL_RTC_DeInit()
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   or @ref HAL_RTC_Init() function.
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   When The compilation define USE_HAL_RTC_REGISTER_CALLBACKS is set to 0 or
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   not defined, the callback registration feature is not available and all callbacks
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   are set to the corresponding weak functions.
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    @endverbatim
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ******************************************************************************
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @attention
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * All rights reserved.</center></h2>
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * the "License"; You may not use this file except in compliance with the
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * License. You may obtain a copy of the License at:
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                        opensource.org/licenses/BSD-3-Clause
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ******************************************************************************
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Includes ------------------------------------------------------------------*/
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #include "stm32f1xx_hal.h"
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @addtogroup STM32F1xx_HAL_Driver
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC RTC
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief RTC HAL module driver
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #ifdef HAL_RTC_MODULE_ENABLED
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private define ------------------------------------------------------------*/
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Private_Constants RTC Private Constants
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #define RTC_ALARM_RESETVALUE_REGISTER    (uint16_t)0xFFFF
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #define RTC_ALARM_RESETVALUE             0xFFFFFFFFU
ARM GAS  /tmp/ccGDryUz.s 			page 5


 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private macro -------------------------------------------------------------*/
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Private_Macros RTC Private Macros
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private variables ---------------------------------------------------------*/
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Private_Functions RTC Private Functions
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint32_t           RTC_ReadTimeCounter(RTC_HandleTypeDef *hrtc);
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef  RTC_WriteTimeCounter(RTC_HandleTypeDef *hrtc, uint32_t TimeCounter);
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint32_t           RTC_ReadAlarmCounter(RTC_HandleTypeDef *hrtc);
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef  RTC_WriteAlarmCounter(RTC_HandleTypeDef *hrtc, uint32_t AlarmCounter);
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef  RTC_EnterInitMode(RTC_HandleTypeDef *hrtc);
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef  RTC_ExitInitMode(RTC_HandleTypeDef *hrtc);
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t            RTC_ByteToBcd2(uint8_t Value);
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t            RTC_Bcd2ToByte(uint8_t Value);
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t            RTC_IsLeapYear(uint16_t nYear);
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static void               RTC_DateUpdate(RTC_HandleTypeDef *hrtc, uint32_t DayElapsed);
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t            RTC_WeekDayNum(uint32_t nYear, uint8_t nMonth, uint8_t nDay);
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private functions ---------------------------------------------------------*/
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions RTC Exported Functions
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group1 Initialization and de-initialization functions
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief    Initialization and Configuration functions
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ##### Initialization and de-initialization functions #####
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    [..] This section provides functions allowing to initialize and configure the
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          RTC Prescaler (Asynchronous), disable RTC registers Write protection,
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          enter and exit the RTC initialization mode,
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          RTC registers synchronization check and reference clock detection enable.
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          (#) The RTC Prescaler should be programmed to generate the RTC 1Hz time base.
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          (#) All RTC registers are Write protected. Writing to the RTC registers
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              is enabled by setting the CNF bit in the RTC_CRL register.
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          (#) To read the calendar after wakeup from low power modes (Standby or Stop)
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              the software must first wait for the RSF bit (Register Synchronized Flag)
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              in the RTC_CRL register to be set by hardware.
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              The HAL_RTC_WaitForSynchro() function implements the above software
ARM GAS  /tmp/ccGDryUz.s 			page 6


 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              sequence (RSF clear and RSF check).
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Initializes the RTC peripheral
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t prescaler = 0U;
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hrtc == NULL)
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_CALIB_OUTPUT(hrtc->Init.OutPut));
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ASYNCH_PREDIV(hrtc->Init.AsynchPrediv));
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hrtc->State == HAL_RTC_STATE_RESET)
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Allocate lock resource and initialize it */
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->Lock = HAL_UNLOCKED;
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->AlarmAEventCallback          =  HAL_RTC_AlarmAEventCallback;        /* Legacy weak AlarmA
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->Tamper1EventCallback         =  HAL_RTCEx_Tamper1EventCallback;     /* Legacy weak Tamper
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (hrtc->MspInitCallback == NULL)
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->MspInitCallback = HAL_RTC_MspInit;
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Init the low level hardware */
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->MspInitCallback(hrtc);
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (hrtc->MspDeInitCallback == NULL)
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #else
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hrtc->State == HAL_RTC_STATE_RESET)
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Allocate lock resource and initialize it */
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->Lock = HAL_UNLOCKED;
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Initialize RTC MSP */
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     HAL_RTC_MspInit(hrtc);
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS) */
ARM GAS  /tmp/ccGDryUz.s 			page 7


 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set RTC state */
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Waiting for synchro */
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_EnterInitMode(hrtc) != HAL_OK)
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Clear Flags Bits */
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_BIT(hrtc->Instance->CRL, (RTC_FLAG_OW | RTC_FLAG_ALRAF | RTC_FLAG_SEC));
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (hrtc->Init.OutPut != RTC_OUTPUTSOURCE_NONE)
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Disable the selected Tamper pin */
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       CLEAR_BIT(BKP->CR, BKP_CR_TPE);
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set the signal which will be routed to RTC Tamper pin*/
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     MODIFY_REG(BKP->RTCCR, (BKP_RTCCR_CCO | BKP_RTCCR_ASOE | BKP_RTCCR_ASOS), hrtc->Init.OutPut);
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (hrtc->Init.AsynchPrediv != RTC_AUTO_1_SECOND)
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* RTC Prescaler provided directly by end-user*/
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       prescaler = hrtc->Init.AsynchPrediv;
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* RTC Prescaler will be automatically calculated to get 1 second timebase */
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Get the RTCCLK frequency */
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       prescaler = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_RTC);
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Check that RTC clock is enabled*/
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (prescaler == 0U)
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Should not happen. Frequency is not available*/
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_ERROR;
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* RTC period = RTCCLK/(RTC_PR + 1) */
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         prescaler = prescaler - 1U;
ARM GAS  /tmp/ccGDryUz.s 			page 8


 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Configure the RTC_PRLH / RTC_PRLL */
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     MODIFY_REG(hrtc->Instance->PRLH, RTC_PRLH_PRL, (prescaler >> 16U));
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     MODIFY_REG(hrtc->Instance->PRLL, RTC_PRLL_PRL, (prescaler & RTC_PRLL_PRL));
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Wait for synchro */
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_ExitInitMode(hrtc) != HAL_OK)
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Initialize date to 1st of January 2000 */
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Year = 0x00U;
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = RTC_MONTH_JANUARY;
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date = 0x01U;
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_OK;
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  DeInitializes the RTC peripheral
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @note   This function does not reset the RTC Backup Data registers.
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeInit(RTC_HandleTypeDef *hrtc)
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hrtc == NULL)
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set RTC state */
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_EnterInitMode(hrtc) != HAL_OK)
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Release Lock */
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  /tmp/ccGDryUz.s 			page 9


 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CNTL);
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CNTH);
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->PRLL, 0x00008000U);
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->PRLH);
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Reset All CRH/CRL bits */
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CRH);
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CRL);
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_ExitInitMode(hrtc) != HAL_OK)
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Process Unlocked */
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       __HAL_UNLOCK(hrtc);
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait for synchro*/
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_RTC_WaitForSynchro(hrtc);
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Clear RSF flag */
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   CLEAR_BIT(hrtc->Instance->CRL, RTC_FLAG_RSF);
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hrtc->MspDeInitCallback == NULL)
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* DeInit the low level hardware: CLOCK, NVIC.*/
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->MspDeInitCallback(hrtc);
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #else
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* De-Initialize RTC MSP */
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_RTC_MspDeInit(hrtc);
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS) */
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_RESET;
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Release Lock */
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Register a User RTC Callback
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         To be used instead of the weak predefined callback
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc RTC handle
ARM GAS  /tmp/ccGDryUz.s 			page 10


 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  CallbackID ID of the callback to be registered
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         This parameter can be one of the following values:
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_ALARM_A_EVENT_CB_ID          Alarm A Event Callback ID
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER1_EVENT_CB_ID          Tamper 1 Callback ID
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPINIT_CB_ID                Msp Init callback ID
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPDEINIT_CB_ID              Msp DeInit callback ID
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  pCallback pointer to the Callback function
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_RegisterCallback(RTC_HandleTypeDef *hrtc, HAL_RTC_CallbackIDTypeDef Callb
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (pCallback == NULL)
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process locked */
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_STATE_READY == hrtc->State)
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     switch (CallbackID)
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_ALARM_A_EVENT_CB_ID :
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->AlarmAEventCallback = pCallback;
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_TAMPER1_EVENT_CB_ID :
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->Tamper1EventCallback = pCallback;
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->MspInitCallback = pCallback;
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->MspDeInitCallback = pCallback;
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       default :
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Return error status */
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         status =  HAL_ERROR;
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else if (HAL_RTC_STATE_RESET == hrtc->State)
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     switch (CallbackID)
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->MspInitCallback = pCallback;
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->MspDeInitCallback = pCallback;
ARM GAS  /tmp/ccGDryUz.s 			page 11


 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       default :
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Return error status */
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         status =  HAL_ERROR;
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Return error status */
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     status =  HAL_ERROR;
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Release Lock */
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return status;
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Unregister an RTC Callback
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         RTC callabck is redirected to the weak predefined callback
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc RTC handle
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  CallbackID ID of the callback to be unregistered
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         This parameter can be one of the following values:
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_ALARM_A_EVENT_CB_ID          Alarm A Event Callback ID
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER1_EVENT_CB_ID          Tamper 1 Callback ID
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPINIT_CB_ID Msp Init callback ID
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPDEINIT_CB_ID Msp DeInit callback ID
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_UnRegisterCallback(RTC_HandleTypeDef *hrtc, HAL_RTC_CallbackIDTypeDef Cal
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process locked */
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_STATE_READY == hrtc->State)
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     switch (CallbackID)
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_ALARM_A_EVENT_CB_ID :
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->AlarmAEventCallback = HAL_RTC_AlarmAEventCallback;         /* Legacy weak AlarmAEvent
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_TAMPER1_EVENT_CB_ID :
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->Tamper1EventCallback = HAL_RTCEx_Tamper1EventCallback;         /* Legacy weak Tamper1
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->MspInitCallback = HAL_RTC_MspInit;
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
ARM GAS  /tmp/ccGDryUz.s 			page 12


 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       default :
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Return error status */
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         status =  HAL_ERROR;
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else if (HAL_RTC_STATE_RESET == hrtc->State)
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     switch (CallbackID)
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->MspInitCallback = HAL_RTC_MspInit;
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       default :
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Return error status */
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         status =  HAL_ERROR;
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Return error status */
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     status =  HAL_ERROR;
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Release Lock */
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return status;
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Initializes the RTC MSP.
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** __weak void HAL_RTC_MspInit(RTC_HandleTypeDef *hrtc)
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(hrtc);
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****             the HAL_RTC_MspInit could be implemented in the user file
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    */
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  DeInitializes the RTC MSP.
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
ARM GAS  /tmp/ccGDryUz.s 			page 13


 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** __weak void HAL_RTC_MspDeInit(RTC_HandleTypeDef *hrtc)
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(hrtc);
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****             the HAL_RTC_MspDeInit could be implemented in the user file
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    */
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group2 Time and Date functions
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief   RTC Time and Date functions
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                  ##### RTC Time and Date functions #####
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Time and Date features
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Sets RTC current time.
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sTime: Pointer to Time structure
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U;
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((hrtc == NULL) || (sTime == NULL))
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  /tmp/ccGDryUz.s 			page 14


 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(sTime->Hours));
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sTime->Minutes));
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sTime->Seconds));
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_time = (uint32_t)(((uint32_t)sTime->Hours * 3600U) + \
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                               ((uint32_t)sTime->Minutes * 60U) + \
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                               ((uint32_t)sTime->Seconds));
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_time = (((uint32_t)(RTC_Bcd2ToByte(sTime->Hours)) * 3600U) + \
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                     ((uint32_t)(RTC_Bcd2ToByte(sTime->Minutes)) * 60U) + \
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                     ((uint32_t)(RTC_Bcd2ToByte(sTime->Seconds))));
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Write time counter in RTC registers */
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_WriteTimeCounter(hrtc, counter_time) != HAL_OK)
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Process Unlocked */
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Clear Second and overflow flags */
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_BIT(hrtc->Instance->CRL, (RTC_FLAG_SEC | RTC_FLAG_OW));
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Read current Alarm counter in RTC registers */
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = RTC_ReadAlarmCounter(hrtc);
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set again alarm to match with new time if enabled */
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (counter_alarm != RTC_ALARM_RESETVALUE)
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (counter_alarm < counter_time)
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Add 1 day to alarm counter*/
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         counter_alarm += (uint32_t)(24U * 3600U);
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Write new Alarm counter in RTC registers */
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           /* Set RTC state */
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           hrtc->State = HAL_RTC_STATE_ERROR;
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           /* Process Unlocked */
ARM GAS  /tmp/ccGDryUz.s 			page 15


 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           __HAL_UNLOCK(hrtc);
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           return HAL_ERROR;
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_OK;
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Gets RTC current time.
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sTime: Pointer to Time structure
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, days_elapsed = 0U, hours = 0U;
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((hrtc == NULL) || (sTime == NULL))
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check if counter overflow occurred */
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (__HAL_RTC_OVERFLOW_GET_FLAG(hrtc, RTC_FLAG_OW))
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Read the time counter*/
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_time = RTC_ReadTimeCounter(hrtc);
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hours = counter_time / 3600U;
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sTime->Minutes  = (uint8_t)((counter_time % 3600U) / 60U);
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sTime->Seconds  = (uint8_t)((counter_time % 3600U) % 60U);
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hours >= 24U)
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Get number of days elapsed from last calculation */
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     days_elapsed = (hours / 24U);
ARM GAS  /tmp/ccGDryUz.s 			page 16


 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set Hours in RTC_TimeTypeDef structure*/
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Hours = (hours % 24U);
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Read Alarm counter in RTC registers */
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = RTC_ReadAlarmCounter(hrtc);
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Calculate remaining time to reach alarm (only if set and not yet expired)*/
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if ((counter_alarm != RTC_ALARM_RESETVALUE) && (counter_alarm > counter_time))
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       counter_alarm -= counter_time;
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* In case of counter_alarm < counter_time */
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Alarm expiration already occurred but alarm not deactivated */
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       counter_alarm = RTC_ALARM_RESETVALUE;
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set updated time in decreasing counter by number of days elapsed */
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_time -= (days_elapsed * 24U * 3600U);
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Write time counter in RTC registers */
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_WriteTimeCounter(hrtc, counter_time) != HAL_OK)
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set updated alarm to be set */
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (counter_alarm != RTC_ALARM_RESETVALUE)
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       counter_alarm += counter_time;
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Write time counter in RTC registers */
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_ERROR;
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Alarm already occurred. Set it to reset values to avoid unexpected expiration */
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_ERROR;
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Update date */
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     RTC_DateUpdate(hrtc, days_elapsed);
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Hours = hours;
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the input parameters format */
ARM GAS  /tmp/ccGDryUz.s 			page 17


 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (Format != RTC_FORMAT_BIN)
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Convert the time structure parameters to BCD format */
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Hours    = (uint8_t)RTC_ByteToBcd2(sTime->Hours);
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Minutes  = (uint8_t)RTC_ByteToBcd2(sTime->Minutes);
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Seconds  = (uint8_t)RTC_ByteToBcd2(sTime->Seconds);
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Sets RTC current date.
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sDate: Pointer to date structure
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: specifies the format of the entered parameters.
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, hours = 0U;
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((hrtc == NULL) || (sDate == NULL))
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(sDate->Year));
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date));
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Change the current date */
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Year  = sDate->Year;
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = sDate->Month;
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date  = sDate->Date;
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(RTC_Bcd2ToByte(sDate->Month)));
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(RTC_Bcd2ToByte(sDate->Date)));
ARM GAS  /tmp/ccGDryUz.s 			page 18


 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Change the current date */
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Year  = RTC_Bcd2ToByte(sDate->Year);
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = RTC_Bcd2ToByte(sDate->Month);
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date  = RTC_Bcd2ToByte(sDate->Date);
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* WeekDay set by user can be ignored because automatically calculated */
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.WeekDay = RTC_WeekDayNum(hrtc->DateToUpdate.Year, hrtc->DateToUpdate.Month, hr
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->WeekDay = hrtc->DateToUpdate.WeekDay;
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Reset time to be aligned on the same day */
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Read the time counter*/
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_time = RTC_ReadTimeCounter(hrtc);
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hours = counter_time / 3600U;
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hours > 24U)
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set updated time in decreasing counter by number of days elapsed */
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_time -= ((hours / 24U) * 24U * 3600U);
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Write time counter in RTC registers */
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_WriteTimeCounter(hrtc, counter_time) != HAL_OK)
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Set RTC state */
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Process Unlocked */
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       __HAL_UNLOCK(hrtc);
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Read current Alarm counter in RTC registers */
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = RTC_ReadAlarmCounter(hrtc);
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set again alarm to match with new time if enabled */
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (counter_alarm != RTC_ALARM_RESETVALUE)
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (counter_alarm < counter_time)
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Add 1 day to alarm counter*/
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         counter_alarm += (uint32_t)(24U * 3600U);
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Write new Alarm counter in RTC registers */
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           /* Set RTC state */
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           hrtc->State = HAL_RTC_STATE_ERROR;
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           /* Process Unlocked */
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           __HAL_UNLOCK(hrtc);
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           return HAL_ERROR;
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
ARM GAS  /tmp/ccGDryUz.s 			page 19


1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY ;
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Unlocked */
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Gets RTC current date.
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sDate: Pointer to Date structure
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN:  Binary data format
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD:  BCD data format
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   RTC_TimeTypeDef stime = {0U};
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((hrtc == NULL) || (sDate == NULL))
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Call HAL_RTC_GetTime function to update date if counter higher than 24 hours */
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_GetTime(hrtc, &stime, RTC_FORMAT_BIN) != HAL_OK)
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->WeekDay  = hrtc->DateToUpdate.WeekDay;
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Year     = hrtc->DateToUpdate.Year;
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Month    = hrtc->DateToUpdate.Month;
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Date     = hrtc->DateToUpdate.Date;
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the input parameters format */
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (Format != RTC_FORMAT_BIN)
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Convert the date structure parameters to BCD format */
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Year   = (uint8_t)RTC_ByteToBcd2(sDate->Year);
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Month  = (uint8_t)RTC_ByteToBcd2(sDate->Month);
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Date   = (uint8_t)RTC_ByteToBcd2(sDate->Date);
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
ARM GAS  /tmp/ccGDryUz.s 			page 20


1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group3 Alarm functions
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief   RTC Alarm functions
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                  ##### RTC Alarm functions #####
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Alarm feature
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Sets the specified RTC Alarm.
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Alarm structure
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Form
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U, counter_time;
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   RTC_TimeTypeDef stime = {0U};
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((hrtc == NULL) || (sAlarm == NULL))
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Call HAL_RTC_GetTime function to update date if counter higher than 24 hours */
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_GetTime(hrtc, &stime, RTC_FORMAT_BIN) != HAL_OK)
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  /tmp/ccGDryUz.s 			page 21


1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Convert time in seconds */
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_time = (uint32_t)(((uint32_t)stime.Hours * 3600U) + \
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Minutes * 60U) + \
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Seconds));
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = (uint32_t)(((uint32_t)sAlarm->AlarmTime.Hours * 3600U) + \
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Seconds));
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = (((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)) * 3600U) + \
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check that requested alarm should expire in the same day (otherwise add 1 day) */
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (counter_alarm < counter_time)
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Add 1 day to alarm counter*/
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm += (uint32_t)(24U * 3600U);
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Write Alarm counter in RTC registers */
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Process Unlocked */
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_OK;
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Sets the specified RTC Alarm with Interrupt
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
ARM GAS  /tmp/ccGDryUz.s 			page 22


1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Alarm structure
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @note   The HAL_RTC_SetTime() must be called before enabling the Alarm feature.
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm_IT(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t F
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U, counter_time;
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   RTC_TimeTypeDef stime = {0U};
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((hrtc == NULL) || (sAlarm == NULL))
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Call HAL_RTC_GetTime function to update date if counter higher than 24 hours */
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_GetTime(hrtc, &stime, RTC_FORMAT_BIN) != HAL_OK)
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Convert time in seconds */
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_time = (uint32_t)(((uint32_t)stime.Hours * 3600U) + \
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Minutes * 60U) + \
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Seconds));
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = (uint32_t)(((uint32_t)sAlarm->AlarmTime.Hours * 3600U) + \
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Seconds));
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = (((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)) * 3600U) + \
ARM GAS  /tmp/ccGDryUz.s 			page 23


1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check that requested alarm should expire in the same day (otherwise add 1 day) */
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (counter_alarm < counter_time)
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Add 1 day to alarm counter*/
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm += (uint32_t)(24U * 3600U);
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Write alarm counter in RTC registers */
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Process Unlocked */
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Clear flag alarm A */
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc, RTC_IT_ALRA);
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* RTC Alarm Interrupt Configuration: EXTI configuration */
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_EXTI_ENABLE_IT();
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_OK;
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Gets the RTC Alarm value and masks.
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Date structure
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Alarm: Specifies the Alarm.
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_ALARM_A: Alarm
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
ARM GAS  /tmp/ccGDryUz.s 			page 24


1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Alar
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U;
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(Alarm);
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((hrtc == NULL) || (sAlarm == NULL))
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Read Alarm counter in RTC registers */
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_alarm = RTC_ReadAlarmCounter(hrtc);
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Fill the structure with the read parameters */
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set hours in a day range (between 0 to 24)*/
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Hours   = (uint32_t)((counter_alarm / 3600U) % 24U);
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((counter_alarm % 3600U) / 60U);
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)((counter_alarm % 3600U) % 60U);
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (Format != RTC_FORMAT_BIN)
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours   = RTC_ByteToBcd2(sAlarm->AlarmTime.Hours);
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes);
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds);
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Deactive the specified RTC Alarm
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Alarm: Specifies the Alarm.
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_ALARM_A:  AlarmA
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeactivateAlarm(RTC_HandleTypeDef *hrtc, uint32_t Alarm)
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(Alarm);
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hrtc == NULL)
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccGDryUz.s 			page 25


1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_EnterInitMode(hrtc) != HAL_OK)
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Process Unlocked */
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Clear flag alarm A */
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set to default values ALRH & ALRL registers */
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRH, RTC_ALARM_RESETVALUE_REGISTER);
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRL, RTC_ALARM_RESETVALUE_REGISTER);
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* RTC Alarm Interrupt Configuration: Disable EXTI configuration */
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_EXTI_DISABLE_IT();
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Wait for synchro */
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_ExitInitMode(hrtc) != HAL_OK)
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Process Unlocked */
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       __HAL_UNLOCK(hrtc);
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Unlocked */
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  This function handles Alarm interrupt request.
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
ARM GAS  /tmp/ccGDryUz.s 			page 26


1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** void HAL_RTC_AlarmIRQHandler(RTC_HandleTypeDef *hrtc)
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA))
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Get the status of the Interrupt */
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) != (uint32_t)RESET)
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* AlarmA callback */
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->AlarmAEventCallback(hrtc);
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #else
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       HAL_RTC_AlarmAEventCallback(hrtc);
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Clear the Alarm interrupt pending bit */
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_CLEAR_FLAG();
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Change RTC state */
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Alarm A callback.
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** __weak void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(hrtc);
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****             the HAL_RTC_AlarmAEventCallback could be implemented in the user file
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    */
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  This function handles AlarmA Polling request.
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Timeout: Timeout duration
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_PollForAlarmAEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = HAL_GetTick();
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hrtc == NULL)
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccGDryUz.s 			page 27


1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) == RESET)
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (Timeout != HAL_MAX_DELAY)
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if ((Timeout == 0) || ((HAL_GetTick() - tickstart) > Timeout))
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_TIMEOUT;
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Clear the Alarm interrupt pending bit */
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Change RTC state */
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group4 Peripheral State functions
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief   Peripheral State functions
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ##### Peripheral State functions #####
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     [..]
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     This subsection provides functions allowing to
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       (+) Get RTC state
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Returns the RTC state.
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL state
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_RTCStateTypeDef HAL_RTC_GetState(RTC_HandleTypeDef *hrtc)
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return hrtc->State;
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group5 Peripheral Control functions
ARM GAS  /tmp/ccGDryUz.s 			page 28


1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief   Peripheral Control functions
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ##### Peripheral Control functions #####
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     [..]
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     This subsection provides functions allowing to
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       (+) Wait for RTC Time and Date Synchronization
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Waits until the RTC registers (RTC_CNT, RTC_ALR and RTC_PRL)
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *   are synchronized with RTC APB clock.
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @note   This function must be called before any read operation after an APB reset
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *   or an APB clock stop.
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef *hrtc)
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hrtc == NULL)
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Clear RSF flag */
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   CLEAR_BIT(hrtc->Instance->CRL, RTC_FLAG_RSF);
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   tickstart = HAL_GetTick();
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait the registers to be synchronised */
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while ((hrtc->Instance->CRL & RTC_FLAG_RSF) == (uint32_t)RESET)
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if ((HAL_GetTick() - tickstart) >  RTC_TIMEOUT_VALUE)
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_TIMEOUT;
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
ARM GAS  /tmp/ccGDryUz.s 			page 29


1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @addtogroup RTC_Private_Functions
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Read the time counter available in RTC_CNT registers.
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Time counter
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint32_t RTC_ReadTimeCounter(RTC_HandleTypeDef *hrtc)
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
  25              		.loc 1 1588 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
  31 0000 30B4     		push	{r4, r5}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 5, -4
  36              	.LVL1:
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint16_t high1 = 0U, high2 = 0U, low = 0U;
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t timecounter = 0U;
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   high1 = READ_REG(hrtc->Instance->CNTH & RTC_CNTH_RTC_CNT);
  37              		.loc 1 1592 0
  38 0002 0268     		ldr	r2, [r0]
  39 0004 9469     		ldr	r4, [r2, #24]
  40 0006 A5B2     		uxth	r5, r4
  41              	.LVL2:
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   low   = READ_REG(hrtc->Instance->CNTL & RTC_CNTL_RTC_CNT);
  42              		.loc 1 1593 0
  43 0008 D369     		ldr	r3, [r2, #28]
  44              	.LVL3:
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   high2 = READ_REG(hrtc->Instance->CNTH & RTC_CNTH_RTC_CNT);
  45              		.loc 1 1594 0
  46 000a 9169     		ldr	r1, [r2, #24]
  47 000c 88B2     		uxth	r0, r1
  48              	.LVL4:
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (high1 != high2)
  49              		.loc 1 1596 0
  50 000e 8542     		cmp	r5, r0
  51 0010 05D0     		beq	.L2
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* In this case the counter roll over during reading of CNTL and CNTH registers,
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        read again CNTL register then return the counter value */
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     timecounter = (((uint32_t) high2 << 16U) | READ_REG(hrtc->Instance->CNTL & RTC_CNTL_RTC_CNT));
  52              		.loc 1 1600 0
  53 0012 D069     		ldr	r0, [r2, #28]
  54              	.LVL5:
ARM GAS  /tmp/ccGDryUz.s 			page 30


  55 0014 80B2     		uxth	r0, r0
  56 0016 40EA0140 		orr	r0, r0, r1, lsl #16
  57              	.LVL6:
  58              	.L1:
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* No counter roll over during reading of CNTL and CNTH registers, counter
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        value is equal to first value of CNTL and CNTH */
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     timecounter = (((uint32_t) high1 << 16U) | low);
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return timecounter;
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
  59              		.loc 1 1610 0
  60 001a 30BC     		pop	{r4, r5}
  61              	.LCFI1:
  62              		.cfi_remember_state
  63              		.cfi_restore 5
  64              		.cfi_restore 4
  65              		.cfi_def_cfa_offset 0
  66              	.LVL7:
  67 001c 7047     		bx	lr
  68              	.LVL8:
  69              	.L2:
  70              	.LCFI2:
  71              		.cfi_restore_state
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
  72              		.loc 1 1606 0
  73 001e 98B2     		uxth	r0, r3
  74              	.LVL9:
  75 0020 40EA0440 		orr	r0, r0, r4, lsl #16
  76              	.LVL10:
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
  77              		.loc 1 1609 0
  78 0024 F9E7     		b	.L1
  79              		.cfi_endproc
  80              	.LFE82:
  82              		.section	.text.RTC_ReadAlarmCounter,"ax",%progbits
  83              		.align	1
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu softvfp
  89              	RTC_ReadAlarmCounter:
  90              	.LFB84:
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Write the time counter in RTC_CNT registers.
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  TimeCounter: Counter to write in RTC_CNT registers
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef RTC_WriteTimeCounter(RTC_HandleTypeDef *hrtc, uint32_t TimeCounter)
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp/ccGDryUz.s 			page 31


1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_EnterInitMode(hrtc) != HAL_OK)
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     status = HAL_ERROR;
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER MSB word */
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->CNTH, (TimeCounter >> 16U));
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER LSB word */
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->CNTL, (TimeCounter & RTC_CNTL_RTC_CNT));
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Wait for synchro */
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_ExitInitMode(hrtc) != HAL_OK)
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       status = HAL_ERROR;
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return status;
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Read the time counter available in RTC_ALR registers.
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Time counter
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint32_t RTC_ReadAlarmCounter(RTC_HandleTypeDef *hrtc)
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
  91              		.loc 1 1652 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.LVL11:
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint16_t high1 = 0U, low = 0U;
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   high1 = READ_REG(hrtc->Instance->ALRH & RTC_CNTH_RTC_CNT);
  97              		.loc 1 1655 0
  98 0000 0368     		ldr	r3, [r0]
  99 0002 186A     		ldr	r0, [r3, #32]
 100              	.LVL12:
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   low   = READ_REG(hrtc->Instance->ALRL & RTC_CNTL_RTC_CNT);
 101              		.loc 1 1656 0
 102 0004 5B6A     		ldr	r3, [r3, #36]
 103              	.LVL13:
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return (((uint32_t) high1 << 16U) | low);
 104              		.loc 1 1658 0
 105 0006 9BB2     		uxth	r3, r3
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 106              		.loc 1 1659 0
 107 0008 43EA0040 		orr	r0, r3, r0, lsl #16
 108              	.LVL14:
 109 000c 7047     		bx	lr
ARM GAS  /tmp/ccGDryUz.s 			page 32


 110              		.cfi_endproc
 111              	.LFE84:
 113              		.section	.text.RTC_ByteToBcd2,"ax",%progbits
 114              		.align	1
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu softvfp
 120              	RTC_ByteToBcd2:
 121              	.LFB88:
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Write the time counter in RTC_ALR registers.
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  AlarmCounter: Counter to write in RTC_ALR registers
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef RTC_WriteAlarmCounter(RTC_HandleTypeDef *hrtc, uint32_t AlarmCounter)
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_EnterInitMode(hrtc) != HAL_OK)
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     status = HAL_ERROR;
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER MSB word */
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRH, (AlarmCounter >> 16U));
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER LSB word */
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRL, (AlarmCounter & RTC_ALRL_RTC_ALR));
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Wait for synchro */
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_ExitInitMode(hrtc) != HAL_OK)
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       status = HAL_ERROR;
1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return status;
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Enters the RTC Initialization mode.
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef *hrtc)
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   tickstart = HAL_GetTick();
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait till RTC is in INIT state and if Time out is reached exit */
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while ((hrtc->Instance->CRL & RTC_CRL_RTOFF) == (uint32_t)RESET)
ARM GAS  /tmp/ccGDryUz.s 			page 33


1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if ((HAL_GetTick() - tickstart) >  RTC_TIMEOUT_VALUE)
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_TIMEOUT;
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Exit the RTC Initialization mode.
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef RTC_ExitInitMode(RTC_HandleTypeDef *hrtc)
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   tickstart = HAL_GetTick();
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait till RTC is in INIT state and if Time out is reached exit */
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while ((hrtc->Instance->CRL & RTC_CRL_RTOFF) == (uint32_t)RESET)
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if ((HAL_GetTick() - tickstart) >  RTC_TIMEOUT_VALUE)
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_TIMEOUT;
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Converts a 2 digit decimal to BCD format.
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Value: Byte to be converted
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Converted byte
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t RTC_ByteToBcd2(uint8_t Value)
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 122              		.loc 1 1753 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.LVL15:
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t bcdhigh = 0U;
 128              		.loc 1 1754 0
 129 0000 0023     		movs	r3, #0
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  /tmp/ccGDryUz.s 			page 34


1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while (Value >= 10U)
 130              		.loc 1 1756 0
 131 0002 02E0     		b	.L7
 132              	.LVL16:
 133              	.L8:
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     bcdhigh++;
 134              		.loc 1 1758 0
 135 0004 0133     		adds	r3, r3, #1
 136              	.LVL17:
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     Value -= 10U;
 137              		.loc 1 1759 0
 138 0006 0A38     		subs	r0, r0, #10
 139              	.LVL18:
 140 0008 C0B2     		uxtb	r0, r0
 141              	.LVL19:
 142              	.L7:
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 143              		.loc 1 1756 0
 144 000a 0928     		cmp	r0, #9
 145 000c FAD8     		bhi	.L8
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return ((uint8_t)(bcdhigh << 4U) | Value);
 146              		.loc 1 1762 0
 147 000e 1B01     		lsls	r3, r3, #4
 148              	.LVL20:
 149 0010 DBB2     		uxtb	r3, r3
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 150              		.loc 1 1763 0
 151 0012 1843     		orrs	r0, r0, r3
 152              	.LVL21:
 153 0014 7047     		bx	lr
 154              		.cfi_endproc
 155              	.LFE88:
 157              		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
 158              		.align	1
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu softvfp
 164              	RTC_Bcd2ToByte:
 165              	.LFB89:
1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Converts from 2 digit BCD to Binary.
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Value: BCD value to be converted
1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Converted word
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t RTC_Bcd2ToByte(uint8_t Value)
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 166              		.loc 1 1771 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 171              	.LVL22:
ARM GAS  /tmp/ccGDryUz.s 			page 35


1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tmp = 0U;
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   tmp = ((uint8_t)(Value & (uint8_t)0xF0) >> (uint8_t)0x4) * 10U;
 172              		.loc 1 1773 0
 173 0000 0309     		lsrs	r3, r0, #4
 174 0002 03EB8303 		add	r3, r3, r3, lsl #2
 175 0006 5A00     		lsls	r2, r3, #1
 176              	.LVL23:
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 177              		.loc 1 1774 0
 178 0008 00F00F00 		and	r0, r0, #15
 179              	.LVL24:
 180 000c 1044     		add	r0, r0, r2
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 181              		.loc 1 1775 0
 182 000e C0B2     		uxtb	r0, r0
 183 0010 7047     		bx	lr
 184              		.cfi_endproc
 185              	.LFE89:
 187              		.section	.text.RTC_IsLeapYear,"ax",%progbits
 188              		.align	1
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 192              		.fpu softvfp
 194              	RTC_IsLeapYear:
 195              	.LFB91:
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Updates date when time is 23:59:59.
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  DayElapsed: Number of days elapsed from last date update
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static void RTC_DateUpdate(RTC_HandleTypeDef *hrtc, uint32_t DayElapsed)
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t year = 0U, month = 0U, day = 0U;
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t loop = 0U;
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Get the current year*/
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   year = hrtc->DateToUpdate.Year;
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Get the current month and day */
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   month = hrtc->DateToUpdate.Month;
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   day = hrtc->DateToUpdate.Date;
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   for (loop = 0U; loop < DayElapsed; loop++)
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if ((month == 1U) || (month == 3U) || (month == 5U) || (month == 7U) || \
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         (month == 8U) || (month == 10U) || (month == 12U))
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (day < 31U)
1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day++;
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Date structure member: day = 31 */
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else
ARM GAS  /tmp/ccGDryUz.s 			page 36


1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         if (month != 12U)
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           month++;
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Date structure member: day = 31 & month =12 */
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         else
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           month = 1U;
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           year++;
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else if ((month == 4U) || (month == 6U) || (month == 9U) || (month == 11U))
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (day < 30U)
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day++;
1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Date structure member: day = 30 */
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         month++;
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day = 1U;
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else if (month == 2U)
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (day < 28U)
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day++;
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else if (day == 28U)
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Leap year */
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         if (RTC_IsLeapYear(year))
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day++;
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         else
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           month++;
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else if (day == 29U)
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         month++;
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day = 1U;
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Update year */
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.Year = year;
ARM GAS  /tmp/ccGDryUz.s 			page 37


1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Update day and month */
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.Month = month;
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.Date = day;
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Update day of the week */
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.WeekDay = RTC_WeekDayNum(year, month, day);
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Check whether the passed year is Leap or not.
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  nYear  year to check
1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval 1: leap year
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         0: not leap year
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t RTC_IsLeapYear(uint16_t nYear)
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 196              		.loc 1 1880 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL25:
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((nYear % 4U) != 0U)
 202              		.loc 1 1881 0
 203 0000 10F0030F 		tst	r0, #3
 204 0004 16D1     		bne	.L12
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return 0U;
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((nYear % 100U) != 0U)
 205              		.loc 1 1886 0
 206 0006 0D4B     		ldr	r3, .L16
 207 0008 A3FB0023 		umull	r2, r3, r3, r0
 208 000c 5B09     		lsrs	r3, r3, #5
 209 000e 6422     		movs	r2, #100
 210 0010 02FB1303 		mls	r3, r2, r3, r0
 211 0014 9BB2     		uxth	r3, r3
 212 0016 7BB9     		cbnz	r3, .L13
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return 1U;
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((nYear % 400U) == 0U)
 213              		.loc 1 1891 0
 214 0018 084B     		ldr	r3, .L16
 215 001a A3FB0023 		umull	r2, r3, r3, r0
 216 001e DB09     		lsrs	r3, r3, #7
 217 0020 4FF4C872 		mov	r2, #400
 218 0024 02FB1300 		mls	r0, r2, r3, r0
 219              	.LVL26:
 220 0028 80B2     		uxth	r0, r0
 221 002a 08B1     		cbz	r0, .L15
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return 1U;
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
ARM GAS  /tmp/ccGDryUz.s 			page 38


1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return 0U;
 222              		.loc 1 1897 0
 223 002c 0020     		movs	r0, #0
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 224              		.loc 1 1899 0
 225 002e 7047     		bx	lr
 226              	.L15:
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 227              		.loc 1 1893 0
 228 0030 0120     		movs	r0, #1
 229 0032 7047     		bx	lr
 230              	.LVL27:
 231              	.L12:
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 232              		.loc 1 1883 0
 233 0034 0020     		movs	r0, #0
 234              	.LVL28:
 235 0036 7047     		bx	lr
 236              	.LVL29:
 237              	.L13:
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 238              		.loc 1 1888 0
 239 0038 0120     		movs	r0, #1
 240              	.LVL30:
 241 003a 7047     		bx	lr
 242              	.L17:
 243              		.align	2
 244              	.L16:
 245 003c 1F85EB51 		.word	1374389535
 246              		.cfi_endproc
 247              	.LFE91:
 249              		.section	.text.RTC_WeekDayNum,"ax",%progbits
 250              		.align	1
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 254              		.fpu softvfp
 256              	RTC_WeekDayNum:
 257              	.LFB92:
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Determines the week number, the day number and the week day number.
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  nYear   year to check
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  nMonth  Month to check
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  nDay    Day to check
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @note   Day is calculated with hypothesis that year > 2000
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Value which can take one of the following parameters:
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_MONDAY
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_TUESDAY
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_WEDNESDAY
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_THURSDAY
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_FRIDAY
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_SATURDAY
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_SUNDAY
ARM GAS  /tmp/ccGDryUz.s 			page 39


1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t RTC_WeekDayNum(uint32_t nYear, uint8_t nMonth, uint8_t nDay)
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 258              		.loc 1 1917 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 263              	.LVL31:
 264 0000 10B4     		push	{r4}
 265              	.LCFI3:
 266              		.cfi_def_cfa_offset 4
 267              		.cfi_offset 4, -4
 268              	.LVL32:
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t year = 0U, weekday = 0U;
1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   year = 2000U + nYear;
 269              		.loc 1 1920 0
 270 0002 00F5FA64 		add	r4, r0, #2000
 271              	.LVL33:
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (nMonth < 3U)
 272              		.loc 1 1922 0
 273 0006 0229     		cmp	r1, #2
 274 0008 20D9     		bls	.L22
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /*D = { [(23 x month)/9] + day + 4 + year + [(year-1)/4] - [(year-1)/100] + [(year-1)/400] } mo
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     weekday = (((23U * nMonth) / 9U) + nDay + 4U + year + ((year - 1U) / 4U) - ((year - 1U) / 100U)
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /*D = { [(23 x month)/9] + day + 4 + year + [year/4] - [year/100] + [year/400] - 2 } mod 7*/
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     weekday = (((23U * nMonth) / 9U) + nDay + 4U + year + (year / 4U) - (year / 100U) + (year / 400
 275              		.loc 1 1930 0
 276 000a 01EB4103 		add	r3, r1, r1, lsl #1
 277 000e C1EBC301 		rsb	r1, r1, r3, lsl #3
 278              	.LVL34:
 279 0012 1F4B     		ldr	r3, .L23
 280 0014 A3FB0113 		umull	r1, r3, r3, r1
 281 0018 02EB5303 		add	r3, r2, r3, lsr #1
 282 001c 2344     		add	r3, r3, r4
 283 001e 03EB9403 		add	r3, r3, r4, lsr #2
 284 0022 1C4A     		ldr	r2, .L23+4
 285              	.LVL35:
 286 0024 A2FB0424 		umull	r2, r4, r2, r4
 287              	.LVL36:
 288 0028 A3EB5413 		sub	r3, r3, r4, lsr #5
 289 002c 03EBD413 		add	r3, r3, r4, lsr #7
 290 0030 0233     		adds	r3, r3, #2
 291 0032 1948     		ldr	r0, .L23+8
 292              	.LVL37:
 293 0034 A0FB0320 		umull	r2, r0, r0, r3
 294 0038 1A1A     		subs	r2, r3, r0
 295 003a 00EB5200 		add	r0, r0, r2, lsr #1
 296 003e 8008     		lsrs	r0, r0, #2
 297 0040 C0EBC000 		rsb	r0, r0, r0, lsl #3
 298 0044 181A     		subs	r0, r3, r0
ARM GAS  /tmp/ccGDryUz.s 			page 40


 299              	.LVL38:
 300              	.L20:
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return (uint8_t)weekday;
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 301              		.loc 1 1934 0
 302 0046 C0B2     		uxtb	r0, r0
 303              	.LVL39:
 304 0048 10BC     		pop	{r4}
 305              	.LCFI4:
 306              		.cfi_remember_state
 307              		.cfi_restore 4
 308              		.cfi_def_cfa_offset 0
 309 004a 7047     		bx	lr
 310              	.LVL40:
 311              	.L22:
 312              	.LCFI5:
 313              		.cfi_restore_state
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 314              		.loc 1 1925 0
 315 004c 01EB4103 		add	r3, r1, r1, lsl #1
 316 0050 C1EBC301 		rsb	r1, r1, r3, lsl #3
 317              	.LVL41:
 318 0054 0E4B     		ldr	r3, .L23
 319 0056 A3FB0131 		umull	r3, r1, r3, r1
 320 005a 02EB5102 		add	r2, r2, r1, lsr #1
 321              	.LVL42:
 322 005e A318     		adds	r3, r4, r2
 323 0060 00F2CF70 		addw	r0, r0, #1999
 324              	.LVL43:
 325 0064 03EB9003 		add	r3, r3, r0, lsr #2
 326 0068 0A4A     		ldr	r2, .L23+4
 327 006a A2FB0020 		umull	r2, r0, r2, r0
 328              	.LVL44:
 329 006e A3EB5013 		sub	r3, r3, r0, lsr #5
 330 0072 03EBD013 		add	r3, r3, r0, lsr #7
 331 0076 0433     		adds	r3, r3, #4
 332 0078 0748     		ldr	r0, .L23+8
 333 007a A0FB0320 		umull	r2, r0, r0, r3
 334 007e 1A1A     		subs	r2, r3, r0
 335 0080 00EB5200 		add	r0, r0, r2, lsr #1
 336 0084 8008     		lsrs	r0, r0, #2
 337 0086 C0EBC000 		rsb	r0, r0, r0, lsl #3
 338 008a 181A     		subs	r0, r3, r0
 339              	.LVL45:
 340 008c DBE7     		b	.L20
 341              	.L24:
 342 008e 00BF     		.align	2
 343              	.L23:
 344 0090 398EE338 		.word	954437177
 345 0094 1F85EB51 		.word	1374389535
 346 0098 25499224 		.word	613566757
 347              		.cfi_endproc
 348              	.LFE92:
 350              		.section	.text.RTC_DateUpdate,"ax",%progbits
 351              		.align	1
ARM GAS  /tmp/ccGDryUz.s 			page 41


 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.fpu softvfp
 357              	RTC_DateUpdate:
 358              	.LFB90:
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t year = 0U, month = 0U, day = 0U;
 359              		.loc 1 1785 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              	.LVL46:
 364 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 365              	.LCFI6:
 366              		.cfi_def_cfa_offset 32
 367              		.cfi_offset 3, -32
 368              		.cfi_offset 4, -28
 369              		.cfi_offset 5, -24
 370              		.cfi_offset 6, -20
 371              		.cfi_offset 7, -16
 372              		.cfi_offset 8, -12
 373              		.cfi_offset 9, -8
 374              		.cfi_offset 14, -4
 375 0004 8046     		mov	r8, r0
 376 0006 0F46     		mov	r7, r1
 377              	.LVL47:
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 378              		.loc 1 1790 0
 379 0008 90F80F90 		ldrb	r9, [r0, #15]	@ zero_extendqisi2
 380              	.LVL48:
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   day = hrtc->DateToUpdate.Date;
 381              		.loc 1 1793 0
 382 000c 447B     		ldrb	r4, [r0, #13]	@ zero_extendqisi2
 383              	.LVL49:
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 384              		.loc 1 1794 0
 385 000e 867B     		ldrb	r6, [r0, #14]	@ zero_extendqisi2
 386              	.LVL50:
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 387              		.loc 1 1796 0
 388 0010 0025     		movs	r5, #0
 389 0012 03E0     		b	.L26
 390              	.LVL51:
 391              	.L27:
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 392              		.loc 1 1801 0
 393 0014 1E2E     		cmp	r6, #30
 394 0016 1FD8     		bhi	.L29
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 395              		.loc 1 1803 0
 396 0018 0136     		adds	r6, r6, #1
 397              	.LVL52:
 398              	.L30:
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 399              		.loc 1 1796 0 discriminator 2
 400 001a 0135     		adds	r5, r5, #1
 401              	.LVL53:
ARM GAS  /tmp/ccGDryUz.s 			page 42


 402              	.L26:
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 403              		.loc 1 1796 0 is_stmt 0 discriminator 1
 404 001c BD42     		cmp	r5, r7
 405 001e 3DD2     		bcs	.L40
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         (month == 8U) || (month == 10U) || (month == 12U))
 406              		.loc 1 1798 0 is_stmt 1
 407 0020 012C     		cmp	r4, #1
 408 0022 F7D0     		beq	.L27
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         (month == 8U) || (month == 10U) || (month == 12U))
 409              		.loc 1 1798 0 is_stmt 0 discriminator 1
 410 0024 032C     		cmp	r4, #3
 411 0026 F5D0     		beq	.L27
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         (month == 8U) || (month == 10U) || (month == 12U))
 412              		.loc 1 1798 0 discriminator 2
 413 0028 052C     		cmp	r4, #5
 414 002a F3D0     		beq	.L27
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         (month == 8U) || (month == 10U) || (month == 12U))
 415              		.loc 1 1798 0 discriminator 3
 416 002c 072C     		cmp	r4, #7
 417 002e F1D0     		beq	.L27
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         (month == 8U) || (month == 10U) || (month == 12U))
 418              		.loc 1 1798 0 discriminator 4
 419 0030 082C     		cmp	r4, #8
 420 0032 EFD0     		beq	.L27
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 421              		.loc 1 1799 0 is_stmt 1
 422 0034 0A2C     		cmp	r4, #10
 423 0036 EDD0     		beq	.L27
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 424              		.loc 1 1799 0 is_stmt 0 discriminator 1
 425 0038 0C2C     		cmp	r4, #12
 426 003a EBD0     		beq	.L27
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 427              		.loc 1 1822 0 is_stmt 1
 428 003c 042C     		cmp	r4, #4
 429 003e 15D0     		beq	.L32
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 430              		.loc 1 1822 0 is_stmt 0 discriminator 1
 431 0040 062C     		cmp	r4, #6
 432 0042 13D0     		beq	.L32
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 433              		.loc 1 1822 0 discriminator 2
 434 0044 092C     		cmp	r4, #9
 435 0046 11D0     		beq	.L32
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 436              		.loc 1 1822 0 discriminator 3
 437 0048 0B2C     		cmp	r4, #11
 438 004a 0FD0     		beq	.L32
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 439              		.loc 1 1835 0 is_stmt 1
 440 004c 022C     		cmp	r4, #2
 441 004e E4D1     		bne	.L30
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 442              		.loc 1 1837 0
 443 0050 1B2E     		cmp	r6, #27
 444 0052 12D8     		bhi	.L35
ARM GAS  /tmp/ccGDryUz.s 			page 43


1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 445              		.loc 1 1839 0
 446 0054 0136     		adds	r6, r6, #1
 447              	.LVL54:
 448 0056 E0E7     		b	.L30
 449              	.L29:
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 450              		.loc 1 1808 0
 451 0058 0C2C     		cmp	r4, #12
 452 005a 02D0     		beq	.L31
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
 453              		.loc 1 1810 0
 454 005c 0134     		adds	r4, r4, #1
 455              	.LVL55:
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 456              		.loc 1 1811 0
 457 005e 0126     		movs	r6, #1
 458 0060 DBE7     		b	.L30
 459              	.LVL56:
 460              	.L31:
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 461              		.loc 1 1818 0
 462 0062 09F10109 		add	r9, r9, #1
 463              	.LVL57:
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           year++;
 464              		.loc 1 1817 0
 465 0066 0126     		movs	r6, #1
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
 466              		.loc 1 1816 0
 467 0068 3446     		mov	r4, r6
 468 006a D6E7     		b	.L30
 469              	.LVL58:
 470              	.L32:
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 471              		.loc 1 1824 0
 472 006c 1D2E     		cmp	r6, #29
 473 006e 01D8     		bhi	.L34
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 474              		.loc 1 1826 0
 475 0070 0136     		adds	r6, r6, #1
 476              	.LVL59:
 477 0072 D2E7     		b	.L30
 478              	.L34:
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day = 1U;
 479              		.loc 1 1831 0
 480 0074 0134     		adds	r4, r4, #1
 481              	.LVL60:
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 482              		.loc 1 1832 0
 483 0076 0126     		movs	r6, #1
 484 0078 CFE7     		b	.L30
 485              	.LVL61:
 486              	.L35:
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 487              		.loc 1 1841 0
 488 007a 1C2E     		cmp	r6, #28
 489 007c 04D0     		beq	.L41
ARM GAS  /tmp/ccGDryUz.s 			page 44


1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 490              		.loc 1 1854 0
 491 007e 1D2E     		cmp	r6, #29
 492 0080 CBD1     		bne	.L30
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day = 1U;
 493              		.loc 1 1856 0
 494 0082 0134     		adds	r4, r4, #1
 495              	.LVL62:
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 496              		.loc 1 1857 0
 497 0084 0126     		movs	r6, #1
 498 0086 C8E7     		b	.L30
 499              	.LVL63:
 500              	.L41:
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 501              		.loc 1 1844 0
 502 0088 1FFA89F0 		uxth	r0, r9
 503 008c FFF7FEFF 		bl	RTC_IsLeapYear
 504              	.LVL64:
 505 0090 08B1     		cbz	r0, .L37
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 506              		.loc 1 1846 0
 507 0092 0136     		adds	r6, r6, #1
 508              	.LVL65:
 509 0094 C1E7     		b	.L30
 510              	.L37:
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
 511              		.loc 1 1850 0
 512 0096 0134     		adds	r4, r4, #1
 513              	.LVL66:
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 514              		.loc 1 1851 0
 515 0098 0126     		movs	r6, #1
 516 009a BEE7     		b	.L30
 517              	.LVL67:
 518              	.L40:
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 519              		.loc 1 1863 0
 520 009c 88F80F90 		strb	r9, [r8, #15]
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.Date = day;
 521              		.loc 1 1866 0
 522 00a0 E1B2     		uxtb	r1, r4
 523 00a2 88F80D10 		strb	r1, [r8, #13]
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 524              		.loc 1 1867 0
 525 00a6 F2B2     		uxtb	r2, r6
 526 00a8 88F80E20 		strb	r2, [r8, #14]
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 527              		.loc 1 1870 0
 528 00ac 4846     		mov	r0, r9
 529 00ae FFF7FEFF 		bl	RTC_WeekDayNum
 530              	.LVL68:
 531 00b2 88F80C00 		strb	r0, [r8, #12]
 532 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 533              		.cfi_endproc
 534              	.LFE90:
 536              		.section	.text.RTC_EnterInitMode,"ax",%progbits
ARM GAS  /tmp/ccGDryUz.s 			page 45


 537              		.align	1
 538              		.syntax unified
 539              		.thumb
 540              		.thumb_func
 541              		.fpu softvfp
 543              	RTC_EnterInitMode:
 544              	.LFB86:
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 545              		.loc 1 1701 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              	.LVL69:
 550 0000 38B5     		push	{r3, r4, r5, lr}
 551              	.LCFI7:
 552              		.cfi_def_cfa_offset 16
 553              		.cfi_offset 3, -16
 554              		.cfi_offset 4, -12
 555              		.cfi_offset 5, -8
 556              		.cfi_offset 14, -4
 557 0002 0446     		mov	r4, r0
 558              	.LVL70:
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait till RTC is in INIT state and if Time out is reached exit */
 559              		.loc 1 1704 0
 560 0004 FFF7FEFF 		bl	HAL_GetTick
 561              	.LVL71:
 562 0008 0546     		mov	r5, r0
 563              	.LVL72:
 564              	.L43:
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 565              		.loc 1 1706 0
 566 000a 2368     		ldr	r3, [r4]
 567 000c 5A68     		ldr	r2, [r3, #4]
 568 000e 12F0200F 		tst	r2, #32
 569 0012 07D1     		bne	.L48
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 570              		.loc 1 1708 0
 571 0014 FFF7FEFF 		bl	HAL_GetTick
 572              	.LVL73:
 573 0018 401B     		subs	r0, r0, r5
 574 001a B0F57A7F 		cmp	r0, #1000
 575 001e F4D9     		bls	.L43
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 576              		.loc 1 1710 0
 577 0020 0320     		movs	r0, #3
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 578              		.loc 1 1719 0
 579 0022 38BD     		pop	{r3, r4, r5, pc}
 580              	.LVL74:
 581              	.L48:
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 582              		.loc 1 1715 0
 583 0024 5A68     		ldr	r2, [r3, #4]
 584 0026 42F01002 		orr	r2, r2, #16
 585 002a 5A60     		str	r2, [r3, #4]
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 586              		.loc 1 1718 0
ARM GAS  /tmp/ccGDryUz.s 			page 46


 587 002c 0020     		movs	r0, #0
 588 002e 38BD     		pop	{r3, r4, r5, pc}
 589              		.cfi_endproc
 590              	.LFE86:
 592              		.section	.text.RTC_ExitInitMode,"ax",%progbits
 593              		.align	1
 594              		.syntax unified
 595              		.thumb
 596              		.thumb_func
 597              		.fpu softvfp
 599              	RTC_ExitInitMode:
 600              	.LFB87:
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 601              		.loc 1 1728 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              	.LVL75:
 606 0000 38B5     		push	{r3, r4, r5, lr}
 607              	.LCFI8:
 608              		.cfi_def_cfa_offset 16
 609              		.cfi_offset 3, -16
 610              		.cfi_offset 4, -12
 611              		.cfi_offset 5, -8
 612              		.cfi_offset 14, -4
 613 0002 0446     		mov	r4, r0
 614              	.LVL76:
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 615              		.loc 1 1732 0
 616 0004 0268     		ldr	r2, [r0]
 617 0006 5368     		ldr	r3, [r2, #4]
 618 0008 23F01003 		bic	r3, r3, #16
 619 000c 5360     		str	r3, [r2, #4]
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait till RTC is in INIT state and if Time out is reached exit */
 620              		.loc 1 1734 0
 621 000e FFF7FEFF 		bl	HAL_GetTick
 622              	.LVL77:
 623 0012 0546     		mov	r5, r0
 624              	.LVL78:
 625              	.L50:
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 626              		.loc 1 1736 0
 627 0014 2368     		ldr	r3, [r4]
 628 0016 5B68     		ldr	r3, [r3, #4]
 629 0018 13F0200F 		tst	r3, #32
 630 001c 07D1     		bne	.L55
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 631              		.loc 1 1738 0
 632 001e FFF7FEFF 		bl	HAL_GetTick
 633              	.LVL79:
 634 0022 401B     		subs	r0, r0, r5
 635 0024 B0F57A7F 		cmp	r0, #1000
 636 0028 F4D9     		bls	.L50
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 637              		.loc 1 1740 0
 638 002a 0320     		movs	r0, #3
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  /tmp/ccGDryUz.s 			page 47


 639              		.loc 1 1745 0
 640 002c 38BD     		pop	{r3, r4, r5, pc}
 641              	.LVL80:
 642              	.L55:
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 643              		.loc 1 1744 0
 644 002e 0020     		movs	r0, #0
 645 0030 38BD     		pop	{r3, r4, r5, pc}
 646              		.cfi_endproc
 647              	.LFE87:
 649              		.section	.text.RTC_WriteTimeCounter,"ax",%progbits
 650              		.align	1
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 654              		.fpu softvfp
 656              	RTC_WriteTimeCounter:
 657              	.LFB83:
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 658              		.loc 1 1620 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              	.LVL81:
 663 0000 38B5     		push	{r3, r4, r5, lr}
 664              	.LCFI9:
 665              		.cfi_def_cfa_offset 16
 666              		.cfi_offset 3, -16
 667              		.cfi_offset 4, -12
 668              		.cfi_offset 5, -8
 669              		.cfi_offset 14, -4
 670 0002 0546     		mov	r5, r0
 671 0004 0C46     		mov	r4, r1
 672              	.LVL82:
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 673              		.loc 1 1624 0
 674 0006 FFF7FEFF 		bl	RTC_EnterInitMode
 675              	.LVL83:
 676 000a 10B1     		cbz	r0, .L61
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 677              		.loc 1 1626 0
 678 000c 0123     		movs	r3, #1
 679              	.LVL84:
 680              	.L57:
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 681              		.loc 1 1643 0
 682 000e 1846     		mov	r0, r3
 683 0010 38BD     		pop	{r3, r4, r5, pc}
 684              	.LVL85:
 685              	.L61:
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER LSB word */
 686              		.loc 1 1631 0
 687 0012 2B68     		ldr	r3, [r5]
 688 0014 220C     		lsrs	r2, r4, #16
 689 0016 9A61     		str	r2, [r3, #24]
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 690              		.loc 1 1633 0
ARM GAS  /tmp/ccGDryUz.s 			page 48


 691 0018 2B68     		ldr	r3, [r5]
 692 001a A4B2     		uxth	r4, r4
 693              	.LVL86:
 694 001c DC61     		str	r4, [r3, #28]
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 695              		.loc 1 1636 0
 696 001e 2846     		mov	r0, r5
 697 0020 FFF7FEFF 		bl	RTC_ExitInitMode
 698              	.LVL87:
 699 0024 0346     		mov	r3, r0
 700 0026 0028     		cmp	r0, #0
 701 0028 F1D0     		beq	.L57
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 702              		.loc 1 1638 0
 703 002a 0123     		movs	r3, #1
 704 002c EFE7     		b	.L57
 705              		.cfi_endproc
 706              	.LFE83:
 708              		.section	.text.RTC_WriteAlarmCounter,"ax",%progbits
 709              		.align	1
 710              		.syntax unified
 711              		.thumb
 712              		.thumb_func
 713              		.fpu softvfp
 715              	RTC_WriteAlarmCounter:
 716              	.LFB85:
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 717              		.loc 1 1669 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              	.LVL88:
 722 0000 38B5     		push	{r3, r4, r5, lr}
 723              	.LCFI10:
 724              		.cfi_def_cfa_offset 16
 725              		.cfi_offset 3, -16
 726              		.cfi_offset 4, -12
 727              		.cfi_offset 5, -8
 728              		.cfi_offset 14, -4
 729 0002 0546     		mov	r5, r0
 730 0004 0C46     		mov	r4, r1
 731              	.LVL89:
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 732              		.loc 1 1673 0
 733 0006 FFF7FEFF 		bl	RTC_EnterInitMode
 734              	.LVL90:
 735 000a 10B1     		cbz	r0, .L67
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 736              		.loc 1 1675 0
 737 000c 0123     		movs	r3, #1
 738              	.LVL91:
 739              	.L63:
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 740              		.loc 1 1692 0
 741 000e 1846     		mov	r0, r3
 742 0010 38BD     		pop	{r3, r4, r5, pc}
 743              	.LVL92:
ARM GAS  /tmp/ccGDryUz.s 			page 49


 744              	.L67:
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER LSB word */
 745              		.loc 1 1680 0
 746 0012 2B68     		ldr	r3, [r5]
 747 0014 220C     		lsrs	r2, r4, #16
 748 0016 1A62     		str	r2, [r3, #32]
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 749              		.loc 1 1682 0
 750 0018 2B68     		ldr	r3, [r5]
 751 001a A4B2     		uxth	r4, r4
 752              	.LVL93:
 753 001c 5C62     		str	r4, [r3, #36]
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 754              		.loc 1 1685 0
 755 001e 2846     		mov	r0, r5
 756 0020 FFF7FEFF 		bl	RTC_ExitInitMode
 757              	.LVL94:
 758 0024 0346     		mov	r3, r0
 759 0026 0028     		cmp	r0, #0
 760 0028 F1D0     		beq	.L63
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 761              		.loc 1 1687 0
 762 002a 0123     		movs	r3, #1
 763 002c EFE7     		b	.L63
 764              		.cfi_endproc
 765              	.LFE85:
 767              		.section	.text.HAL_RTC_MspInit,"ax",%progbits
 768              		.align	1
 769              		.weak	HAL_RTC_MspInit
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 773              		.fpu softvfp
 775              	HAL_RTC_MspInit:
 776              	.LFB67:
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 777              		.loc 1 651 0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              		@ link register save eliminated.
 782              	.LVL95:
 783 0000 7047     		bx	lr
 784              		.cfi_endproc
 785              	.LFE67:
 787              		.section	.text.HAL_RTC_MspDeInit,"ax",%progbits
 788              		.align	1
 789              		.weak	HAL_RTC_MspDeInit
 790              		.syntax unified
 791              		.thumb
 792              		.thumb_func
 793              		.fpu softvfp
 795              	HAL_RTC_MspDeInit:
 796              	.LFB68:
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 797              		.loc 1 666 0
 798              		.cfi_startproc
ARM GAS  /tmp/ccGDryUz.s 			page 50


 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LVL96:
 803 0000 7047     		bx	lr
 804              		.cfi_endproc
 805              	.LFE68:
 807              		.section	.text.HAL_RTC_SetTime,"ax",%progbits
 808              		.align	1
 809              		.global	HAL_RTC_SetTime
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 813              		.fpu softvfp
 815              	HAL_RTC_SetTime:
 816              	.LFB69:
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U;
 817              		.loc 1 704 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              	.LVL97:
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U;
 822              		.loc 1 704 0
 823 0000 70B5     		push	{r4, r5, r6, lr}
 824              	.LCFI11:
 825              		.cfi_def_cfa_offset 16
 826              		.cfi_offset 4, -16
 827              		.cfi_offset 5, -12
 828              		.cfi_offset 6, -8
 829              		.cfi_offset 14, -4
 830              	.LVL98:
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 831              		.loc 1 708 0
 832 0002 0028     		cmp	r0, #0
 833 0004 56D0     		beq	.L76
 834 0006 0446     		mov	r4, r0
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 835              		.loc 1 708 0 is_stmt 0 discriminator 1
 836 0008 0029     		cmp	r1, #0
 837 000a 55D0     		beq	.L77
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 838              		.loc 1 717 0 is_stmt 1
 839 000c 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 840 000e 012B     		cmp	r3, #1
 841 0010 54D0     		beq	.L78
 842 0012 0E46     		mov	r6, r1
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 843              		.loc 1 717 0 is_stmt 0 discriminator 2
 844 0014 0123     		movs	r3, #1
 845 0016 0374     		strb	r3, [r0, #16]
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 846              		.loc 1 719 0 is_stmt 1 discriminator 2
 847 0018 0223     		movs	r3, #2
 848 001a 4374     		strb	r3, [r0, #17]
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 849              		.loc 1 721 0 discriminator 2
ARM GAS  /tmp/ccGDryUz.s 			page 51


 850 001c B2B9     		cbnz	r2, .L72
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                               ((uint32_t)sTime->Minutes * 60U) + \
 851              		.loc 1 727 0
 852 001e 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                               ((uint32_t)sTime->Seconds));
 853              		.loc 1 728 0
 854 0020 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 855 0022 C3EB0313 		rsb	r3, r3, r3, lsl #4
 856 0026 9A00     		lsls	r2, r3, #2
 857              	.LVL99:
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                               ((uint32_t)sTime->Minutes * 60U) + \
 858              		.loc 1 727 0
 859 0028 4FF46163 		mov	r3, #3600
 860 002c 03FB0525 		mla	r5, r3, r5, r2
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 861              		.loc 1 729 0
 862 0030 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                               ((uint32_t)sTime->Minutes * 60U) + \
 863              		.loc 1 727 0
 864 0032 1D44     		add	r5, r5, r3
 865              	.LVL100:
 866              	.L73:
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 867              		.loc 1 743 0
 868 0034 2946     		mov	r1, r5
 869 0036 2046     		mov	r0, r4
 870 0038 FFF7FEFF 		bl	RTC_WriteTimeCounter
 871              	.LVL101:
 872 003c 0646     		mov	r6, r0
 873              	.LVL102:
 874 003e C0B1     		cbz	r0, .L74
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 875              		.loc 1 746 0
 876 0040 0423     		movs	r3, #4
 877 0042 6374     		strb	r3, [r4, #17]
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 878              		.loc 1 749 0
 879 0044 0023     		movs	r3, #0
 880 0046 2374     		strb	r3, [r4, #16]
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 881              		.loc 1 751 0
 882 0048 0126     		movs	r6, #1
 883 004a 38E0     		b	.L71
 884              	.LVL103:
 885              	.L72:
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                     ((uint32_t)(RTC_Bcd2ToByte(sTime->Minutes)) * 60U) + \
 886              		.loc 1 737 0
 887 004c 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 888              	.LVL104:
 889 004e FFF7FEFF 		bl	RTC_Bcd2ToByte
 890              	.LVL105:
 891 0052 4FF46165 		mov	r5, #3600
 892 0056 05FB00F5 		mul	r5, r5, r0
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                     ((uint32_t)(RTC_Bcd2ToByte(sTime->Seconds))));
 893              		.loc 1 738 0
 894 005a 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 895 005c FFF7FEFF 		bl	RTC_Bcd2ToByte
ARM GAS  /tmp/ccGDryUz.s 			page 52


 896              	.LVL106:
 897 0060 C0EB0010 		rsb	r0, r0, r0, lsl #4
 898 0064 8300     		lsls	r3, r0, #2
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                     ((uint32_t)(RTC_Bcd2ToByte(sTime->Minutes)) * 60U) + \
 899              		.loc 1 737 0
 900 0066 1D44     		add	r5, r5, r3
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 901              		.loc 1 739 0
 902 0068 B078     		ldrb	r0, [r6, #2]	@ zero_extendqisi2
 903 006a FFF7FEFF 		bl	RTC_Bcd2ToByte
 904              	.LVL107:
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                     ((uint32_t)(RTC_Bcd2ToByte(sTime->Minutes)) * 60U) + \
 905              		.loc 1 737 0
 906 006e 0544     		add	r5, r5, r0
 907              	.LVL108:
 908 0070 E0E7     		b	.L73
 909              	.LVL109:
 910              	.L74:
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 911              		.loc 1 756 0
 912 0072 2268     		ldr	r2, [r4]
 913 0074 5368     		ldr	r3, [r2, #4]
 914 0076 23F00503 		bic	r3, r3, #5
 915 007a 5360     		str	r3, [r2, #4]
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 916              		.loc 1 759 0
 917 007c 2046     		mov	r0, r4
 918 007e FFF7FEFF 		bl	RTC_ReadAlarmCounter
 919              	.LVL110:
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 920              		.loc 1 762 0
 921 0082 B0F1FF3F 		cmp	r0, #-1
 922 0086 01D0     		beq	.L75
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 923              		.loc 1 764 0
 924 0088 8542     		cmp	r5, r0
 925 008a 04D8     		bhi	.L80
 926              	.LVL111:
 927              	.L75:
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 928              		.loc 1 783 0
 929 008c 0123     		movs	r3, #1
 930 008e 6374     		strb	r3, [r4, #17]
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 931              		.loc 1 785 0
 932 0090 0023     		movs	r3, #0
 933 0092 2374     		strb	r3, [r4, #16]
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 934              		.loc 1 787 0
 935 0094 13E0     		b	.L71
 936              	.LVL112:
 937              	.L80:
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 938              		.loc 1 770 0
 939 0096 00F5A831 		add	r1, r0, #86016
 940 009a 01F5C071 		add	r1, r1, #384
 941 009e 2046     		mov	r0, r4
ARM GAS  /tmp/ccGDryUz.s 			page 53


 942              	.LVL113:
 943 00a0 FFF7FEFF 		bl	RTC_WriteAlarmCounter
 944              	.LVL114:
 945 00a4 0028     		cmp	r0, #0
 946 00a6 F1D0     		beq	.L75
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 947              		.loc 1 773 0
 948 00a8 0423     		movs	r3, #4
 949 00aa 6374     		strb	r3, [r4, #17]
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 950              		.loc 1 776 0
 951 00ac 0023     		movs	r3, #0
 952 00ae 2374     		strb	r3, [r4, #16]
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 953              		.loc 1 778 0
 954 00b0 0126     		movs	r6, #1
 955 00b2 04E0     		b	.L71
 956              	.LVL115:
 957              	.L76:
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 958              		.loc 1 710 0
 959 00b4 0126     		movs	r6, #1
 960 00b6 02E0     		b	.L71
 961              	.L77:
 962 00b8 0126     		movs	r6, #1
 963 00ba 00E0     		b	.L71
 964              	.L78:
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 965              		.loc 1 717 0
 966 00bc 0226     		movs	r6, #2
 967              	.LVL116:
 968              	.L71:
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 969              		.loc 1 789 0
 970 00be 3046     		mov	r0, r6
 971 00c0 70BD     		pop	{r4, r5, r6, pc}
 972              		.cfi_endproc
 973              	.LFE69:
 975              		.section	.text.HAL_RTC_GetTime,"ax",%progbits
 976              		.align	1
 977              		.global	HAL_RTC_GetTime
 978              		.syntax unified
 979              		.thumb
 980              		.thumb_func
 981              		.fpu softvfp
 983              	HAL_RTC_GetTime:
 984              	.LFB70:
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, days_elapsed = 0U, hours = 0U;
 985              		.loc 1 803 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              	.LVL117:
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 990              		.loc 1 807 0
 991 0000 0028     		cmp	r0, #0
 992 0002 77D0     		beq	.L88
ARM GAS  /tmp/ccGDryUz.s 			page 54


 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, days_elapsed = 0U, hours = 0U;
 993              		.loc 1 803 0 discriminator 1
 994 0004 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 995              	.LCFI12:
 996              		.cfi_def_cfa_offset 32
 997              		.cfi_offset 4, -32
 998              		.cfi_offset 5, -28
 999              		.cfi_offset 6, -24
 1000              		.cfi_offset 7, -20
 1001              		.cfi_offset 8, -16
 1002              		.cfi_offset 9, -12
 1003              		.cfi_offset 10, -8
 1004              		.cfi_offset 14, -4
 1005 0008 0546     		mov	r5, r0
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1006              		.loc 1 807 0 discriminator 1
 1007 000a 0029     		cmp	r1, #0
 1008 000c 74D0     		beq	.L89
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1009              		.loc 1 816 0
 1010 000e 0368     		ldr	r3, [r0]
 1011 0010 5B68     		ldr	r3, [r3, #4]
 1012 0012 13F0040F 		tst	r3, #4
 1013 0016 02D0     		beq	.L100
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1014              		.loc 1 818 0
 1015 0018 0120     		movs	r0, #1
 1016              	.LVL118:
 1017 001a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1018              	.LVL119:
 1019              	.L100:
 1020 001e 1646     		mov	r6, r2
 1021 0020 0C46     		mov	r4, r1
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1022              		.loc 1 822 0
 1023 0022 FFF7FEFF 		bl	RTC_ReadTimeCounter
 1024              	.LVL120:
 1025 0026 0746     		mov	r7, r0
 1026              	.LVL121:
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sTime->Minutes  = (uint8_t)((counter_time % 3600U) / 60U);
 1027              		.loc 1 825 0
 1028 0028 394A     		ldr	r2, .L103
 1029 002a A2FB0032 		umull	r3, r2, r2, r0
 1030 002e D20A     		lsrs	r2, r2, #11
 1031              	.LVL122:
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sTime->Seconds  = (uint8_t)((counter_time % 3600U) % 60U);
 1032              		.loc 1 826 0
 1033 0030 4FF46160 		mov	r0, #3600
 1034              	.LVL123:
 1035 0034 00FB1270 		mls	r0, r0, r2, r7
 1036 0038 364B     		ldr	r3, .L103+4
 1037 003a A3FB0013 		umull	r1, r3, r3, r0
 1038 003e 5B09     		lsrs	r3, r3, #5
 1039 0040 6370     		strb	r3, [r4, #1]
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1040              		.loc 1 827 0
 1041 0042 C3EB0313 		rsb	r3, r3, r3, lsl #4
ARM GAS  /tmp/ccGDryUz.s 			page 55


 1042 0046 9900     		lsls	r1, r3, #2
 1043 0048 411A     		subs	r1, r0, r1
 1044 004a A170     		strb	r1, [r4, #2]
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1045              		.loc 1 829 0
 1046 004c 172A     		cmp	r2, #23
 1047 004e 11D8     		bhi	.L101
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1048              		.loc 1 886 0
 1049 0050 2270     		strb	r2, [r4]
 1050              	.LVL124:
 1051              	.L87:
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1052              		.loc 1 890 0
 1053 0052 002E     		cmp	r6, #0
 1054 0054 59D0     		beq	.L95
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Minutes  = (uint8_t)RTC_ByteToBcd2(sTime->Minutes);
 1055              		.loc 1 893 0
 1056 0056 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1057 0058 FFF7FEFF 		bl	RTC_ByteToBcd2
 1058              	.LVL125:
 1059 005c 2070     		strb	r0, [r4]
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Seconds  = (uint8_t)RTC_ByteToBcd2(sTime->Seconds);
 1060              		.loc 1 894 0
 1061 005e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1062 0060 FFF7FEFF 		bl	RTC_ByteToBcd2
 1063              	.LVL126:
 1064 0064 6070     		strb	r0, [r4, #1]
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1065              		.loc 1 895 0
 1066 0066 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 1067 0068 FFF7FEFF 		bl	RTC_ByteToBcd2
 1068              	.LVL127:
 1069 006c A070     		strb	r0, [r4, #2]
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1070              		.loc 1 898 0
 1071 006e 0020     		movs	r0, #0
 1072 0070 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1073              	.LVL128:
 1074              	.L101:
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1075              		.loc 1 832 0
 1076 0074 284B     		ldr	r3, .L103+8
 1077 0076 A3FB0738 		umull	r3, r8, r3, r7
 1078 007a 4FEA1848 		lsr	r8, r8, #16
 1079              	.LVL129:
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1080              		.loc 1 835 0
 1081 007e 274B     		ldr	r3, .L103+12
 1082 0080 A3FB0213 		umull	r1, r3, r3, r2
 1083 0084 1B09     		lsrs	r3, r3, #4
 1084 0086 03EB4303 		add	r3, r3, r3, lsl #1
 1085 008a D900     		lsls	r1, r3, #3
 1086 008c 531A     		subs	r3, r2, r1
 1087 008e 2370     		strb	r3, [r4]
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1088              		.loc 1 838 0
ARM GAS  /tmp/ccGDryUz.s 			page 56


 1089 0090 2846     		mov	r0, r5
 1090 0092 FFF7FEFF 		bl	RTC_ReadAlarmCounter
 1091              	.LVL130:
 1092 0096 8246     		mov	r10, r0
 1093              	.LVL131:
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1094              		.loc 1 841 0
 1095 0098 B0F1FF3F 		cmp	r0, #-1
 1096 009c 03D0     		beq	.L84
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1097              		.loc 1 841 0 is_stmt 0 discriminator 1
 1098 009e 8742     		cmp	r7, r0
 1099 00a0 1CD2     		bcs	.L91
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 1100              		.loc 1 843 0 is_stmt 1
 1101 00a2 A0EB070A 		sub	r10, r0, r7
 1102              	.LVL132:
 1103              	.L84:
 1104 00a6 1C4B     		ldr	r3, .L103+8
 1105 00a8 A3FB0739 		umull	r3, r9, r3, r7
 1106 00ac 4FEA1949 		lsr	r9, r9, #16
 1107 00b0 1B4B     		ldr	r3, .L103+16
 1108 00b2 03FB1979 		mls	r9, r3, r9, r7
 1109              	.LVL133:
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1110              		.loc 1 856 0
 1111 00b6 4946     		mov	r1, r9
 1112 00b8 2846     		mov	r0, r5
 1113 00ba FFF7FEFF 		bl	RTC_WriteTimeCounter
 1114              	.LVL134:
 1115 00be F0B9     		cbnz	r0, .L92
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1116              		.loc 1 862 0
 1117 00c0 BAF1FF3F 		cmp	r10, #-1
 1118 00c4 0DD0     		beq	.L85
 1119              	.LVL135:
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 1120              		.loc 1 867 0
 1121 00c6 0AEB0901 		add	r1, r10, r9
 1122              	.LVL136:
 1123 00ca 2846     		mov	r0, r5
 1124 00cc FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1125              	.LVL137:
 1126 00d0 C0B9     		cbnz	r0, .L102
 1127              	.LVL138:
 1128              	.L86:
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1129              		.loc 1 882 0
 1130 00d2 4146     		mov	r1, r8
 1131 00d4 2846     		mov	r0, r5
 1132 00d6 FFF7FEFF 		bl	RTC_DateUpdate
 1133              	.LVL139:
 1134 00da BAE7     		b	.L87
 1135              	.LVL140:
 1136              	.L91:
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 1137              		.loc 1 849 0
ARM GAS  /tmp/ccGDryUz.s 			page 57


 1138 00dc 4FF0FF3A 		mov	r10, #-1
 1139 00e0 E1E7     		b	.L84
 1140              	.LVL141:
 1141              	.L85:
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 1142              		.loc 1 875 0
 1143 00e2 5146     		mov	r1, r10
 1144 00e4 2846     		mov	r0, r5
 1145 00e6 FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1146              	.LVL142:
 1147 00ea 0028     		cmp	r0, #0
 1148 00ec F1D0     		beq	.L86
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 1149              		.loc 1 877 0
 1150 00ee 0120     		movs	r0, #1
 1151 00f0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1152              	.LVL143:
 1153              	.L88:
 1154              	.LCFI13:
 1155              		.cfi_def_cfa_offset 0
 1156              		.cfi_restore 4
 1157              		.cfi_restore 5
 1158              		.cfi_restore 6
 1159              		.cfi_restore 7
 1160              		.cfi_restore 8
 1161              		.cfi_restore 9
 1162              		.cfi_restore 10
 1163              		.cfi_restore 14
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1164              		.loc 1 809 0
 1165 00f4 0120     		movs	r0, #1
 1166              	.LVL144:
 1167 00f6 7047     		bx	lr
 1168              	.LVL145:
 1169              	.L89:
 1170              	.LCFI14:
 1171              		.cfi_def_cfa_offset 32
 1172              		.cfi_offset 4, -32
 1173              		.cfi_offset 5, -28
 1174              		.cfi_offset 6, -24
 1175              		.cfi_offset 7, -20
 1176              		.cfi_offset 8, -16
 1177              		.cfi_offset 9, -12
 1178              		.cfi_offset 10, -8
 1179              		.cfi_offset 14, -4
 1180 00f8 0120     		movs	r0, #1
 1181              	.LVL146:
 1182 00fa BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1183              	.LVL147:
 1184              	.L92:
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 1185              		.loc 1 858 0
 1186 00fe 0120     		movs	r0, #1
 1187 0100 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1188              	.LVL148:
 1189              	.L102:
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
ARM GAS  /tmp/ccGDryUz.s 			page 58


 1190              		.loc 1 869 0
 1191 0104 0120     		movs	r0, #1
 1192 0106 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1193              	.LVL149:
 1194              	.L95:
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1195              		.loc 1 898 0
 1196 010a 0020     		movs	r0, #0
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1197              		.loc 1 899 0
 1198 010c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1199              	.LVL150:
 1200              	.L104:
 1201              		.align	2
 1202              	.L103:
 1203 0110 C5B3A291 		.word	-1851608123
 1204 0114 89888888 		.word	-2004318071
 1205 0118 07452EC2 		.word	-1037155065
 1206 011c ABAAAAAA 		.word	-1431655765
 1207 0120 80510100 		.word	86400
 1208              		.cfi_endproc
 1209              	.LFE70:
 1211              		.section	.text.HAL_RTC_SetDate,"ax",%progbits
 1212              		.align	1
 1213              		.global	HAL_RTC_SetDate
 1214              		.syntax unified
 1215              		.thumb
 1216              		.thumb_func
 1217              		.fpu softvfp
 1219              	HAL_RTC_SetDate:
 1220              	.LFB71:
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, hours = 0U;
 1221              		.loc 1 914 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 0
 1224              		@ frame_needed = 0, uses_anonymous_args = 0
 1225              	.LVL151:
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1226              		.loc 1 918 0
 1227 0000 0028     		cmp	r0, #0
 1228 0002 5DD0     		beq	.L111
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, hours = 0U;
 1229              		.loc 1 914 0 discriminator 1
 1230 0004 38B5     		push	{r3, r4, r5, lr}
 1231              	.LCFI15:
 1232              		.cfi_def_cfa_offset 16
 1233              		.cfi_offset 3, -16
 1234              		.cfi_offset 4, -12
 1235              		.cfi_offset 5, -8
 1236              		.cfi_offset 14, -4
 1237 0006 0446     		mov	r4, r0
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1238              		.loc 1 918 0 discriminator 1
 1239 0008 0029     		cmp	r1, #0
 1240 000a 5BD0     		beq	.L112
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1241              		.loc 1 927 0
ARM GAS  /tmp/ccGDryUz.s 			page 59


 1242 000c 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 1243 000e 012B     		cmp	r3, #1
 1244 0010 5AD0     		beq	.L113
 1245 0012 0D46     		mov	r5, r1
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1246              		.loc 1 927 0 is_stmt 0 discriminator 2
 1247 0014 0123     		movs	r3, #1
 1248 0016 0374     		strb	r3, [r0, #16]
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1249              		.loc 1 929 0 is_stmt 1 discriminator 2
 1250 0018 0223     		movs	r3, #2
 1251 001a 4374     		strb	r3, [r0, #17]
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1252              		.loc 1 931 0 discriminator 2
 1253 001c D2B9     		cbnz	r2, .L107
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = sDate->Month;
 1254              		.loc 1 938 0
 1255 001e CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 1256 0020 C373     		strb	r3, [r0, #15]
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date  = sDate->Date;
 1257              		.loc 1 939 0
 1258 0022 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1259 0024 4373     		strb	r3, [r0, #13]
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1260              		.loc 1 940 0
 1261 0026 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 1262 0028 8373     		strb	r3, [r0, #14]
 1263              	.LVL152:
 1264              	.L108:
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->WeekDay = hrtc->DateToUpdate.WeekDay;
 1265              		.loc 1 955 0
 1266 002a A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 1267 002c 617B     		ldrb	r1, [r4, #13]	@ zero_extendqisi2
 1268 002e E07B     		ldrb	r0, [r4, #15]	@ zero_extendqisi2
 1269 0030 FFF7FEFF 		bl	RTC_WeekDayNum
 1270              	.LVL153:
 1271 0034 2073     		strb	r0, [r4, #12]
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1272              		.loc 1 956 0
 1273 0036 2870     		strb	r0, [r5]
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1274              		.loc 1 960 0
 1275 0038 2046     		mov	r0, r4
 1276 003a FFF7FEFF 		bl	RTC_ReadTimeCounter
 1277              	.LVL154:
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hours > 24U)
 1278              		.loc 1 963 0
 1279 003e 234B     		ldr	r3, .L119
 1280 0040 A3FB0023 		umull	r2, r3, r3, r0
 1281              	.LVL155:
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1282              		.loc 1 964 0
 1283 0044 B3F5484F 		cmp	r3, #51200
 1284 0048 11D2     		bcs	.L118
 1285              	.LVL156:
 1286              	.L109:
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  /tmp/ccGDryUz.s 			page 60


 1287              		.loc 1 1008 0
 1288 004a 0123     		movs	r3, #1
 1289 004c 6374     		strb	r3, [r4, #17]
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1290              		.loc 1 1011 0
 1291 004e 0020     		movs	r0, #0
 1292 0050 2074     		strb	r0, [r4, #16]
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1293              		.loc 1 1013 0
 1294 0052 38BD     		pop	{r3, r4, r5, pc}
 1295              	.LVL157:
 1296              	.L107:
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = RTC_Bcd2ToByte(sDate->Month);
 1297              		.loc 1 949 0
 1298 0054 C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 1299              	.LVL158:
 1300 0056 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1301              	.LVL159:
 1302 005a E073     		strb	r0, [r4, #15]
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date  = RTC_Bcd2ToByte(sDate->Date);
 1303              		.loc 1 950 0
 1304 005c 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1305 005e FFF7FEFF 		bl	RTC_Bcd2ToByte
 1306              	.LVL160:
 1307 0062 6073     		strb	r0, [r4, #13]
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1308              		.loc 1 951 0
 1309 0064 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1310 0066 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1311              	.LVL161:
 1312 006a A073     		strb	r0, [r4, #14]
 1313 006c DDE7     		b	.L108
 1314              	.LVL162:
 1315              	.L118:
 1316 006e 184D     		ldr	r5, .L119+4
 1317              	.LVL163:
 1318 0070 A5FB0035 		umull	r3, r5, r5, r0
 1319              	.LVL164:
 1320 0074 2D0C     		lsrs	r5, r5, #16
 1321 0076 174B     		ldr	r3, .L119+8
 1322 0078 03FB1505 		mls	r5, r3, r5, r0
 1323              	.LVL165:
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1324              		.loc 1 969 0
 1325 007c 2946     		mov	r1, r5
 1326 007e 2046     		mov	r0, r4
 1327              	.LVL166:
 1328 0080 FFF7FEFF 		bl	RTC_WriteTimeCounter
 1329              	.LVL167:
 1330 0084 28B1     		cbz	r0, .L110
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1331              		.loc 1 972 0
 1332 0086 0423     		movs	r3, #4
 1333 0088 6374     		strb	r3, [r4, #17]
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1334              		.loc 1 975 0
 1335 008a 0023     		movs	r3, #0
ARM GAS  /tmp/ccGDryUz.s 			page 61


 1336 008c 2374     		strb	r3, [r4, #16]
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 1337              		.loc 1 977 0
 1338 008e 0120     		movs	r0, #1
 1339 0090 38BD     		pop	{r3, r4, r5, pc}
 1340              	.LVL168:
 1341              	.L110:
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1342              		.loc 1 981 0
 1343 0092 2046     		mov	r0, r4
 1344 0094 FFF7FEFF 		bl	RTC_ReadAlarmCounter
 1345              	.LVL169:
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1346              		.loc 1 984 0
 1347 0098 B0F1FF3F 		cmp	r0, #-1
 1348 009c D5D0     		beq	.L109
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 1349              		.loc 1 986 0
 1350 009e 8542     		cmp	r5, r0
 1351 00a0 D3D9     		bls	.L109
 1352              	.LVL170:
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 1353              		.loc 1 992 0
 1354 00a2 00F5A831 		add	r1, r0, #86016
 1355 00a6 01F5C071 		add	r1, r1, #384
 1356 00aa 2046     		mov	r0, r4
 1357              	.LVL171:
 1358 00ac FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1359              	.LVL172:
 1360 00b0 0028     		cmp	r0, #0
 1361 00b2 CAD0     		beq	.L109
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1362              		.loc 1 995 0
 1363 00b4 0423     		movs	r3, #4
 1364 00b6 6374     		strb	r3, [r4, #17]
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1365              		.loc 1 998 0
 1366 00b8 0023     		movs	r3, #0
 1367 00ba 2374     		strb	r3, [r4, #16]
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 1368              		.loc 1 1000 0
 1369 00bc 0120     		movs	r0, #1
 1370 00be 38BD     		pop	{r3, r4, r5, pc}
 1371              	.LVL173:
 1372              	.L111:
 1373              	.LCFI16:
 1374              		.cfi_def_cfa_offset 0
 1375              		.cfi_restore 3
 1376              		.cfi_restore 4
 1377              		.cfi_restore 5
 1378              		.cfi_restore 14
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1379              		.loc 1 920 0
 1380 00c0 0120     		movs	r0, #1
 1381              	.LVL174:
 1382 00c2 7047     		bx	lr
 1383              	.LVL175:
ARM GAS  /tmp/ccGDryUz.s 			page 62


 1384              	.L112:
 1385              	.LCFI17:
 1386              		.cfi_def_cfa_offset 16
 1387              		.cfi_offset 3, -16
 1388              		.cfi_offset 4, -12
 1389              		.cfi_offset 5, -8
 1390              		.cfi_offset 14, -4
 1391 00c4 0120     		movs	r0, #1
 1392              	.LVL176:
 1393 00c6 38BD     		pop	{r3, r4, r5, pc}
 1394              	.LVL177:
 1395              	.L113:
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1396              		.loc 1 927 0
 1397 00c8 0220     		movs	r0, #2
 1398              	.LVL178:
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1399              		.loc 1 1014 0
 1400 00ca 38BD     		pop	{r3, r4, r5, pc}
 1401              	.LVL179:
 1402              	.L120:
 1403              		.align	2
 1404              	.L119:
 1405 00cc C5B3A291 		.word	-1851608123
 1406 00d0 07452EC2 		.word	-1037155065
 1407 00d4 80510100 		.word	86400
 1408              		.cfi_endproc
 1409              	.LFE71:
 1411              		.section	.text.HAL_RTC_GetDate,"ax",%progbits
 1412              		.align	1
 1413              		.global	HAL_RTC_GetDate
 1414              		.syntax unified
 1415              		.thumb
 1416              		.thumb_func
 1417              		.fpu softvfp
 1419              	HAL_RTC_GetDate:
 1420              	.LFB72:
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   RTC_TimeTypeDef stime = {0U};
 1421              		.loc 1 1028 0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 8
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 1425              	.LVL180:
 1426 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1427              	.LCFI18:
 1428              		.cfi_def_cfa_offset 24
 1429              		.cfi_offset 4, -24
 1430              		.cfi_offset 5, -20
 1431              		.cfi_offset 6, -16
 1432              		.cfi_offset 7, -12
 1433              		.cfi_offset 8, -8
 1434              		.cfi_offset 14, -4
 1435 0004 82B0     		sub	sp, sp, #8
 1436              	.LCFI19:
 1437              		.cfi_def_cfa_offset 32
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1438              		.loc 1 1029 0
ARM GAS  /tmp/ccGDryUz.s 			page 63


 1439 0006 0023     		movs	r3, #0
 1440 0008 ADF80430 		strh	r3, [sp, #4]	@ movhi
 1441 000c 8DF80630 		strb	r3, [sp, #6]
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1442              		.loc 1 1032 0
 1443 0010 00B3     		cbz	r0, .L123
 1444 0012 0546     		mov	r5, r0
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1445              		.loc 1 1032 0 is_stmt 0 discriminator 1
 1446 0014 01B3     		cbz	r1, .L124
 1447 0016 1746     		mov	r7, r2
 1448 0018 0C46     		mov	r4, r1
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1449              		.loc 1 1041 0 is_stmt 1
 1450 001a 1A46     		mov	r2, r3
 1451              	.LVL181:
 1452 001c 01A9     		add	r1, sp, #4
 1453              	.LVL182:
 1454 001e FFF7FEFF 		bl	HAL_RTC_GetTime
 1455              	.LVL183:
 1456 0022 0646     		mov	r6, r0
 1457 0024 D0B9     		cbnz	r0, .L125
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Year     = hrtc->DateToUpdate.Year;
 1458              		.loc 1 1047 0
 1459 0026 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
 1460 0028 2370     		strb	r3, [r4]
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Month    = hrtc->DateToUpdate.Month;
 1461              		.loc 1 1048 0
 1462 002a E87B     		ldrb	r0, [r5, #15]	@ zero_extendqisi2
 1463 002c E070     		strb	r0, [r4, #3]
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Date     = hrtc->DateToUpdate.Date;
 1464              		.loc 1 1049 0
 1465 002e 95F80D80 		ldrb	r8, [r5, #13]	@ zero_extendqisi2
 1466 0032 84F80180 		strb	r8, [r4, #1]
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1467              		.loc 1 1050 0
 1468 0036 AD7B     		ldrb	r5, [r5, #14]	@ zero_extendqisi2
 1469              	.LVL184:
 1470 0038 A570     		strb	r5, [r4, #2]
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1471              		.loc 1 1053 0
 1472 003a 87B1     		cbz	r7, .L122
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Month  = (uint8_t)RTC_ByteToBcd2(sDate->Month);
 1473              		.loc 1 1056 0
 1474 003c FFF7FEFF 		bl	RTC_ByteToBcd2
 1475              	.LVL185:
 1476 0040 E070     		strb	r0, [r4, #3]
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Date   = (uint8_t)RTC_ByteToBcd2(sDate->Date);
 1477              		.loc 1 1057 0
 1478 0042 4046     		mov	r0, r8
 1479 0044 FFF7FEFF 		bl	RTC_ByteToBcd2
 1480              	.LVL186:
 1481 0048 6070     		strb	r0, [r4, #1]
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1482              		.loc 1 1058 0
 1483 004a 2846     		mov	r0, r5
 1484 004c FFF7FEFF 		bl	RTC_ByteToBcd2
ARM GAS  /tmp/ccGDryUz.s 			page 64


 1485              	.LVL187:
 1486 0050 A070     		strb	r0, [r4, #2]
 1487 0052 04E0     		b	.L122
 1488              	.LVL188:
 1489              	.L123:
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1490              		.loc 1 1034 0
 1491 0054 0126     		movs	r6, #1
 1492 0056 02E0     		b	.L122
 1493              	.L124:
 1494 0058 0126     		movs	r6, #1
 1495 005a 00E0     		b	.L122
 1496              	.LVL189:
 1497              	.L125:
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1498              		.loc 1 1043 0
 1499 005c 0126     		movs	r6, #1
 1500              	.LVL190:
 1501              	.L122:
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1502              		.loc 1 1061 0
 1503 005e 3046     		mov	r0, r6
 1504 0060 02B0     		add	sp, sp, #8
 1505              	.LCFI20:
 1506              		.cfi_def_cfa_offset 24
 1507              		@ sp needed
 1508 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1509              		.cfi_endproc
 1510              	.LFE72:
 1512              		.section	.text.HAL_RTC_SetAlarm,"ax",%progbits
 1513              		.align	1
 1514              		.global	HAL_RTC_SetAlarm
 1515              		.syntax unified
 1516              		.thumb
 1517              		.thumb_func
 1518              		.fpu softvfp
 1520              	HAL_RTC_SetAlarm:
 1521              	.LFB73:
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U, counter_time;
 1522              		.loc 1 1093 0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 8
 1525              		@ frame_needed = 0, uses_anonymous_args = 0
 1526              	.LVL191:
 1527 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1528              	.LCFI21:
 1529              		.cfi_def_cfa_offset 20
 1530              		.cfi_offset 4, -20
 1531              		.cfi_offset 5, -16
 1532              		.cfi_offset 6, -12
 1533              		.cfi_offset 7, -8
 1534              		.cfi_offset 14, -4
 1535 0002 83B0     		sub	sp, sp, #12
 1536              	.LCFI22:
 1537              		.cfi_def_cfa_offset 32
 1538              	.LVL192:
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  /tmp/ccGDryUz.s 			page 65


 1539              		.loc 1 1095 0
 1540 0004 0023     		movs	r3, #0
 1541 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 1542 000a 8DF80630 		strb	r3, [sp, #6]
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1543              		.loc 1 1098 0
 1544 000e 0028     		cmp	r0, #0
 1545 0010 59D0     		beq	.L133
 1546 0012 0546     		mov	r5, r0
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1547              		.loc 1 1098 0 is_stmt 0 discriminator 1
 1548 0014 0029     		cmp	r1, #0
 1549 0016 58D0     		beq	.L134
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1550              		.loc 1 1108 0 is_stmt 1
 1551 0018 007C     		ldrb	r0, [r0, #16]	@ zero_extendqisi2
 1552              	.LVL193:
 1553 001a 0128     		cmp	r0, #1
 1554 001c 03D1     		bne	.L138
 1555 001e 0223     		movs	r3, #2
 1556              	.LVL194:
 1557              	.L128:
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1558              		.loc 1 1170 0
 1559 0020 1846     		mov	r0, r3
 1560 0022 03B0     		add	sp, sp, #12
 1561              	.LCFI23:
 1562              		.cfi_remember_state
 1563              		.cfi_def_cfa_offset 20
 1564              		@ sp needed
 1565 0024 F0BD     		pop	{r4, r5, r6, r7, pc}
 1566              	.LVL195:
 1567              	.L138:
 1568              	.LCFI24:
 1569              		.cfi_restore_state
 1570 0026 1646     		mov	r6, r2
 1571 0028 0C46     		mov	r4, r1
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1572              		.loc 1 1108 0 discriminator 2
 1573 002a 0123     		movs	r3, #1
 1574 002c 2B74     		strb	r3, [r5, #16]
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1575              		.loc 1 1110 0 discriminator 2
 1576 002e 0223     		movs	r3, #2
 1577 0030 6B74     		strb	r3, [r5, #17]
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1578              		.loc 1 1113 0 discriminator 2
 1579 0032 0022     		movs	r2, #0
 1580              	.LVL196:
 1581 0034 01A9     		add	r1, sp, #4
 1582              	.LVL197:
 1583 0036 2846     		mov	r0, r5
 1584 0038 FFF7FEFF 		bl	HAL_RTC_GetTime
 1585              	.LVL198:
 1586 003c 0028     		cmp	r0, #0
 1587 003e 46D1     		bne	.L136
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Minutes * 60U) + \
ARM GAS  /tmp/ccGDryUz.s 			page 66


 1588              		.loc 1 1119 0
 1589 0040 9DF80470 		ldrb	r7, [sp, #4]	@ zero_extendqisi2
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Seconds));
 1590              		.loc 1 1120 0
 1591 0044 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 1592 0048 C3EB0313 		rsb	r3, r3, r3, lsl #4
 1593 004c 9A00     		lsls	r2, r3, #2
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Minutes * 60U) + \
 1594              		.loc 1 1119 0
 1595 004e 4FF46163 		mov	r3, #3600
 1596 0052 03FB0727 		mla	r7, r3, r7, r2
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1597              		.loc 1 1121 0
 1598 0056 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Minutes * 60U) + \
 1599              		.loc 1 1119 0
 1600 005a 1F44     		add	r7, r7, r3
 1601              	.LVL199:
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1602              		.loc 1 1123 0
 1603 005c D6B9     		cbnz	r6, .L129
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1604              		.loc 1 1129 0
 1605 005e 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Seconds));
 1606              		.loc 1 1130 0
 1607 0060 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1608 0062 C3EB0313 		rsb	r3, r3, r3, lsl #4
 1609 0066 9800     		lsls	r0, r3, #2
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1610              		.loc 1 1129 0
 1611 0068 4FF46163 		mov	r3, #3600
 1612 006c 03FB0101 		mla	r1, r3, r1, r0
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1613              		.loc 1 1131 0
 1614 0070 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1615              		.loc 1 1129 0
 1616 0072 0144     		add	r1, r1, r0
 1617              	.LVL200:
 1618              	.L130:
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1619              		.loc 1 1145 0
 1620 0074 B942     		cmp	r1, r7
 1621 0076 03D2     		bcs	.L131
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1622              		.loc 1 1148 0
 1623 0078 01F5A831 		add	r1, r1, #86016
 1624              	.LVL201:
 1625 007c 01F5C071 		add	r1, r1, #384
 1626              	.LVL202:
 1627              	.L131:
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1628              		.loc 1 1152 0
 1629 0080 2846     		mov	r0, r5
 1630 0082 FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1631              	.LVL203:
ARM GAS  /tmp/ccGDryUz.s 			page 67


 1632 0086 0346     		mov	r3, r0
 1633 0088 B8B9     		cbnz	r0, .L139
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1634              		.loc 1 1164 0
 1635 008a 0122     		movs	r2, #1
 1636 008c 6A74     		strb	r2, [r5, #17]
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1637              		.loc 1 1166 0
 1638 008e 0022     		movs	r2, #0
 1639 0090 2A74     		strb	r2, [r5, #16]
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1640              		.loc 1 1168 0
 1641 0092 C5E7     		b	.L128
 1642              	.LVL204:
 1643              	.L129:
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 1644              		.loc 1 1139 0
 1645 0094 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1646 0096 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1647              	.LVL205:
 1648 009a 4FF46166 		mov	r6, #3600
 1649              	.LVL206:
 1650 009e 06FB00F6 		mul	r6, r6, r0
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
 1651              		.loc 1 1140 0
 1652 00a2 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1653 00a4 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1654              	.LVL207:
 1655 00a8 C0EB0010 		rsb	r0, r0, r0, lsl #4
 1656 00ac 8100     		lsls	r1, r0, #2
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 1657              		.loc 1 1139 0
 1658 00ae 0E44     		add	r6, r6, r1
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1659              		.loc 1 1141 0
 1660 00b0 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 1661 00b2 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1662              	.LVL208:
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 1663              		.loc 1 1139 0
 1664 00b6 3118     		adds	r1, r6, r0
 1665              	.LVL209:
 1666 00b8 DCE7     		b	.L130
 1667              	.LVL210:
 1668              	.L139:
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1669              		.loc 1 1155 0
 1670 00ba 0423     		movs	r3, #4
 1671 00bc 6B74     		strb	r3, [r5, #17]
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1672              		.loc 1 1158 0
 1673 00be 0023     		movs	r3, #0
 1674 00c0 2B74     		strb	r3, [r5, #16]
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1675              		.loc 1 1160 0
 1676 00c2 0123     		movs	r3, #1
 1677 00c4 ACE7     		b	.L128
ARM GAS  /tmp/ccGDryUz.s 			page 68


 1678              	.LVL211:
 1679              	.L133:
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1680              		.loc 1 1100 0
 1681 00c6 0123     		movs	r3, #1
 1682 00c8 AAE7     		b	.L128
 1683              	.L134:
 1684 00ca 0123     		movs	r3, #1
 1685 00cc A8E7     		b	.L128
 1686              	.LVL212:
 1687              	.L136:
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1688              		.loc 1 1115 0
 1689 00ce 0123     		movs	r3, #1
 1690 00d0 A6E7     		b	.L128
 1691              		.cfi_endproc
 1692              	.LFE73:
 1694              		.section	.text.HAL_RTC_SetAlarm_IT,"ax",%progbits
 1695              		.align	1
 1696              		.global	HAL_RTC_SetAlarm_IT
 1697              		.syntax unified
 1698              		.thumb
 1699              		.thumb_func
 1700              		.fpu softvfp
 1702              	HAL_RTC_SetAlarm_IT:
 1703              	.LFB74:
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U, counter_time;
 1704              		.loc 1 1185 0
 1705              		.cfi_startproc
 1706              		@ args = 0, pretend = 0, frame = 8
 1707              		@ frame_needed = 0, uses_anonymous_args = 0
 1708              	.LVL213:
 1709 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1710              	.LCFI25:
 1711              		.cfi_def_cfa_offset 20
 1712              		.cfi_offset 4, -20
 1713              		.cfi_offset 5, -16
 1714              		.cfi_offset 6, -12
 1715              		.cfi_offset 7, -8
 1716              		.cfi_offset 14, -4
 1717 0002 83B0     		sub	sp, sp, #12
 1718              	.LCFI26:
 1719              		.cfi_def_cfa_offset 32
 1720              	.LVL214:
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1721              		.loc 1 1187 0
 1722 0004 0023     		movs	r3, #0
 1723 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 1724 000a 8DF80630 		strb	r3, [sp, #6]
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1725              		.loc 1 1190 0
 1726 000e 0028     		cmp	r0, #0
 1727 0010 6BD0     		beq	.L146
 1728 0012 0546     		mov	r5, r0
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1729              		.loc 1 1190 0 is_stmt 0 discriminator 1
 1730 0014 0029     		cmp	r1, #0
ARM GAS  /tmp/ccGDryUz.s 			page 69


 1731 0016 6AD0     		beq	.L147
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1732              		.loc 1 1200 0 is_stmt 1
 1733 0018 007C     		ldrb	r0, [r0, #16]	@ zero_extendqisi2
 1734              	.LVL215:
 1735 001a 0128     		cmp	r0, #1
 1736 001c 03D1     		bne	.L151
 1737 001e 0223     		movs	r3, #2
 1738              	.LVL216:
 1739              	.L141:
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1740              		.loc 1 1273 0
 1741 0020 1846     		mov	r0, r3
 1742 0022 03B0     		add	sp, sp, #12
 1743              	.LCFI27:
 1744              		.cfi_remember_state
 1745              		.cfi_def_cfa_offset 20
 1746              		@ sp needed
 1747 0024 F0BD     		pop	{r4, r5, r6, r7, pc}
 1748              	.LVL217:
 1749              	.L151:
 1750              	.LCFI28:
 1751              		.cfi_restore_state
 1752 0026 1646     		mov	r6, r2
 1753 0028 0C46     		mov	r4, r1
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1754              		.loc 1 1200 0 discriminator 2
 1755 002a 0123     		movs	r3, #1
 1756 002c 2B74     		strb	r3, [r5, #16]
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1757              		.loc 1 1202 0 discriminator 2
 1758 002e 0223     		movs	r3, #2
 1759 0030 6B74     		strb	r3, [r5, #17]
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1760              		.loc 1 1205 0 discriminator 2
 1761 0032 0022     		movs	r2, #0
 1762              	.LVL218:
 1763 0034 01A9     		add	r1, sp, #4
 1764              	.LVL219:
 1765 0036 2846     		mov	r0, r5
 1766 0038 FFF7FEFF 		bl	HAL_RTC_GetTime
 1767              	.LVL220:
 1768 003c 0028     		cmp	r0, #0
 1769 003e 58D1     		bne	.L149
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Minutes * 60U) + \
 1770              		.loc 1 1211 0
 1771 0040 9DF80470 		ldrb	r7, [sp, #4]	@ zero_extendqisi2
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Seconds));
 1772              		.loc 1 1212 0
 1773 0044 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 1774 0048 C3EB0313 		rsb	r3, r3, r3, lsl #4
 1775 004c 9A00     		lsls	r2, r3, #2
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Minutes * 60U) + \
 1776              		.loc 1 1211 0
 1777 004e 4FF46163 		mov	r3, #3600
 1778 0052 03FB0727 		mla	r7, r3, r7, r2
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  /tmp/ccGDryUz.s 			page 70


 1779              		.loc 1 1213 0
 1780 0056 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Minutes * 60U) + \
 1781              		.loc 1 1211 0
 1782 005a 1F44     		add	r7, r7, r3
 1783              	.LVL221:
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1784              		.loc 1 1215 0
 1785 005c 66BB     		cbnz	r6, .L142
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1786              		.loc 1 1221 0
 1787 005e 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Seconds));
 1788              		.loc 1 1222 0
 1789 0060 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1790 0062 C3EB0313 		rsb	r3, r3, r3, lsl #4
 1791 0066 9800     		lsls	r0, r3, #2
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1792              		.loc 1 1221 0
 1793 0068 4FF46163 		mov	r3, #3600
 1794 006c 03FB0101 		mla	r1, r3, r1, r0
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1795              		.loc 1 1223 0
 1796 0070 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1797              		.loc 1 1221 0
 1798 0072 0144     		add	r1, r1, r0
 1799              	.LVL222:
 1800              	.L143:
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1801              		.loc 1 1237 0
 1802 0074 B942     		cmp	r1, r7
 1803 0076 03D2     		bcs	.L144
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1804              		.loc 1 1240 0
 1805 0078 01F5A831 		add	r1, r1, #86016
 1806              	.LVL223:
 1807 007c 01F5C071 		add	r1, r1, #384
 1808              	.LVL224:
 1809              	.L144:
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1810              		.loc 1 1244 0
 1811 0080 2846     		mov	r0, r5
 1812 0082 FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1813              	.LVL225:
 1814 0086 0346     		mov	r3, r0
 1815 0088 48BB     		cbnz	r0, .L152
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1816              		.loc 1 1257 0
 1817 008a 2A68     		ldr	r2, [r5]
 1818 008c 6FF00201 		mvn	r1, #2
 1819 0090 5160     		str	r1, [r2, #4]
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1820              		.loc 1 1260 0
 1821 0092 2968     		ldr	r1, [r5]
 1822 0094 0A68     		ldr	r2, [r1]
 1823 0096 42F00202 		orr	r2, r2, #2
ARM GAS  /tmp/ccGDryUz.s 			page 71


 1824 009a 0A60     		str	r2, [r1]
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1825              		.loc 1 1263 0
 1826 009c 164A     		ldr	r2, .L153
 1827 009e 1168     		ldr	r1, [r2]
 1828 00a0 41F40031 		orr	r1, r1, #131072
 1829 00a4 1160     		str	r1, [r2]
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1830              		.loc 1 1265 0
 1831 00a6 9168     		ldr	r1, [r2, #8]
 1832 00a8 41F40031 		orr	r1, r1, #131072
 1833 00ac 9160     		str	r1, [r2, #8]
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1834              		.loc 1 1267 0
 1835 00ae 0122     		movs	r2, #1
 1836 00b0 6A74     		strb	r2, [r5, #17]
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1837              		.loc 1 1269 0
 1838 00b2 0022     		movs	r2, #0
 1839 00b4 2A74     		strb	r2, [r5, #16]
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1840              		.loc 1 1271 0
 1841 00b6 B3E7     		b	.L141
 1842              	.LVL226:
 1843              	.L142:
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 1844              		.loc 1 1231 0
 1845 00b8 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1846 00ba FFF7FEFF 		bl	RTC_Bcd2ToByte
 1847              	.LVL227:
 1848 00be 4FF46166 		mov	r6, #3600
 1849              	.LVL228:
 1850 00c2 06FB00F6 		mul	r6, r6, r0
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
 1851              		.loc 1 1232 0
 1852 00c6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1853 00c8 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1854              	.LVL229:
 1855 00cc C0EB0010 		rsb	r0, r0, r0, lsl #4
 1856 00d0 8100     		lsls	r1, r0, #2
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 1857              		.loc 1 1231 0
 1858 00d2 0E44     		add	r6, r6, r1
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1859              		.loc 1 1233 0
 1860 00d4 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 1861 00d6 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1862              	.LVL230:
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 1863              		.loc 1 1231 0
 1864 00da 3118     		adds	r1, r6, r0
 1865              	.LVL231:
 1866 00dc CAE7     		b	.L143
 1867              	.LVL232:
 1868              	.L152:
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1869              		.loc 1 1247 0
ARM GAS  /tmp/ccGDryUz.s 			page 72


 1870 00de 0423     		movs	r3, #4
 1871 00e0 6B74     		strb	r3, [r5, #17]
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1872              		.loc 1 1250 0
 1873 00e2 0023     		movs	r3, #0
 1874 00e4 2B74     		strb	r3, [r5, #16]
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1875              		.loc 1 1252 0
 1876 00e6 0123     		movs	r3, #1
 1877 00e8 9AE7     		b	.L141
 1878              	.LVL233:
 1879              	.L146:
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1880              		.loc 1 1192 0
 1881 00ea 0123     		movs	r3, #1
 1882 00ec 98E7     		b	.L141
 1883              	.L147:
 1884 00ee 0123     		movs	r3, #1
 1885 00f0 96E7     		b	.L141
 1886              	.LVL234:
 1887              	.L149:
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1888              		.loc 1 1207 0
 1889 00f2 0123     		movs	r3, #1
 1890 00f4 94E7     		b	.L141
 1891              	.L154:
 1892 00f6 00BF     		.align	2
 1893              	.L153:
 1894 00f8 00040140 		.word	1073808384
 1895              		.cfi_endproc
 1896              	.LFE74:
 1898              		.section	.text.HAL_RTC_GetAlarm,"ax",%progbits
 1899              		.align	1
 1900              		.global	HAL_RTC_GetAlarm
 1901              		.syntax unified
 1902              		.thumb
 1903              		.thumb_func
 1904              		.fpu softvfp
 1906              	HAL_RTC_GetAlarm:
 1907              	.LFB75:
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U;
 1908              		.loc 1 1290 0
 1909              		.cfi_startproc
 1910              		@ args = 0, pretend = 0, frame = 0
 1911              		@ frame_needed = 0, uses_anonymous_args = 0
 1912              	.LVL235:
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1913              		.loc 1 1297 0
 1914 0000 90B3     		cbz	r0, .L157
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1915              		.loc 1 1297 0 is_stmt 0 discriminator 1
 1916 0002 99B3     		cbz	r1, .L158
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U;
 1917              		.loc 1 1290 0 is_stmt 1
 1918 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1919              	.LCFI29:
 1920              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccGDryUz.s 			page 73


 1921              		.cfi_offset 3, -24
 1922              		.cfi_offset 4, -20
 1923              		.cfi_offset 5, -16
 1924              		.cfi_offset 6, -12
 1925              		.cfi_offset 7, -8
 1926              		.cfi_offset 14, -4
 1927 0006 1D46     		mov	r5, r3
 1928 0008 0C46     		mov	r4, r1
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1929              		.loc 1 1307 0
 1930 000a FFF7FEFF 		bl	RTC_ReadAlarmCounter
 1931              	.LVL236:
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((counter_alarm % 3600U) / 60U);
 1932              		.loc 1 1311 0
 1933 000e 1949     		ldr	r1, .L164
 1934 0010 A1FB0031 		umull	r3, r1, r1, r0
 1935 0014 C90A     		lsrs	r1, r1, #11
 1936 0016 184A     		ldr	r2, .L164+4
 1937 0018 A2FB0132 		umull	r3, r2, r2, r1
 1938 001c 1209     		lsrs	r2, r2, #4
 1939 001e 02EB4202 		add	r2, r2, r2, lsl #1
 1940 0022 D300     		lsls	r3, r2, #3
 1941 0024 CA1A     		subs	r2, r1, r3
 1942 0026 D3B2     		uxtb	r3, r2
 1943 0028 2370     		strb	r3, [r4]
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)((counter_alarm % 3600U) % 60U);
 1944              		.loc 1 1312 0
 1945 002a 4FF46167 		mov	r7, #3600
 1946 002e 07FB1107 		mls	r7, r7, r1, r0
 1947 0032 124A     		ldr	r2, .L164+8
 1948 0034 A2FB0712 		umull	r1, r2, r2, r7
 1949 0038 5209     		lsrs	r2, r2, #5
 1950 003a D6B2     		uxtb	r6, r2
 1951 003c 6670     		strb	r6, [r4, #1]
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1952              		.loc 1 1313 0
 1953 003e C2EB0212 		rsb	r2, r2, r2, lsl #4
 1954 0042 9000     		lsls	r0, r2, #2
 1955              	.LVL237:
 1956 0044 381A     		subs	r0, r7, r0
 1957 0046 C7B2     		uxtb	r7, r0
 1958 0048 A770     		strb	r7, [r4, #2]
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1959              		.loc 1 1315 0
 1960 004a 8DB1     		cbz	r5, .L159
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes);
 1961              		.loc 1 1317 0
 1962 004c 1846     		mov	r0, r3
 1963 004e FFF7FEFF 		bl	RTC_ByteToBcd2
 1964              	.LVL238:
 1965 0052 2070     		strb	r0, [r4]
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds);
 1966              		.loc 1 1318 0
 1967 0054 3046     		mov	r0, r6
 1968 0056 FFF7FEFF 		bl	RTC_ByteToBcd2
 1969              	.LVL239:
 1970 005a 6070     		strb	r0, [r4, #1]
ARM GAS  /tmp/ccGDryUz.s 			page 74


1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1971              		.loc 1 1319 0
 1972 005c 3846     		mov	r0, r7
 1973 005e FFF7FEFF 		bl	RTC_ByteToBcd2
 1974              	.LVL240:
 1975 0062 A070     		strb	r0, [r4, #2]
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1976              		.loc 1 1322 0
 1977 0064 0020     		movs	r0, #0
 1978 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1979              	.LVL241:
 1980              	.L157:
 1981              	.LCFI30:
 1982              		.cfi_def_cfa_offset 0
 1983              		.cfi_restore 3
 1984              		.cfi_restore 4
 1985              		.cfi_restore 5
 1986              		.cfi_restore 6
 1987              		.cfi_restore 7
 1988              		.cfi_restore 14
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1989              		.loc 1 1299 0
 1990 0068 0120     		movs	r0, #1
 1991              	.LVL242:
 1992 006a 7047     		bx	lr
 1993              	.LVL243:
 1994              	.L158:
 1995 006c 0120     		movs	r0, #1
 1996              	.LVL244:
 1997 006e 7047     		bx	lr
 1998              	.LVL245:
 1999              	.L159:
 2000              	.LCFI31:
 2001              		.cfi_def_cfa_offset 24
 2002              		.cfi_offset 3, -24
 2003              		.cfi_offset 4, -20
 2004              		.cfi_offset 5, -16
 2005              		.cfi_offset 6, -12
 2006              		.cfi_offset 7, -8
 2007              		.cfi_offset 14, -4
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2008              		.loc 1 1322 0
 2009 0070 0020     		movs	r0, #0
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2010              		.loc 1 1323 0
 2011 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2012              	.LVL246:
 2013              	.L165:
 2014              		.align	2
 2015              	.L164:
 2016 0074 C5B3A291 		.word	-1851608123
 2017 0078 ABAAAAAA 		.word	-1431655765
 2018 007c 89888888 		.word	-2004318071
 2019              		.cfi_endproc
 2020              	.LFE75:
 2022              		.section	.text.HAL_RTC_DeactivateAlarm,"ax",%progbits
 2023              		.align	1
ARM GAS  /tmp/ccGDryUz.s 			page 75


 2024              		.global	HAL_RTC_DeactivateAlarm
 2025              		.syntax unified
 2026              		.thumb
 2027              		.thumb_func
 2028              		.fpu softvfp
 2030              	HAL_RTC_DeactivateAlarm:
 2031              	.LFB76:
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 2032              		.loc 1 1335 0
 2033              		.cfi_startproc
 2034              		@ args = 0, pretend = 0, frame = 0
 2035              		@ frame_needed = 0, uses_anonymous_args = 0
 2036              	.LVL247:
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2037              		.loc 1 1343 0
 2038 0000 0028     		cmp	r0, #0
 2039 0002 38D0     		beq	.L170
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 2040              		.loc 1 1335 0
 2041 0004 10B5     		push	{r4, lr}
 2042              	.LCFI32:
 2043              		.cfi_def_cfa_offset 8
 2044              		.cfi_offset 4, -8
 2045              		.cfi_offset 14, -4
 2046 0006 0446     		mov	r4, r0
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2047              		.loc 1 1349 0
 2048 0008 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 2049 000a 012B     		cmp	r3, #1
 2050 000c 02D1     		bne	.L176
 2051 000e 0223     		movs	r3, #2
 2052              	.LVL248:
 2053              	.L167:
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2054              		.loc 1 1396 0
 2055 0010 1846     		mov	r0, r3
 2056 0012 10BD     		pop	{r4, pc}
 2057              	.LVL249:
 2058              	.L176:
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2059              		.loc 1 1349 0 discriminator 2
 2060 0014 0123     		movs	r3, #1
 2061 0016 0374     		strb	r3, [r0, #16]
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2062              		.loc 1 1351 0 discriminator 2
 2063 0018 0223     		movs	r3, #2
 2064 001a 4374     		strb	r3, [r0, #17]
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2065              		.loc 1 1354 0 discriminator 2
 2066 001c 0268     		ldr	r2, [r0]
 2067 001e 1368     		ldr	r3, [r2]
 2068 0020 23F00203 		bic	r3, r3, #2
 2069 0024 1360     		str	r3, [r2]
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2070              		.loc 1 1357 0 discriminator 2
 2071 0026 FFF7FEFF 		bl	RTC_EnterInitMode
 2072              	.LVL250:
ARM GAS  /tmp/ccGDryUz.s 			page 76


 2073 002a 28B1     		cbz	r0, .L168
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2074              		.loc 1 1360 0
 2075 002c 0423     		movs	r3, #4
 2076 002e 6374     		strb	r3, [r4, #17]
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2077              		.loc 1 1363 0
 2078 0030 0023     		movs	r3, #0
 2079 0032 2374     		strb	r3, [r4, #16]
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2080              		.loc 1 1365 0
 2081 0034 0123     		movs	r3, #1
 2082 0036 EBE7     		b	.L167
 2083              	.L168:
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2084              		.loc 1 1370 0
 2085 0038 2368     		ldr	r3, [r4]
 2086 003a 6FF00202 		mvn	r2, #2
 2087 003e 5A60     		str	r2, [r3, #4]
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRL, RTC_ALARM_RESETVALUE_REGISTER);
 2088              		.loc 1 1373 0
 2089 0040 2268     		ldr	r2, [r4]
 2090 0042 4FF6FF73 		movw	r3, #65535
 2091 0046 1362     		str	r3, [r2, #32]
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2092              		.loc 1 1374 0
 2093 0048 2268     		ldr	r2, [r4]
 2094 004a 5362     		str	r3, [r2, #36]
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2095              		.loc 1 1377 0
 2096 004c 0B4A     		ldr	r2, .L178
 2097 004e 1368     		ldr	r3, [r2]
 2098 0050 23F40033 		bic	r3, r3, #131072
 2099 0054 1360     		str	r3, [r2]
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2100              		.loc 1 1380 0
 2101 0056 2046     		mov	r0, r4
 2102 0058 FFF7FEFF 		bl	RTC_ExitInitMode
 2103              	.LVL251:
 2104 005c 0346     		mov	r3, r0
 2105 005e 20B9     		cbnz	r0, .L177
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2106              		.loc 1 1390 0
 2107 0060 0122     		movs	r2, #1
 2108 0062 6274     		strb	r2, [r4, #17]
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2109              		.loc 1 1393 0
 2110 0064 0022     		movs	r2, #0
 2111 0066 2274     		strb	r2, [r4, #16]
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2112              		.loc 1 1395 0
 2113 0068 D2E7     		b	.L167
 2114              	.L177:
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2115              		.loc 1 1382 0
 2116 006a 0423     		movs	r3, #4
 2117 006c 6374     		strb	r3, [r4, #17]
ARM GAS  /tmp/ccGDryUz.s 			page 77


1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2118              		.loc 1 1385 0
 2119 006e 0023     		movs	r3, #0
 2120 0070 2374     		strb	r3, [r4, #16]
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2121              		.loc 1 1387 0
 2122 0072 0123     		movs	r3, #1
 2123 0074 CCE7     		b	.L167
 2124              	.LVL252:
 2125              	.L170:
 2126              	.LCFI33:
 2127              		.cfi_def_cfa_offset 0
 2128              		.cfi_restore 4
 2129              		.cfi_restore 14
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2130              		.loc 1 1345 0
 2131 0076 0123     		movs	r3, #1
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2132              		.loc 1 1396 0
 2133 0078 1846     		mov	r0, r3
 2134              	.LVL253:
 2135 007a 7047     		bx	lr
 2136              	.L179:
 2137              		.align	2
 2138              	.L178:
 2139 007c 00040140 		.word	1073808384
 2140              		.cfi_endproc
 2141              	.LFE76:
 2143              		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 2144              		.align	1
 2145              		.weak	HAL_RTC_AlarmAEventCallback
 2146              		.syntax unified
 2147              		.thumb
 2148              		.thumb_func
 2149              		.fpu softvfp
 2151              	HAL_RTC_AlarmAEventCallback:
 2152              	.LFB78:
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 2153              		.loc 1 1437 0
 2154              		.cfi_startproc
 2155              		@ args = 0, pretend = 0, frame = 0
 2156              		@ frame_needed = 0, uses_anonymous_args = 0
 2157              		@ link register save eliminated.
 2158              	.LVL254:
 2159 0000 7047     		bx	lr
 2160              		.cfi_endproc
 2161              	.LFE78:
 2163              		.section	.text.HAL_RTC_AlarmIRQHandler,"ax",%progbits
 2164              		.align	1
 2165              		.global	HAL_RTC_AlarmIRQHandler
 2166              		.syntax unified
 2167              		.thumb
 2168              		.thumb_func
 2169              		.fpu softvfp
 2171              	HAL_RTC_AlarmIRQHandler:
 2172              	.LFB77:
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA))
ARM GAS  /tmp/ccGDryUz.s 			page 78


 2173              		.loc 1 1405 0
 2174              		.cfi_startproc
 2175              		@ args = 0, pretend = 0, frame = 0
 2176              		@ frame_needed = 0, uses_anonymous_args = 0
 2177              	.LVL255:
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA))
 2178              		.loc 1 1405 0
 2179 0000 10B5     		push	{r4, lr}
 2180              	.LCFI34:
 2181              		.cfi_def_cfa_offset 8
 2182              		.cfi_offset 4, -8
 2183              		.cfi_offset 14, -4
 2184 0002 0446     		mov	r4, r0
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2185              		.loc 1 1406 0
 2186 0004 0368     		ldr	r3, [r0]
 2187 0006 1A68     		ldr	r2, [r3]
 2188 0008 12F0020F 		tst	r2, #2
 2189 000c 03D0     		beq	.L182
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2190              		.loc 1 1409 0
 2191 000e 5B68     		ldr	r3, [r3, #4]
 2192 0010 13F0020F 		tst	r3, #2
 2193 0014 06D1     		bne	.L184
 2194              	.LVL256:
 2195              	.L182:
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2196              		.loc 1 1424 0
 2197 0016 4FF40032 		mov	r2, #131072
 2198 001a 064B     		ldr	r3, .L185
 2199 001c 5A61     		str	r2, [r3, #20]
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2200              		.loc 1 1427 0
 2201 001e 0123     		movs	r3, #1
 2202 0020 6374     		strb	r3, [r4, #17]
 2203 0022 10BD     		pop	{r4, pc}
 2204              	.LVL257:
 2205              	.L184:
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 2206              		.loc 1 1415 0
 2207 0024 FFF7FEFF 		bl	HAL_RTC_AlarmAEventCallback
 2208              	.LVL258:
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2209              		.loc 1 1419 0
 2210 0028 2368     		ldr	r3, [r4]
 2211 002a 6FF00202 		mvn	r2, #2
 2212 002e 5A60     		str	r2, [r3, #4]
 2213 0030 F1E7     		b	.L182
 2214              	.L186:
 2215 0032 00BF     		.align	2
 2216              	.L185:
 2217 0034 00040140 		.word	1073808384
 2218              		.cfi_endproc
 2219              	.LFE77:
 2221              		.section	.text.HAL_RTC_PollForAlarmAEvent,"ax",%progbits
 2222              		.align	1
 2223              		.global	HAL_RTC_PollForAlarmAEvent
ARM GAS  /tmp/ccGDryUz.s 			page 79


 2224              		.syntax unified
 2225              		.thumb
 2226              		.thumb_func
 2227              		.fpu softvfp
 2229              	HAL_RTC_PollForAlarmAEvent:
 2230              	.LFB79:
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = HAL_GetTick();
 2231              		.loc 1 1453 0
 2232              		.cfi_startproc
 2233              		@ args = 0, pretend = 0, frame = 0
 2234              		@ frame_needed = 0, uses_anonymous_args = 0
 2235              	.LVL259:
 2236 0000 70B5     		push	{r4, r5, r6, lr}
 2237              	.LCFI35:
 2238              		.cfi_def_cfa_offset 16
 2239              		.cfi_offset 4, -16
 2240              		.cfi_offset 5, -12
 2241              		.cfi_offset 6, -8
 2242              		.cfi_offset 14, -4
 2243 0002 0446     		mov	r4, r0
 2244 0004 0D46     		mov	r5, r1
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2245              		.loc 1 1454 0
 2246 0006 FFF7FEFF 		bl	HAL_GetTick
 2247              	.LVL260:
 2248 000a 0646     		mov	r6, r0
 2249              	.LVL261:
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2250              		.loc 1 1457 0
 2251 000c BCB1     		cbz	r4, .L195
 2252              	.LVL262:
 2253              	.L190:
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2254              		.loc 1 1462 0
 2255 000e 2368     		ldr	r3, [r4]
 2256 0010 5A68     		ldr	r2, [r3, #4]
 2257 0012 12F0020F 		tst	r2, #2
 2258 0016 0BD1     		bne	.L196
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2259              		.loc 1 1464 0
 2260 0018 B5F1FF3F 		cmp	r5, #-1
 2261 001c F7D0     		beq	.L190
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 2262              		.loc 1 1466 0
 2263 001e 25B1     		cbz	r5, .L191
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 2264              		.loc 1 1466 0 is_stmt 0 discriminator 1
 2265 0020 FFF7FEFF 		bl	HAL_GetTick
 2266              	.LVL263:
 2267 0024 801B     		subs	r0, r0, r6
 2268 0026 8542     		cmp	r5, r0
 2269 0028 F1D2     		bcs	.L190
 2270              	.L191:
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_TIMEOUT;
 2271              		.loc 1 1468 0 is_stmt 1
 2272 002a 0320     		movs	r0, #3
 2273 002c 6074     		strb	r0, [r4, #17]
ARM GAS  /tmp/ccGDryUz.s 			page 80


1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 2274              		.loc 1 1469 0
 2275 002e 70BD     		pop	{r4, r5, r6, pc}
 2276              	.LVL264:
 2277              	.L196:
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2278              		.loc 1 1475 0
 2279 0030 6FF00202 		mvn	r2, #2
 2280 0034 5A60     		str	r2, [r3, #4]
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2281              		.loc 1 1478 0
 2282 0036 0123     		movs	r3, #1
 2283 0038 6374     		strb	r3, [r4, #17]
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2284              		.loc 1 1480 0
 2285 003a 0020     		movs	r0, #0
 2286 003c 70BD     		pop	{r4, r5, r6, pc}
 2287              	.LVL265:
 2288              	.L195:
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2289              		.loc 1 1459 0
 2290 003e 0120     		movs	r0, #1
 2291              	.LVL266:
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2292              		.loc 1 1481 0
 2293 0040 70BD     		pop	{r4, r5, r6, pc}
 2294              		.cfi_endproc
 2295              	.LFE79:
 2297              		.section	.text.HAL_RTC_GetState,"ax",%progbits
 2298              		.align	1
 2299              		.global	HAL_RTC_GetState
 2300              		.syntax unified
 2301              		.thumb
 2302              		.thumb_func
 2303              		.fpu softvfp
 2305              	HAL_RTC_GetState:
 2306              	.LFB80:
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return hrtc->State;
 2307              		.loc 1 1508 0
 2308              		.cfi_startproc
 2309              		@ args = 0, pretend = 0, frame = 0
 2310              		@ frame_needed = 0, uses_anonymous_args = 0
 2311              		@ link register save eliminated.
 2312              	.LVL267:
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2313              		.loc 1 1509 0
 2314 0000 407C     		ldrb	r0, [r0, #17]	@ zero_extendqisi2
 2315              	.LVL268:
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2316              		.loc 1 1510 0
 2317 0002 7047     		bx	lr
 2318              		.cfi_endproc
 2319              	.LFE80:
 2321              		.section	.text.HAL_RTC_WaitForSynchro,"ax",%progbits
 2322              		.align	1
 2323              		.global	HAL_RTC_WaitForSynchro
 2324              		.syntax unified
ARM GAS  /tmp/ccGDryUz.s 			page 81


 2325              		.thumb
 2326              		.thumb_func
 2327              		.fpu softvfp
 2329              	HAL_RTC_WaitForSynchro:
 2330              	.LFB81:
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 2331              		.loc 1 1541 0
 2332              		.cfi_startproc
 2333              		@ args = 0, pretend = 0, frame = 0
 2334              		@ frame_needed = 0, uses_anonymous_args = 0
 2335              	.LVL269:
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2336              		.loc 1 1545 0
 2337 0000 C0B1     		cbz	r0, .L202
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 2338              		.loc 1 1541 0
 2339 0002 38B5     		push	{r3, r4, r5, lr}
 2340              	.LCFI36:
 2341              		.cfi_def_cfa_offset 16
 2342              		.cfi_offset 3, -16
 2343              		.cfi_offset 4, -12
 2344              		.cfi_offset 5, -8
 2345              		.cfi_offset 14, -4
 2346 0004 0446     		mov	r4, r0
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2347              		.loc 1 1551 0
 2348 0006 0268     		ldr	r2, [r0]
 2349 0008 5368     		ldr	r3, [r2, #4]
 2350 000a 23F00803 		bic	r3, r3, #8
 2351 000e 5360     		str	r3, [r2, #4]
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2352              		.loc 1 1553 0
 2353 0010 FFF7FEFF 		bl	HAL_GetTick
 2354              	.LVL270:
 2355 0014 0546     		mov	r5, r0
 2356              	.LVL271:
 2357              	.L200:
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2358              		.loc 1 1556 0
 2359 0016 2368     		ldr	r3, [r4]
 2360 0018 5B68     		ldr	r3, [r3, #4]
 2361 001a 13F0080F 		tst	r3, #8
 2362 001e 07D1     		bne	.L208
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2363              		.loc 1 1558 0
 2364 0020 FFF7FEFF 		bl	HAL_GetTick
 2365              	.LVL272:
 2366 0024 401B     		subs	r0, r0, r5
 2367 0026 B0F57A7F 		cmp	r0, #1000
 2368 002a F4D9     		bls	.L200
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2369              		.loc 1 1560 0
 2370 002c 0320     		movs	r0, #3
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2371              		.loc 1 1565 0
 2372 002e 38BD     		pop	{r3, r4, r5, pc}
 2373              	.LVL273:
ARM GAS  /tmp/ccGDryUz.s 			page 82


 2374              	.L208:
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2375              		.loc 1 1564 0
 2376 0030 0020     		movs	r0, #0
 2377 0032 38BD     		pop	{r3, r4, r5, pc}
 2378              	.LVL274:
 2379              	.L202:
 2380              	.LCFI37:
 2381              		.cfi_def_cfa_offset 0
 2382              		.cfi_restore 3
 2383              		.cfi_restore 4
 2384              		.cfi_restore 5
 2385              		.cfi_restore 14
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2386              		.loc 1 1547 0
 2387 0034 0120     		movs	r0, #1
 2388              	.LVL275:
 2389 0036 7047     		bx	lr
 2390              		.cfi_endproc
 2391              	.LFE81:
 2393              		.section	.text.HAL_RTC_Init,"ax",%progbits
 2394              		.align	1
 2395              		.global	HAL_RTC_Init
 2396              		.syntax unified
 2397              		.thumb
 2398              		.thumb_func
 2399              		.fpu softvfp
 2401              	HAL_RTC_Init:
 2402              	.LFB65:
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t prescaler = 0U;
 2403              		.loc 1 276 0
 2404              		.cfi_startproc
 2405              		@ args = 0, pretend = 0, frame = 0
 2406              		@ frame_needed = 0, uses_anonymous_args = 0
 2407              	.LVL276:
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2408              		.loc 1 279 0
 2409 0000 0028     		cmp	r0, #0
 2410 0002 5AD0     		beq	.L218
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t prescaler = 0U;
 2411              		.loc 1 276 0
 2412 0004 10B5     		push	{r4, lr}
 2413              	.LCFI38:
 2414              		.cfi_def_cfa_offset 8
 2415              		.cfi_offset 4, -8
 2416              		.cfi_offset 14, -4
 2417 0006 0446     		mov	r4, r0
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2418              		.loc 1 311 0
 2419 0008 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 2420 000a 53B1     		cbz	r3, .L223
 2421              	.LVL277:
 2422              	.L211:
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2423              		.loc 1 322 0
 2424 000c 0223     		movs	r3, #2
 2425 000e 6374     		strb	r3, [r4, #17]
ARM GAS  /tmp/ccGDryUz.s 			page 83


 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2426              		.loc 1 325 0
 2427 0010 2046     		mov	r0, r4
 2428 0012 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 2429              	.LVL278:
 2430 0016 40B1     		cbz	r0, .L212
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2431              		.loc 1 328 0
 2432 0018 0423     		movs	r3, #4
 2433 001a 6374     		strb	r3, [r4, #17]
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2434              		.loc 1 330 0
 2435 001c 0123     		movs	r3, #1
 2436              	.LVL279:
 2437              	.L210:
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2438              		.loc 1 402 0
 2439 001e 1846     		mov	r0, r3
 2440 0020 10BD     		pop	{r4, pc}
 2441              	.LVL280:
 2442              	.L223:
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2443              		.loc 1 314 0
 2444 0022 0374     		strb	r3, [r0, #16]
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2445              		.loc 1 317 0
 2446 0024 FFF7FEFF 		bl	HAL_RTC_MspInit
 2447              	.LVL281:
 2448 0028 F0E7     		b	.L211
 2449              	.L212:
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2450              		.loc 1 334 0
 2451 002a 2046     		mov	r0, r4
 2452 002c FFF7FEFF 		bl	RTC_EnterInitMode
 2453              	.LVL282:
 2454 0030 0028     		cmp	r0, #0
 2455 0032 30D1     		bne	.L224
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2456              		.loc 1 344 0
 2457 0034 2268     		ldr	r2, [r4]
 2458 0036 5368     		ldr	r3, [r2, #4]
 2459 0038 23F00703 		bic	r3, r3, #7
 2460 003c 5360     		str	r3, [r2, #4]
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2461              		.loc 1 346 0
 2462 003e A368     		ldr	r3, [r4, #8]
 2463 0040 23B1     		cbz	r3, .L214
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2464              		.loc 1 349 0
 2465 0042 1F4A     		ldr	r2, .L228
 2466 0044 136B     		ldr	r3, [r2, #48]
 2467 0046 23F00103 		bic	r3, r3, #1
 2468 004a 1363     		str	r3, [r2, #48]
 2469              	.L214:
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2470              		.loc 1 353 0
 2471 004c 1C4A     		ldr	r2, .L228
ARM GAS  /tmp/ccGDryUz.s 			page 84


 2472 004e D36A     		ldr	r3, [r2, #44]
 2473 0050 23F46073 		bic	r3, r3, #896
 2474 0054 A168     		ldr	r1, [r4, #8]
 2475 0056 0B43     		orrs	r3, r3, r1
 2476 0058 D362     		str	r3, [r2, #44]
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2477              		.loc 1 355 0
 2478 005a 6068     		ldr	r0, [r4, #4]
 2479 005c B0F1FF3F 		cmp	r0, #-1
 2480 0060 1DD0     		beq	.L225
 2481              	.LVL283:
 2482              	.L215:
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     MODIFY_REG(hrtc->Instance->PRLL, RTC_PRLL_PRL, (prescaler & RTC_PRLL_PRL));
 2483              		.loc 1 381 0
 2484 0062 2268     		ldr	r2, [r4]
 2485 0064 9368     		ldr	r3, [r2, #8]
 2486 0066 23F00F03 		bic	r3, r3, #15
 2487 006a 43EA1043 		orr	r3, r3, r0, lsr #16
 2488 006e 9360     		str	r3, [r2, #8]
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2489              		.loc 1 382 0
 2490 0070 2268     		ldr	r2, [r4]
 2491 0072 D368     		ldr	r3, [r2, #12]
 2492 0074 1B0C     		lsrs	r3, r3, #16
 2493 0076 1B04     		lsls	r3, r3, #16
 2494 0078 80B2     		uxth	r0, r0
 2495              	.LVL284:
 2496 007a 0343     		orrs	r3, r3, r0
 2497 007c D360     		str	r3, [r2, #12]
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2498              		.loc 1 385 0
 2499 007e 2046     		mov	r0, r4
 2500 0080 FFF7FEFF 		bl	RTC_ExitInitMode
 2501              	.LVL285:
 2502 0084 0346     		mov	r3, r0
 2503 0086 A0B9     		cbnz	r0, .L226
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = RTC_MONTH_JANUARY;
 2504              		.loc 1 393 0
 2505 0088 0022     		movs	r2, #0
 2506 008a E273     		strb	r2, [r4, #15]
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date = 0x01U;
 2507              		.loc 1 394 0
 2508 008c 0122     		movs	r2, #1
 2509 008e 6273     		strb	r2, [r4, #13]
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2510              		.loc 1 395 0
 2511 0090 A273     		strb	r2, [r4, #14]
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2512              		.loc 1 398 0
 2513 0092 6274     		strb	r2, [r4, #17]
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2514              		.loc 1 400 0
 2515 0094 C3E7     		b	.L210
 2516              	.LVL286:
 2517              	.L224:
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2518              		.loc 1 337 0
ARM GAS  /tmp/ccGDryUz.s 			page 85


 2519 0096 0423     		movs	r3, #4
 2520 0098 6374     		strb	r3, [r4, #17]
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2521              		.loc 1 339 0
 2522 009a 0123     		movs	r3, #1
 2523 009c BFE7     		b	.L210
 2524              	.L225:
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2525              		.loc 1 364 0
 2526 009e 0120     		movs	r0, #1
 2527 00a0 FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 2528              	.LVL287:
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 2529              		.loc 1 367 0
 2530 00a4 08B1     		cbz	r0, .L227
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 2531              		.loc 1 376 0
 2532 00a6 0138     		subs	r0, r0, #1
 2533              	.LVL288:
 2534 00a8 DBE7     		b	.L215
 2535              	.L227:
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_ERROR;
 2536              		.loc 1 370 0
 2537 00aa 0423     		movs	r3, #4
 2538 00ac 6374     		strb	r3, [r4, #17]
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 2539              		.loc 1 371 0
 2540 00ae 0123     		movs	r3, #1
 2541 00b0 B5E7     		b	.L210
 2542              	.LVL289:
 2543              	.L226:
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2544              		.loc 1 387 0
 2545 00b2 0423     		movs	r3, #4
 2546 00b4 6374     		strb	r3, [r4, #17]
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2547              		.loc 1 389 0
 2548 00b6 0123     		movs	r3, #1
 2549 00b8 B1E7     		b	.L210
 2550              	.LVL290:
 2551              	.L218:
 2552              	.LCFI39:
 2553              		.cfi_def_cfa_offset 0
 2554              		.cfi_restore 4
 2555              		.cfi_restore 14
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2556              		.loc 1 281 0
 2557 00ba 0123     		movs	r3, #1
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2558              		.loc 1 402 0
 2559 00bc 1846     		mov	r0, r3
 2560              	.LVL291:
 2561 00be 7047     		bx	lr
 2562              	.L229:
 2563              		.align	2
 2564              	.L228:
 2565 00c0 006C0040 		.word	1073769472
ARM GAS  /tmp/ccGDryUz.s 			page 86


 2566              		.cfi_endproc
 2567              	.LFE65:
 2569              		.section	.text.HAL_RTC_DeInit,"ax",%progbits
 2570              		.align	1
 2571              		.global	HAL_RTC_DeInit
 2572              		.syntax unified
 2573              		.thumb
 2574              		.thumb_func
 2575              		.fpu softvfp
 2577              	HAL_RTC_DeInit:
 2578              	.LFB66:
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 2579              		.loc 1 412 0
 2580              		.cfi_startproc
 2581              		@ args = 0, pretend = 0, frame = 0
 2582              		@ frame_needed = 0, uses_anonymous_args = 0
 2583              	.LVL292:
 2584 0000 38B5     		push	{r3, r4, r5, lr}
 2585              	.LCFI40:
 2586              		.cfi_def_cfa_offset 16
 2587              		.cfi_offset 3, -16
 2588              		.cfi_offset 4, -12
 2589              		.cfi_offset 5, -8
 2590              		.cfi_offset 14, -4
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2591              		.loc 1 414 0
 2592 0002 0028     		cmp	r0, #0
 2593 0004 35D0     		beq	.L234
 2594 0006 0446     		mov	r4, r0
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2595              		.loc 1 423 0
 2596 0008 0223     		movs	r3, #2
 2597 000a 4374     		strb	r3, [r0, #17]
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2598              		.loc 1 426 0
 2599 000c FFF7FEFF 		bl	RTC_EnterInitMode
 2600              	.LVL293:
 2601 0010 30B1     		cbz	r0, .L232
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2602              		.loc 1 429 0
 2603 0012 0423     		movs	r3, #4
 2604 0014 6374     		strb	r3, [r4, #17]
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2605              		.loc 1 432 0
 2606 0016 0023     		movs	r3, #0
 2607 0018 2374     		strb	r3, [r4, #16]
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2608              		.loc 1 434 0
 2609 001a 0125     		movs	r5, #1
 2610              	.LVL294:
 2611              	.L231:
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2612              		.loc 1 484 0
 2613 001c 2846     		mov	r0, r5
 2614 001e 38BD     		pop	{r3, r4, r5, pc}
 2615              	.LVL295:
 2616              	.L232:
ARM GAS  /tmp/ccGDryUz.s 			page 87


 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CNTH);
 2617              		.loc 1 438 0
 2618 0020 2268     		ldr	r2, [r4]
 2619 0022 0023     		movs	r3, #0
 2620 0024 D361     		str	r3, [r2, #28]
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->PRLL, 0x00008000U);
 2621              		.loc 1 439 0
 2622 0026 2268     		ldr	r2, [r4]
 2623 0028 9361     		str	r3, [r2, #24]
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->PRLH);
 2624              		.loc 1 440 0
 2625 002a 2268     		ldr	r2, [r4]
 2626 002c 4FF40041 		mov	r1, #32768
 2627 0030 D160     		str	r1, [r2, #12]
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2628              		.loc 1 441 0
 2629 0032 2268     		ldr	r2, [r4]
 2630 0034 9360     		str	r3, [r2, #8]
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CRL);
 2631              		.loc 1 444 0
 2632 0036 2268     		ldr	r2, [r4]
 2633 0038 1360     		str	r3, [r2]
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2634              		.loc 1 445 0
 2635 003a 2268     		ldr	r2, [r4]
 2636 003c 5360     		str	r3, [r2, #4]
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2637              		.loc 1 447 0
 2638 003e 2046     		mov	r0, r4
 2639 0040 FFF7FEFF 		bl	RTC_ExitInitMode
 2640              	.LVL296:
 2641 0044 0546     		mov	r5, r0
 2642 0046 28B1     		cbz	r0, .L233
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2643              		.loc 1 449 0
 2644 0048 0423     		movs	r3, #4
 2645 004a 6374     		strb	r3, [r4, #17]
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2646              		.loc 1 452 0
 2647 004c 0023     		movs	r3, #0
 2648 004e 2374     		strb	r3, [r4, #16]
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2649              		.loc 1 454 0
 2650 0050 0125     		movs	r5, #1
 2651 0052 E3E7     		b	.L231
 2652              	.L233:
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2653              		.loc 1 459 0
 2654 0054 2046     		mov	r0, r4
 2655 0056 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 2656              	.LVL297:
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2657              		.loc 1 462 0
 2658 005a 2268     		ldr	r2, [r4]
 2659 005c 5368     		ldr	r3, [r2, #4]
 2660 005e 23F00803 		bic	r3, r3, #8
 2661 0062 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccGDryUz.s 			page 88


 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS) */
 2662              		.loc 1 475 0
 2663 0064 2046     		mov	r0, r4
 2664 0066 FFF7FEFF 		bl	HAL_RTC_MspDeInit
 2665              	.LVL298:
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2666              		.loc 1 478 0
 2667 006a 0023     		movs	r3, #0
 2668 006c 6374     		strb	r3, [r4, #17]
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2669              		.loc 1 481 0
 2670 006e 2374     		strb	r3, [r4, #16]
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2671              		.loc 1 483 0
 2672 0070 D4E7     		b	.L231
 2673              	.LVL299:
 2674              	.L234:
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2675              		.loc 1 416 0
 2676 0072 0125     		movs	r5, #1
 2677 0074 D2E7     		b	.L231
 2678              		.cfi_endproc
 2679              	.LFE66:
 2681              		.text
 2682              	.Letext0:
 2683              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2684              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2685              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 2686              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2687              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2688              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2689              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2690              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 2691              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2692              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
ARM GAS  /tmp/ccGDryUz.s 			page 89


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_rtc.c
     /tmp/ccGDryUz.s:16     .text.RTC_ReadTimeCounter:0000000000000000 $t
     /tmp/ccGDryUz.s:22     .text.RTC_ReadTimeCounter:0000000000000000 RTC_ReadTimeCounter
     /tmp/ccGDryUz.s:83     .text.RTC_ReadAlarmCounter:0000000000000000 $t
     /tmp/ccGDryUz.s:89     .text.RTC_ReadAlarmCounter:0000000000000000 RTC_ReadAlarmCounter
     /tmp/ccGDryUz.s:114    .text.RTC_ByteToBcd2:0000000000000000 $t
     /tmp/ccGDryUz.s:120    .text.RTC_ByteToBcd2:0000000000000000 RTC_ByteToBcd2
     /tmp/ccGDryUz.s:158    .text.RTC_Bcd2ToByte:0000000000000000 $t
     /tmp/ccGDryUz.s:164    .text.RTC_Bcd2ToByte:0000000000000000 RTC_Bcd2ToByte
     /tmp/ccGDryUz.s:188    .text.RTC_IsLeapYear:0000000000000000 $t
     /tmp/ccGDryUz.s:194    .text.RTC_IsLeapYear:0000000000000000 RTC_IsLeapYear
     /tmp/ccGDryUz.s:245    .text.RTC_IsLeapYear:000000000000003c $d
     /tmp/ccGDryUz.s:250    .text.RTC_WeekDayNum:0000000000000000 $t
     /tmp/ccGDryUz.s:256    .text.RTC_WeekDayNum:0000000000000000 RTC_WeekDayNum
     /tmp/ccGDryUz.s:344    .text.RTC_WeekDayNum:0000000000000090 $d
     /tmp/ccGDryUz.s:351    .text.RTC_DateUpdate:0000000000000000 $t
     /tmp/ccGDryUz.s:357    .text.RTC_DateUpdate:0000000000000000 RTC_DateUpdate
     /tmp/ccGDryUz.s:537    .text.RTC_EnterInitMode:0000000000000000 $t
     /tmp/ccGDryUz.s:543    .text.RTC_EnterInitMode:0000000000000000 RTC_EnterInitMode
     /tmp/ccGDryUz.s:593    .text.RTC_ExitInitMode:0000000000000000 $t
     /tmp/ccGDryUz.s:599    .text.RTC_ExitInitMode:0000000000000000 RTC_ExitInitMode
     /tmp/ccGDryUz.s:650    .text.RTC_WriteTimeCounter:0000000000000000 $t
     /tmp/ccGDryUz.s:656    .text.RTC_WriteTimeCounter:0000000000000000 RTC_WriteTimeCounter
     /tmp/ccGDryUz.s:709    .text.RTC_WriteAlarmCounter:0000000000000000 $t
     /tmp/ccGDryUz.s:715    .text.RTC_WriteAlarmCounter:0000000000000000 RTC_WriteAlarmCounter
     /tmp/ccGDryUz.s:768    .text.HAL_RTC_MspInit:0000000000000000 $t
     /tmp/ccGDryUz.s:775    .text.HAL_RTC_MspInit:0000000000000000 HAL_RTC_MspInit
     /tmp/ccGDryUz.s:788    .text.HAL_RTC_MspDeInit:0000000000000000 $t
     /tmp/ccGDryUz.s:795    .text.HAL_RTC_MspDeInit:0000000000000000 HAL_RTC_MspDeInit
     /tmp/ccGDryUz.s:808    .text.HAL_RTC_SetTime:0000000000000000 $t
     /tmp/ccGDryUz.s:815    .text.HAL_RTC_SetTime:0000000000000000 HAL_RTC_SetTime
     /tmp/ccGDryUz.s:976    .text.HAL_RTC_GetTime:0000000000000000 $t
     /tmp/ccGDryUz.s:983    .text.HAL_RTC_GetTime:0000000000000000 HAL_RTC_GetTime
     /tmp/ccGDryUz.s:1203   .text.HAL_RTC_GetTime:0000000000000110 $d
     /tmp/ccGDryUz.s:1212   .text.HAL_RTC_SetDate:0000000000000000 $t
     /tmp/ccGDryUz.s:1219   .text.HAL_RTC_SetDate:0000000000000000 HAL_RTC_SetDate
     /tmp/ccGDryUz.s:1405   .text.HAL_RTC_SetDate:00000000000000cc $d
     /tmp/ccGDryUz.s:1412   .text.HAL_RTC_GetDate:0000000000000000 $t
     /tmp/ccGDryUz.s:1419   .text.HAL_RTC_GetDate:0000000000000000 HAL_RTC_GetDate
     /tmp/ccGDryUz.s:1513   .text.HAL_RTC_SetAlarm:0000000000000000 $t
     /tmp/ccGDryUz.s:1520   .text.HAL_RTC_SetAlarm:0000000000000000 HAL_RTC_SetAlarm
     /tmp/ccGDryUz.s:1695   .text.HAL_RTC_SetAlarm_IT:0000000000000000 $t
     /tmp/ccGDryUz.s:1702   .text.HAL_RTC_SetAlarm_IT:0000000000000000 HAL_RTC_SetAlarm_IT
     /tmp/ccGDryUz.s:1894   .text.HAL_RTC_SetAlarm_IT:00000000000000f8 $d
     /tmp/ccGDryUz.s:1899   .text.HAL_RTC_GetAlarm:0000000000000000 $t
     /tmp/ccGDryUz.s:1906   .text.HAL_RTC_GetAlarm:0000000000000000 HAL_RTC_GetAlarm
     /tmp/ccGDryUz.s:2016   .text.HAL_RTC_GetAlarm:0000000000000074 $d
     /tmp/ccGDryUz.s:2023   .text.HAL_RTC_DeactivateAlarm:0000000000000000 $t
     /tmp/ccGDryUz.s:2030   .text.HAL_RTC_DeactivateAlarm:0000000000000000 HAL_RTC_DeactivateAlarm
     /tmp/ccGDryUz.s:2139   .text.HAL_RTC_DeactivateAlarm:000000000000007c $d
     /tmp/ccGDryUz.s:2144   .text.HAL_RTC_AlarmAEventCallback:0000000000000000 $t
     /tmp/ccGDryUz.s:2151   .text.HAL_RTC_AlarmAEventCallback:0000000000000000 HAL_RTC_AlarmAEventCallback
     /tmp/ccGDryUz.s:2164   .text.HAL_RTC_AlarmIRQHandler:0000000000000000 $t
     /tmp/ccGDryUz.s:2171   .text.HAL_RTC_AlarmIRQHandler:0000000000000000 HAL_RTC_AlarmIRQHandler
     /tmp/ccGDryUz.s:2217   .text.HAL_RTC_AlarmIRQHandler:0000000000000034 $d
     /tmp/ccGDryUz.s:2222   .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 $t
ARM GAS  /tmp/ccGDryUz.s 			page 90


     /tmp/ccGDryUz.s:2229   .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 HAL_RTC_PollForAlarmAEvent
     /tmp/ccGDryUz.s:2298   .text.HAL_RTC_GetState:0000000000000000 $t
     /tmp/ccGDryUz.s:2305   .text.HAL_RTC_GetState:0000000000000000 HAL_RTC_GetState
     /tmp/ccGDryUz.s:2322   .text.HAL_RTC_WaitForSynchro:0000000000000000 $t
     /tmp/ccGDryUz.s:2329   .text.HAL_RTC_WaitForSynchro:0000000000000000 HAL_RTC_WaitForSynchro
     /tmp/ccGDryUz.s:2394   .text.HAL_RTC_Init:0000000000000000 $t
     /tmp/ccGDryUz.s:2401   .text.HAL_RTC_Init:0000000000000000 HAL_RTC_Init
     /tmp/ccGDryUz.s:2565   .text.HAL_RTC_Init:00000000000000c0 $d
     /tmp/ccGDryUz.s:2570   .text.HAL_RTC_DeInit:0000000000000000 $t
     /tmp/ccGDryUz.s:2577   .text.HAL_RTC_DeInit:0000000000000000 HAL_RTC_DeInit
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_RCCEx_GetPeriphCLKFreq
